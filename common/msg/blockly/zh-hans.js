(() => {

'use strict';
goog.require('Blockly.Lang');
goog.provide('Blockly.Lang.ZhHans');

const { ZhHans } = Blockly.Lang;
ZhHans.MSG = {
    catInOut: "输入/输出",
    catControl: "控制",
    catMath: "数学",
    catText: "文本",
    catLists: "数组",
    catMicropyLists: "列表",
    catDicts: "字典",
    catLogic: "逻辑",
    catSerialPort: "串口",
    catGroup: "通信",
    catIR: "红外通信",
    catESPNow: "ESPNow通信",
    catLora: "Lora通信",
    catI2C: "I2C通信",
    catSPI: "SPI通信",
    catSocket: "无线插座",
    catRFID: "RFID",
    catStorage: "存储",
    catStorageSD: 'SD',
    catStorageSPIFFS: 'SPIFFS',
    catStorageEEPROM: 'EEPROM',
    catME_GO:"ME GO",
    catME_G1:"ME G1",
    catPE_G1:"PE G1",
    catCE_G6:"CE G6",
    catCC_G1:"CC G1",
    catMINI_G2:"MINI G2",
    catSANT_G2:"SANT G2",
    catNova_G1:"Nova G1",
    catAIOT:"智能物联",
    catAIsensor:"MixGoAI智能传感",
    catAIsensor2:"MixGoAI图像识别",
    catSensor: "传感器",
    catActuator: "执行器",
    catExternSensor: "外接传感",
    catExternAI: "机器视觉",
    catExternActuator: "外接执行",
    catExternMonitor: "外接显示",
    catActuator_motor: "电机",
    catActuator_voice: "声音",
    catActuator_light: "光线",
    catMonitor: "显示器",
    catVar: "变量",
    catFun: "函数",
    catNetwork: "网络",
    catEthernet: "以太网",
    catEthernet_init: "初始化",
    catEthernet_clinet: "客户端",
    tab_blocks: "模块",
    tab_arduino: "代码",
    copyright: "Copyright © Mixly Team@BNU, CHINA",
    catGame: "游戏",
    sub_game_1:"自定义地图",
    sub_game_2:"角色操作",
    catSystem: "系统",
    catTurtle: "海龟画图",
    catTuple: "元组",
    catIot: "物联网",
    catSet: "集合",
    catData: "数据分析",
    catAlgorithm: "算法",
    sub_algorithm_1: "送同学回家1",
	sub_algorithm_2: "送同学回家2",
	sub_algorithm_3: "贪心算法",
	sub_algorithm_4: "汉诺塔",
	sub_algorithm_5: "找书问题",
	sub_algorithm_6: "韩信点兵",
	sub_algorithm_7: "鸡兔同笼问题",
	sub_algorithm_8: "分治算法",
    catCv: "图像处理",
    catHardware: "硬件交互",
    catAI: "人工智能",
    catHear: "机器听觉",
    catImage: "机器视觉",
    catTFT: "TFT显示屏",
    catAV: "音视频",
    catCamera: "摄像头",
    catImage_Draw: "图像绘制",
    catImage_Base: "图像基础",
    catImage_Filte: "图像滤波",
    catImage_Shpe: "形状识别",
    catImage_Color: "颜色识别",
    catImage_Codes: "维码识别",
    catImage_Features: "特征识别",
    catShaw: '硬件说明',
    catDS: "数据结构",
    catOnBoard: '板载资源',
    catOnBoardDisplay: '板载显示',
    catOnBoardOled: '板载显示',
    catOnBoardSensor: '板载传感',
    catOnBoardActuator: '板载执行',
    cat4Digitdisplay: '四位数码管',
    catLCD: 'LCD液晶屏',
    catOLED: 'OLED显示屏',
    catMatrix: '点阵屏',
    catFactory: '自定义模块',
    catBlynk: 'Blynk',
    catFile: '文件',
    catOnenet: 'OneNET',
    catTools: '工具',
    catWIFI: 'Wi-Fi',
    catMQTT: 'MQTT',
    catsklearn: '机器学习',
    catclass_make: "类与对象",
    catclass: "类",
    catproperty: "属性",
    catmethod: "方法",
    catobject: "对象",
    catEvents: "事件",
    catExtend: "外接元件",
    catMixIO: "MixIO",
    catCommunicate: "网络请求",
    undo: "撤销",
    redo: "重做",
    file: "文件",
    new: "新建",
    open: "打开",
    save: "保存",
    save_blocks: "保存MIX",
    save_py: "保存PY",
    save_ino: "保存INO",
    save_img: "保存图片",
    save_hex: "保存HEX",
    setting: "设置",
    language: "语言",
    theme: "主题",
    connect: "连接",
    upload: "上传",
    step_run: "分步运行",
    run: "运行",
    stop: "取消",
    fn: "文件名",
    download: "下载",
    choose_theme: "请选择主题：",
    choose_language: "请选择语言：",
    confirm_newfile: "是否希望清除画布所有内容？",
    newfile_yes: "残忍清除",
    newfile_no: "我再想想",
    burn: "初始化固件",
    submit:"保存到平台",
    upload_to_board: "上传到板卡",
    statusbar: "状态栏",
    operate: "操作",
    compile: "编译",
    import_libraries: "导入库",
    export_libraries: "导出库",
    manage_libraries: "管理库",
    change_board: "切换板卡",
    save_as: "另存为",
    simulate: "仿真",
    disconnect: "断开",
    catweather: "心知天气",
    view_btn: "云端文件",
    view_file: "资源",
    open_from_cloud: "云端打开",
    save_ser: "云端保存",
    windowSize: "窗口尺寸",
    catRadio: "无线广播",
    catMusic: "音乐",
    catAudio: "音频",
    catNeopixel: "RGB灯",
    catOneWire: "OneWire通信",
    catBLE: "蓝牙透传",
    catBLEC:"蓝牙遥控",
    catBLEKM:"蓝牙键鼠",
    catBLE_HID: "外围设备(从机)",
    catBLE_UART: "中心设备(主机)",
    catBLE_PERIPHERAL: "串口透传",
    catBLE_CENTERAL: "人机交互",
    catBLE_IBEACON: "iBeacon设备",
    other_firmware: "固件",
    catWebData: "网络数据",
    feedback: "反馈",
    disablePythonToBlockly: "图文互换",
    enablePythonToBlockly: "图文互换",
    catSearch: "查找",
    wiki: "Wiki"
};

/* 多重选择 */
ZhHans.CROSS_TAB_COPY = '跨页面复制';
// ZhHans.CROSS_TAB_COPY_X_BLOCKS = '跨页面复制 %1 块';
ZhHans.CROSS_TAB_PASTE = '跨页面粘贴';
ZhHans.SELECT_ALL = '选中所有块';

/* 下载模块图像 */
ZhHans.DOWNLOAD_SCREENSHOT = '下载模块图像';

/* 小地图 */
ZhHans.MINIMAP_OPEN = '展开缩略图';
ZhHans.MINIMAP_CLOSE = '折叠缩略图';

/* 背包 */
ZhHans.COPY_ALL_TO_BACKPACK = '复制所有块到背包';
ZhHans.COPY_TO_BACKPACK = '加入背包';
ZhHans.EMPTY_BACKPACK = '清空';
ZhHans.PASTE_ALL_FROM_BACKPACK = '提取背包中所有块';
ZhHans.REMOVE_FROM_BACKPACK = '从背包中移除';

/* 工作区块查找 */
ZhHans.WORKSPACE_SEARCH_OPEN = '查找块';
ZhHans.SEARCH = '查找';

/* Blockly.FieldBitmap文本翻译 */
ZhHans.RANDOM = '随机';
ZhHans.CLEAR = '清空';

/* Blockly.FieldColourHsvSliders文本翻译 */
ZhHans.HUE = '色调';
ZhHans.SATURATION = '饱和度';
ZhHans.BRIGHTNESS = '亮度';
ZhHans.EYEDROPPER = '取色器';

/* Blockly.FieldDate文本翻译 */
ZhHans.TODAY = '今天';

ZhHans.WORKSPACE_COMMENT_DEFAULT_TEXT = "说点什么...";
ZhHans.REMOVE_COMMENT = "删除注释";
ZhHans.DUPLICATE_COMMENT = "复制注释";
ZhHans.ADD_COMMENT = "添加注释";
ZhHans.AUTH = "请授权这个应用程序以保存您的作品并共享。";
ZhHans.CHANGE_VALUE_TITLE = "更改值：";
ZhHans.CHAT = "通过在此框输入与您的合作者沟通！";
ZhHans.CLEAN_UP = "整理块";
ZhHans.COLLAPSE_ALL = "折叠所有块";
ZhHans.COLLAPSE_BLOCK = "折叠块";
// ZhHans.COLLAPSE_X_BLOCKS = "折叠 %1 块";
ZhHans.DELETE_ALL_BLOCKS = '删除所有 %1 个块吗？';
ZhHans.DELETE_BLOCK = "删除块";
// ZhHans.DELETE_X_BLOCKS = "删除 %1 块";
ZhHans.DISABLE_BLOCK = "禁用块";
// ZhHans.DISABLE_X_BLOCKS = "禁用 %1 块";
ZhHans.DUPLICATE_BLOCK = "复制";
// ZhHans.DUPLICATE_X_BLOCKS = "复制 %1 块";
ZhHans.ENABLE_BLOCK = "启用块";
// ZhHans.ENABLE_X_BLOCKS = "启用 %1 块";
ZhHans.EXPAND_ALL = "展开所有块";
ZhHans.EXPAND_BLOCK = "展开块";
// ZhHans.EXPAND_X_BLOCKS = "展开 %1 块";
ZhHans.COLOUR_BLEND_COLOUR1 = "颜色1";
ZhHans.COLOUR_BLEND_COLOUR2 = "颜色2";
ZhHans.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
ZhHans.COLOUR_BLEND_RATIO = "比例";
ZhHans.COLOUR_BLEND_TITLE = "混合";
ZhHans.COLOUR_BLEND_TOOLTIP = "用一个给定的比率(0.0-1.0)混合两种颜色。";
ZhHans.COLOUR_PICKER_HELPURL = "https://zh.wikipedia.org/wiki/颜色";
ZhHans.COLOUR_PICKER_TOOLTIP = "从调色板中选择一种颜色。";
ZhHans.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
ZhHans.COLOUR_RANDOM_TITLE = "随机颜色";
ZhHans.COLOUR_RANDOM_TOOLTIP = "随机选择一种颜色。";
ZhHans.COLOUR_RGB_BLUE = "蓝色";
ZhHans.COLOUR_RGB_GREEN = "绿色";
ZhHans.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
ZhHans.COLOUR_RGB_RED = "红色";
ZhHans.COLOUR_RGB_TOOLTIP = "通过指定红色、绿色和蓝色的量创建一种颜色。所有的值必须介于0和100之间。";
ZhHans.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
ZhHans.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "中断循环";
ZhHans.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "继续下一次循环";
ZhHans.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "中断包含它的循环。";
ZhHans.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "跳过这个循环的剩余部分，并继续下一次迭代。";
ZhHans.CONTROLS_FLOW_STATEMENTS_WARNING = "警告：此块仅可用于在一个循环内。";
ZhHans.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each用于每个块";
ZhHans.CONTROLS_FOREACH_INPUT_INLIST = "对列表";
ZhHans.CONTROLS_FOREACH_INPUT_INLIST_TAIL = "";  // untranslated
ZhHans.CONTROLS_FOREACH_INPUT_ITEM = "中的每个项目";
ZhHans.CONTROLS_FOREACH_TOOLTIP = "遍历每个数组中的项目，将变量“%1”设定到该项中，然后执行某些语句。";
ZhHans.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";
ZhHans.CONTROLS_FOR_INPUT_FROM_TO = "from %1 to %2";  // untranslated
ZhHans.CONTROLS_FOR_INPUT_FROM_TO_BY = "从范围 %1 到 %2 每隔 %3";
ZhHans.CONTROLS_FOR_INPUT_WITH = "使用";
ZhHans.CONTROLS_FOR_TOOLTIP = "从起始数到结尾数中取出变量“%1”的值，按指定的间隔，执行指定的块。";
ZhHans.CONTROLS_IF_ELSEIF_TOOLTIP = "在if语句块中增加一个条件。";
ZhHans.CONTROLS_IF_ELSE_TOOLTIP = "添加一个最终的，包括所有情况的节到if块中。";
ZhHans.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
ZhHans.CONTROLS_IF_IF_TOOLTIP = "增加、删除或重新排列各节来重新配置“if”块。";
ZhHans.CONTROLS_IF_MSG_ELSE = "否则";
ZhHans.CONTROLS_IF_MSG_ELSEIF = "否则如果";
ZhHans.CONTROLS_IF_MSG_IF = "如果";
ZhHans.CONTROLS_IF_TOOLTIP_1 = "如果值为真，执行一些语句。";
ZhHans.CONTROLS_IF_TOOLTIP_2 = "如果值为真，则执行语句的第一块；否则，则执行语句的第二块。";
ZhHans.CONTROLS_IF_TOOLTIP_3 = "如果第一个值为真，则执行语句的第一个块；否则，如果第二个值为真，则执行语句的第二块。";
ZhHans.CONTROLS_IF_TOOLTIP_4 = "如果第一个值为真，则执行语句的第一块；否则，如果第二个值为真，则执行语句的第二块；如果没有值为真，则执行语句的最后一块。";
ZhHans.CONTROLS_REPEAT_HELPURL = "https://zh.wikipedia.org/wiki/For回圈";
ZhHans.CONTROLS_REPEAT_INPUT_DO = "执行";
ZhHans.CONTROLS_REPEAT_TITLE = "重复执行 %1 次";
ZhHans.CONTROLS_REPEAT_TITLE_REPEAT = "重复";
ZhHans.CONTROLS_REPEAT_TITLE_TIMES = "次";
ZhHans.CONTROLS_REPEAT_TOOLTIP = "多次执行一些语句。";
ZhHans.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
ZhHans.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "重复直到";
ZhHans.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "重复当";
ZhHans.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "只要值为假，执行一些语句";
ZhHans.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "只要值为真，执行一些语句";
ZhHans.EXTERNAL_INPUTS = "外部输入";
ZhHans.HELP = "帮助";
ZhHans.INLINE_INPUTS = "单行输入";
ZhHans.LISTS_CREATE_EMPTY_HELPURL = "https://en.wikipedia.org/wiki/Linked_list#Empty_lists";
ZhHans.LISTS_CREATE_EMPTY_TITLE = "初始化为空数组";
ZhHans.LISTS_CREATE_EMPTY_TOOLTIP = "返回一个数组，长度为 0，不包含任何数据记录";
ZhHans.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "数组";
ZhHans.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "增加、删除或重新排列各部分以此重新配置这个数组块。";
ZhHans.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
ZhHans.LISTS_CREATE_WITH_INPUT_WITH = "初始化数组为";
ZhHans.LISTS_CREATE_WITH_ITEM_TOOLTIP = "将一个项添加到数组中。";
ZhHans.LISTS_CREATE_WITH_TOOLTIP = "建立一个具有任意数量项目的数组。";
ZhHans.LISTS_GET_INDEX_FIRST = "第一项";
ZhHans.LISTS_GET_INDEX_FROM_END = "倒数第";
ZhHans.LISTS_GET_INDEX_FROM_START = "第";
ZhHans.LISTS_GET_INDEX_GET = "获得";
ZhHans.LISTS_GET_INDEX_GET_REMOVE = "取出并移除";
ZhHans.LISTS_GET_INDEX_LAST = "最后一项";
ZhHans.LISTS_GET_INDEX_RANDOM = "随机一项";
ZhHans.LISTS_GET_RANDOM_SUBLIST = "构成子列表";
ZhHans.LISTS_GET_INDEX_REMOVE = "移除";
ZhHans.LISTS_GET_INDEX_TAIL = "";
ZhHans.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "返回数组中的第一个项目。";
ZhHans.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "返回在列表中的指定位置的项。#1是最后一项。";
ZhHans.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "返回在列表中的指定位置的项。#1是第一个项目。";
ZhHans.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "返回数组中的最后一项。";
ZhHans.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "移除并返回数组中的第一个项目。";
ZhHans.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "移除并返回数组中的指定位置的项。#1 是最后一项。";
ZhHans.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "移除并返回数组中的指定位置的项。#1 是第一项。";
ZhHans.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "移除并返回数组中的最后一个项目。";
ZhHans.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "移除数组中的第一项";
ZhHans.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "删除在列表中的指定位置的项。#1是最后一项。";
ZhHans.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "移除在列表中的指定位置的项。#1 是第一项。";
ZhHans.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "移除数组中的最后一项";
ZhHans.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "删除数组中的一个随机的项。";
ZhHans.LISTS_GET_SUBLIST_END_FROM_END = "到倒数第";
ZhHans.LISTS_GET_SUBLIST_END_FROM_START = "到第";
ZhHans.LISTS_GET_SUBLIST_END_LAST = "到最后";
ZhHans.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
ZhHans.LISTS_GET_SUBLIST_START_FIRST = "从头";
ZhHans.LISTS_GET_SUBLIST_START_FROM_END = "从倒数第";
ZhHans.LISTS_GET_SUBLIST_START_FROM_START = "从第";
ZhHans.LISTS_GET_SUBLIST_TAIL = "获取列表";
ZhHans.LISTS_GET_SUBLIST_TOOLTIP = "复制数组中指定的部分。";
ZhHans.LISTS_INDEX_OF_FIRST = "找出第一个项出现";
ZhHans.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
ZhHans.LISTS_INDEX_OF_LAST = "找出最后一个项出现";
ZhHans.LISTS_INDEX_OF_TOOLTIP = "返回在列表中的第一/最后一个匹配项的索引值。如果未找到则返回 0。";
ZhHans.LISTS_INLIST = "在列表";
ZhHans.LISTS_IS_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
ZhHans.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
ZhHans.LISTS_LENGTH_TOOLTIP = "返回数组的长度。";
ZhHans.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
ZhHans.LISTS_REPEAT_TITLE = "建立列表使用项 %1 重复 %2 次";
ZhHans.LISTS_REPEAT_TOOLTIP = "建立包含指定重复次数的值的列表。";
ZhHans.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
ZhHans.LISTS_SET_INDEX_INPUT_TO = "为";
ZhHans.LISTS_SET_INDEX_INSERT = "插入在";
ZhHans.LISTS_SET_INDEX_SET = "设置";
ZhHans.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "在数组的起始处添加该项。";
ZhHans.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "插入在列表中的指定位置的项。#1是最后一项。";
ZhHans.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "插入在列表中指定位置的项。#1是第一项。";
ZhHans.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "将该项追加到数组的末尾。";
ZhHans.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "在列表中随机插入项。";
ZhHans.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "设置数组中的第一个项目。";
ZhHans.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "设置在列表中指定位置的项。#1是最后一项。";
ZhHans.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "设置在列表中指定位置的项。#1是第一项。";
ZhHans.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "设置数组中的最后一项。";
ZhHans.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "设置数组中一个随机的项目。";
ZhHans.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
ZhHans.LISTS_SPLIT_LIST_FROM_TEXT = "从文本制作数组";
ZhHans.LISTS_SPLIT_TEXT_FROM_LIST = "从数组拆出文本";
ZhHans.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
ZhHans.LISTS_SPLIT_TOOLTIP_SPLIT = "拆分文本到文本数组，按每个分隔符拆分。";
ZhHans.LISTS_SPLIT_WITH_DELIMITER = "用分隔符";
ZhHans.LISTS_TOOLTIP = "如果改数组为空，则返回真。";
ZhHans.LOGIC_BOOLEAN_FALSE = "假";
ZhHans.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
ZhHans.LOGIC_BOOLEAN_TOOLTIP = "返回真或假。";
ZhHans.LOGIC_BOOLEAN_TRUE = "真";
ZhHans.LOGIC_COMPARE_HELPURL = "https://zh.wikipedia.org/wiki/不等";
ZhHans.LOGIC_COMPARE_TOOLTIP_EQ = "如果两个输入结果相等，则返回真。";
ZhHans.LOGIC_COMPARE_TOOLTIP_GT = "如果第一个输入结果比第二个大，则返回真。";
ZhHans.LOGIC_COMPARE_TOOLTIP_GTE = "如果第一个输入结果大于或等于第二个输入结果，则返回真。";
ZhHans.LOGIC_COMPARE_TOOLTIP_LT = "如果第一个输入结果比第二个小，则返回真。";
ZhHans.LOGIC_COMPARE_TOOLTIP_LTE = "如果第一个输入结果小于或等于第二个输入结果，则返回真。";
ZhHans.LOGIC_COMPARE_TOOLTIP_NEQ = "如果两个输入结果不相等，则返回真。";
ZhHans.LOGIC_NEGATE_HELPURL = "https://zh.wikipedia.org/wiki/逻辑非";
ZhHans.LOGIC_NEGATE_TITLE = "非";
ZhHans.LOGIC_NEGATE_TOOLTIP = "如果输入结果为假，则返回真；如果输入结果为真，则返回假。";
ZhHans.LOGIC_NULL = "空";
ZhHans.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
ZhHans.LOGIC_NULL_TOOLTIP = "返回空值。";
ZhHans.LOGIC_OPERATION_AND = "且";
ZhHans.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
ZhHans.LOGIC_OPERATION_OR = "或";
ZhHans.LOGIC_OPERATION_TOOLTIP_AND = "如果两个输入结果都为真，则返回真。";
ZhHans.LOGIC_OPERATION_TOOLTIP_OR = "如果至少有一个输入结果为真，则返回真。";
ZhHans.LOGIC_TERNARY_CONDITION = "测试";
ZhHans.LOGIC_TERNARY_HELPURL = "https://zh.wikipedia.org/wiki/条件运算符";
ZhHans.LOGIC_TERNARY_IF_FALSE = "如果为假";
ZhHans.LOGIC_TERNARY_IF_TRUE = "如果为真";
ZhHans.LOGIC_TERNARY_TOOLTIP = "检查“test”中的条件。如果条件为真，则返回“if true”的值，否则，则返回“if false”的值。";
ZhHans.MATH_ADDITION_SYMBOL = "+";  // untranslated
ZhHans.MATH_ARITHMETIC_HELPURL = "https://zh.wikipedia.org/wiki/算术";
ZhHans.MATH_ARITHMETIC_TOOLTIP_ADD = "返回两个数字的和。";
ZhHans.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "返回两个数字的商。";
ZhHans.MATH_ARITHMETIC_TOOLTIP_MINUS = "返回两个数字的差。";
ZhHans.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "返回两个数字的乘积。";
ZhHans.MATH_ARITHMETIC_TOOLTIP_POWER = "返回第一个数的第二个数次幂。";
ZhHans.MATH_ARITHMETIC_TOOLTIP_QUYU = "返回第一个数对第二个数取余的值。";
ZhHans.MATH_CHANGE_HELPURL = "https://zh.wikipedia.org/wiki/%E5%8A%A0%E6%B3%95";
ZhHans.MATH_CHANGE_INPUT_BY = "由";
ZhHans.MATH_CHANGE_TITLE_CHANGE = "更改";
ZhHans.MATH_CHANGE_TOOLTIP = "将一个数添加到变量“%1”。";
ZhHans.MATH_CONSTANT_HELPURL = "https://zh.wikipedia.org/wiki/数学常数";
ZhHans.MATH_CONSTANT_TOOLTIP = "返回一个常见常量：π (3.141......)，e (2.718...)、φ (1.618...)、 sqrt(2) (1.414......)、sqrt(½) (0.707......)或 ∞（无穷大）。";
ZhHans.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";
ZhHans.MATH_CONSTRAIN_TITLE = "限制数字 %1 介于 (低) %2 到 (高) %3";
ZhHans.MATH_CONSTRAIN_TOOLTIP = "限制数字介于两个指定的数字之间";
ZhHans.MATH_DIVISION_SYMBOL = "÷";  // untranslated
ZhHans.MATH_IS_DIVISIBLE_BY = "可被整除";
ZhHans.MATH_IS_EVEN = "是偶数";
ZhHans.MATH_IS_NEGATIVE = "为负";
ZhHans.MATH_IS_ODD = "是奇数";
ZhHans.MATH_IS_POSITIVE = "是正值";
ZhHans.MATH_IS_PRIME = "是质数";
ZhHans.MATH_IS_TOOLTIP = "如果数字是偶数、奇数、非负整数、正数、负数或如果它可被某数字整除，则返回真或假。";
ZhHans.MATH_IS_WHOLE = "为整数";
ZhHans.MATH_MODULO_HELPURL = "https://zh.wikipedia.org/wiki/%E6%A8%A1%E9%99%A4";
ZhHans.MATH_MODULO_TITLE = "取余数自 %1 ÷ %2";
ZhHans.MATH_MODULO_TOOLTIP = "返回这两个数字相除后的余数。";
ZhHans.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
ZhHans.MATH_NUMBER_HELPURL = "https://zh.wikipedia.org/wiki/数字";
ZhHans.MATH_NUMBER_TOOLTIP = "一个数字。";
ZhHans.MATH_ONLIST_HELPURL = "";  // untranslated
ZhHans.MATH_ONLIST_OPERATOR_AVERAGE = "平均数";
ZhHans.MATH_ONLIST_OPERATOR_MAX = "最大值";
ZhHans.MATH_ONLIST_OPERATOR_MEDIAN = "中位数";
ZhHans.MATH_ONLIST_OPERATOR_MIN = "最小值";
ZhHans.MATH_ONLIST_OPERATOR_MODE = "众数";
ZhHans.MATH_ONLIST_OPERATOR_RANDOM = "随机项";
ZhHans.MATH_ONLIST_OPERATOR_STD_DEV = "标准差";
ZhHans.MATH_ONLIST_OPERATOR_SUM = "总和";
ZhHans.MATH_ONLIST_TOOLTIP_AVERAGE = "返回列表中的数值的平均值。";
ZhHans.MATH_ONLIST_TOOLTIP_MAX = "返回列表中最大数。";
ZhHans.MATH_ONLIST_TOOLTIP_MEDIAN = "返回列表中的中位数。";
ZhHans.MATH_ONLIST_TOOLTIP_MIN = "返回列表中最小数。";
ZhHans.MATH_ONLIST_TOOLTIP_MODE = "返回列表中的最常见的项的列表。";
ZhHans.MATH_ONLIST_TOOLTIP_RANDOM = "从列表中返回一个随机的元素。";
ZhHans.MATH_ONLIST_TOOLTIP_STD_DEV = "返回列表的标准偏差。";
ZhHans.MATH_ONLIST_TOOLTIP_SUM = "返回列表中的所有数字的和。";
ZhHans.MATH_POWER_SYMBOL = "^(幂)";  // untranslated
ZhHans.MATH_RANDOM_FLOAT_HELPURL = "https://zh.wikipedia.org/wiki/随机数发生器";
ZhHans.MATH_RANDOM_FLOAT_TITLE_RANDOM = "随机产生0到1之间的小数";
ZhHans.MATH_RANDOM_FLOAT_TOOLTIP = "返回介于（包含）0.0到1.0之间的随机数。";
ZhHans.MATH_RANDOM_INT_HELPURL = "https://zh.wikipedia.org/wiki/随机数发生器";
ZhHans.MATH_RANDOM_INT_TITLE = "从 %1 到 %2 之间的随机整数";
ZhHans.MATH_RANDOM_INT_TOOLTIP = "返回两个指定的范围（含）之间的随机";
ZhHans.MATH_ROUND_HELPURL = "https://zh.wikipedia.org/wiki/四舍五入";
ZhHans.MATH_ROUND_OPERATOR_ROUND = "向下舍入";
ZhHans.MATH_ROUND_OPERATOR_ROUNDUP = "向上舍入";
ZhHans.MATH_ROUND_TOOLTIP = "数字向上或向下舍入。";
ZhHans.MATH_SINGLE_HELPURL = "https://zh.wikipedia.org/wiki/平方根";
ZhHans.MATH_SINGLE_OP_ABSOLUTE = "绝对";
ZhHans.MATH_SINGLE_OP_ROOT = "平方根";
ZhHans.MATH_ABS = '取绝对值';
ZhHans.MATH_SQ = '平方';
ZhHans.MATH_SQRT = '平方根';
ZhHans.MATH_LOG = '自然对数';
ZhHans.MATH_SINGLE_TOOLTIP_ABS = "返回一个数的绝对值。";
ZhHans.MATH_SINGLE_TOOLTIP_EXP = "返回数的e次幂。";
ZhHans.MATH_SINGLE_TOOLTIP_LN = "返回一个数的自然对数。";
ZhHans.MATH_SINGLE_TOOLTIP_LOG10 = "返回数字的对数。";
ZhHans.MATH_SINGLE_TOOLTIP_NEG = "返回数的逻辑非。";
ZhHans.MATH_SINGLE_TOOLTIP_POW10 = "返回数的10次幂。";
ZhHans.MATH_SINGLE_TOOLTIP_ROOT = "返回一个数的平方根。";
ZhHans.MATH_SINGLE_TOOLTIP_SQ = "返回一个数的平方。";
ZhHans.MATH_SINGLE_TOOLTIP_TOINT = "返回一个数的整数部分。";
ZhHans.MATH_SINGLE_TOOLTIP_ROUND = "按照四舍五入的原则返回一个数的整数部分。";
ZhHans.MATH_SINGLE_TOOLTIP_CEIL = "返回大于或者等于一个数的最小整数。";
ZhHans.MATH_SINGLE_TOOLTIP_FLOOR = "返回小于或者等于一个数的最大整数。";
ZhHans.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
ZhHans.MATH_QUYU_SYMBOL = "%";
ZhHans.MATH_TRIG_ACOS = "acos";  // untranslated
ZhHans.MATH_TRIG_ASIN = "asin";  // untranslated
ZhHans.MATH_TRIG_ATAN = "atan";  // untranslated
ZhHans.MATH_TRIG_COS = "cos";  // untranslated
ZhHans.MATH_TRIG_HELPURL = "https://zh.wikipedia.org/wiki/三角函数";
ZhHans.MATH_TRIG_SIN = "sin";  // untranslated
ZhHans.MATH_TRIG_TAN = "tan";  // untranslated
ZhHans.MATH_TRIG_TOOLTIP_ACOS = "返回一个数的反余弦值。";
ZhHans.MATH_TRIG_TOOLTIP_ASIN = "返回一个数的反正弦值。";
ZhHans.MATH_TRIG_TOOLTIP_ATAN = "返回一个数的反正切值。";
ZhHans.MATH_TRIG_TOOLTIP_COS = "返回指定弧度的余弦值。";
ZhHans.MATH_TRIG_TOOLTIP_SIN = "返回指定弧度的正弦值。";
ZhHans.MATH_TRIG_TOOLTIP_TAN = "返回指定弧度的正切值。";
ZhHans.ME = "我";
ZhHans.NEW_VARIABLE = "新变量...";
ZhHans.NEW_VARIABLE_TITLE = "新变量的名称：";
ZhHans.PROCEDURES_ALLOW_STATEMENTS = "允许声明";
ZhHans.PROCEDURES_CALLNORETURN_TOOLTIPETURN_HELPURL = "https://zh.wikipedia.org/wiki/子程序";
ZhHans.PROCEDURES_CALLNORETURN_TOOLTIP = "运行用户定义的函数“%1”。";
ZhHans.PROCEDURES_CALLRETURN_HELPURL = "https://zh.wikipedia.org/wiki/子程序";
ZhHans.PROCEDURES_CALLRETURN_TOOLTIP = "运行用户定义的函数 “%1”，并使用它的输出值。";
ZhHans.PROCEDURES_CALL_BEFORE_PARAMS = "参数：";
ZhHans.PROCEDURES_CREATE_DO = "创建“%1”";
ZhHans.PROCEDURES_DEFNORETURN_HELPURL = "https://zh.wikipedia.org/wiki/子程序";
ZhHans.PROCEDURES_DEFNORETURN_PROCEDURE = "procedure";
ZhHans.PROCEDURES_DEFNORETURN_TITLE = "";
ZhHans.PROCEDURES_DEFNORETURN_TOOLTIP = "创建一个不带输出值的函数。";
ZhHans.PROCEDURES_DEFRETURN_HELPURL = "https://zh.wikipedia.org/wiki/子程序";
ZhHans.PROCEDURES_DEFRETURN_RETURN = "返回";
ZhHans.PROCEDURES_DEFRETURN_TOOLTIP = "创建一个有输出值的函数。";
ZhHans.PROCEDURES_DEF_DUPLICATE_WARNING = "警告: 此函数具有重复参数。";
ZhHans.PROCEDURES_HIGHLIGHT_DEF = "突出显示函数定义";
ZhHans.PROCEDURES_IFRETURN_TOOLTIP = "如果值为真，则返回第二个值。";
ZhHans.PROCEDURES_IFRETURN_WARNING = "警告: 仅在定义函数内可使用此块。";
ZhHans.PROCEDURES_BEFORE_PARAMS = "参数：";
ZhHans.PROCEDURES_MUTATORARG_TOOLTIP = "添加函数输入。";
ZhHans.PROCEDURES_MUTATORCONTAINER_TITLE = "输入";
ZhHans.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "添加、删除或重新排此函数的输入。";
ZhHans.RENAME_VARIABLE = "重命名变量...";
ZhHans.RENAME_VARIABLE_TITLE = "将所有“%1”变量重命名为:";
ZhHans.TEXT_APPEND_APPENDTEXT = "追加文本";
ZhHans.TEXT_WRITE_TEXT = "写入文本";
ZhHans.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
ZhHans.TEXT_APPEND_TO = "在";
ZhHans.TEXT_APPEND_TOOLTIP = "将一些文本追加到变量“%1”。";
ZhHans.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
ZhHans.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "为小写";
ZhHans.TEXT_CHANGECASE_OPERATOR_TITLECASE = "为首字母大写";
ZhHans.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "为大写";
ZhHans.TEXT_CHANGECASE_TOOLTIP = "使用不同的大小写复制这段文字。";
ZhHans.TEXT_CHARAT_FIRST = "获得第一个字符";
ZhHans.TEXT_CHARAT_FROM_END = "获得倒数第个字符";
ZhHans.TEXT_CHARAT_FROM_START = "获得字符#";
ZhHans.TEXT_CHARAT = "获得第";
ZhHans.TEXT_CHARAT2 = "个字符";
ZhHans.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
ZhHans.TEXT_CHARAT_INPUT_INTEXT = "于文本中";
ZhHans.TEXT_CHARAT_LAST = "获得最后一个字符";
ZhHans.TEXT_CHARAT_RANDOM = "获取随机的字母";
ZhHans.TEXT_CHARAT_TAIL = "项";
ZhHans.TEXT_CHARAT_TOOLTIP = "返回位于指定位置的字母。";
ZhHans.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "将一个项添加到文本中。";
ZhHans.TEXT_CREATE_JOIN_TITLE_JOIN = "加入";
ZhHans.TEXT_CREATE_JOIN_TOOLTIP = "添加、删除或重新排列各节来重新配置这个文本块。";
ZhHans.TEXT_GET_SUBSTRING_END_FROM_END = "到倒数第个字符";
ZhHans.TEXT_GET_SUBSTRING_END_FROM_START = "到字符#";
ZhHans.TEXT_GET_SUBSTRING_END_LAST = "到最后一个字符";
ZhHans.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
ZhHans.TEXT_GET_SUBSTRING_START_FIRST = "取得一段字串自第一个字符";
ZhHans.TEXT_GET_SUBSTRING_START_FROM_END = "取得一段字串自#到末尾";
ZhHans.TEXT_GET_SUBSTRING_START_FROM_START = "取得一段字串自#";
ZhHans.TEXT_GET_SUBSTRING_TOOLTIP = "返回指定的部分文本。";
ZhHans.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
ZhHans.TEXT_INDEXOF_OPERATOR_FIRST = "寻找第一个出现的文本";
ZhHans.TEXT_INDEXOF_OPERATOR_LAST = "寻找最后一个出现的文本";
ZhHans.TEXT_INDEXOF_TAIL = "项";
ZhHans.TEXT_INDEXOF_TOOLTIP = "返回在第二个字串中的第一/最后一个匹配项的索引值。如果未找到则返回 0。";
ZhHans.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
ZhHans.TEXT_ISEMPTY_TITLE = "%1是空的";
ZhHans.LISTS_IS_EMPTY_TITLE = ZhHans.TEXT_ISEMPTY_TITLE;
ZhHans.TEXT_ISEMPTY_TOOLTIP = "如果提供的文本为空，则返回真。";
ZhHans.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
ZhHans.TEXT_JOIN_TITLE_CREATEWITH = "建立字符串使用";
ZhHans.TEXT_JOIN_TOOLTIP = "通过串起任意数量的项以建立一段文字。";
ZhHans.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
ZhHans.TEXT_LENGTH_TITLE = "%1的长度";
ZhHans.TEXT_LENGTH_TOOLTIP = "返回文本的字符数（包括空格）。";
ZhHans.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
ZhHans.TEXT_PRINT_TITLE = "打印%1";
ZhHans.TEXT_PRINT_TOOLTIP = "打印指定的文字、数字或其他值。";
ZhHans.TEXT_PRINT_HEX_TOOLTIP = "以十六进制的格式打印指定的数字。";
ZhHans.TEXT_WRITE_TOOLTIP = "以原始方式输出，可以输出16进制。";
ZhHans.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
ZhHans.TEXT_PROMPT_TOOLTIP_NUMBER = "提示用户输入数字。";
ZhHans.TEXT_PROMPT_TOOLTIP_TEXT = "提示用户输入一些文本。";
ZhHans.TEXT_PROMPT_TYPE_TEXT = "输入数字并显示提示消息";
ZhHans.TEXT_TEXT_HELPURL = "https://zh.wikipedia.org/wiki/字符串";
ZhHans.TEXT_TEXT_TOOLTIP = "一个字母、单词或一行文本。";
ZhHans.TEXT_CHAR_TOOLTIP = "一个字符。";
ZhHans.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
ZhHans.TEXT_TRIM_OPERATOR_BOTH = "消除两侧空格";
ZhHans.TEXT_TRIM_OPERATOR_LEFT = "消除左侧空格";
ZhHans.TEXT_TRIM_OPERATOR_RIGHT = "消除右侧空格";
ZhHans.VARIABLES_DEFAULT_NAME = "item";
ZhHans.VARIABLES_GET_CREATE_SET = "创建“设定%1”";
ZhHans.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
ZhHans.VARIABLES_GET_TAIL = "";
ZhHans.VARIABLES_GET_TITLE = "";
ZhHans.VARIABLES_GET_TOOLTIP = "返回此变量的值。";
ZhHans.VARIABLES_SET_CREATE_GET = "创建“获得%1”";
ZhHans.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
ZhHans.VARIABLES_SET_TAIL = "到";
ZhHans.VARIABLES_SET_TITLE = "赋值";
ZhHans.VARIABLES_SET_TOOLTIP = "设置此变量，以使它和输入值相等。";
ZhHans.PROCEDURES_DEFRETURN_TITLE = ZhHans.PROCEDURES_DEFNORETURN_TITLE;
ZhHans.LISTS_GET_SUBLIST_INPUT_IN_LIST = ZhHans.LISTS_INLIST;
ZhHans.LISTS_SET_INDEX_INPUT_IN_LIST = ZhHans.LISTS_INLIST;
ZhHans.PROCEDURES_DEFRETURN_PROCEDURE = ZhHans.PROCEDURES_DEFNORETURN_PROCEDURE;
ZhHans.VARIABLES_SET_ITEM = ZhHans.VARIABLES_DEFAULT_NAME;
ZhHans.LISTS_CREATE_WITH_ITEM_TITLE = ZhHans.VARIABLES_DEFAULT_NAME;
ZhHans.MATH_CHANGE_TITLE_ITEM = ZhHans.VARIABLES_DEFAULT_NAME;
ZhHans.VARIABLES_GET_ITEM = ZhHans.VARIABLES_DEFAULT_NAME;
ZhHans.PROCEDURES_DEFRETURN_DO = ZhHans.PROCEDURES_DEFNORETURN_DO;
ZhHans.LISTS_GET_INDEX_HELPURL = ZhHans.LISTS_INDEX_OF_HELPURL;
ZhHans.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = ZhHans.VARIABLES_DEFAULT_NAME;
ZhHans.CONTROLS_IF_MSG_THEN = ZhHans.CONTROLS_REPEAT_INPUT_DO;
ZhHans.LISTS_INDEX_OF_INPUT_IN_LIST = ZhHans.LISTS_INLIST;
ZhHans.PROCEDURES_CALLRETURN_CALL = ZhHans.PROCEDURES_CALLNORETURN_CALL;
ZhHans.LISTS_GET_INDEX_INPUT_IN_LIST = ZhHans.LISTS_INLIST;
ZhHans.CONTROLS_FOR_INPUT_DO = ZhHans.CONTROLS_REPEAT_INPUT_DO;
ZhHans.CONTROLS_FOREACH_INPUT_DO = ZhHans.CONTROLS_REPEAT_INPUT_DO;
ZhHans.CONTROLS_IF_IF_TITLE_IF = ZhHans.CONTROLS_IF_MSG_IF;
ZhHans.CONTROLS_WHILEUNTIL_INPUT_DO = ZhHans.CONTROLS_REPEAT_INPUT_DO;
ZhHans.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = ZhHans.CONTROLS_IF_MSG_ELSEIF;
ZhHans.TEXT_APPEND_VARIABLE = ZhHans.VARIABLES_DEFAULT_NAME;
ZhHans.CONTROLS_IF_ELSE_TITLE_ELSE = ZhHans.CONTROLS_IF_MSG_ELSE;
ZhHans.MIXLY_PINMODE = '管脚模式';
ZhHans.MIXLY_PINMODEIN = '输入';
ZhHans.MIXLY_PINMODEOUT = '输出';
ZhHans.MIXLY_PINMODEPULLUP = '上拉输入';
ZhHans.MIXLY_DECLARE = '声明';
ZhHans.MIXLY_AS = '为';
ZhHans.MIXLY_VALUE = '并赋值';
ZhHans.MIXLY_VALUE2 = '赋值为';
ZhHans.MIXLY_MAP = '映射';
//ZhHans.MIXLY_MAP_INT = '映射(整数)';
//ZhHans.MIXLY_MAP_FLOAT = '映射(小数)';
ZhHans.MIXLY_MAP_FROM = "从 [";
ZhHans.MIXLY_MAP_TO = "] 到 [";
ZhHans.MIXLY_MILLIS = '毫秒';
ZhHans.MIXLY_DELAY = '延时';
ZhHans.MIXLY_ATTACHINTERRUPT_PIN = '硬件中断 管脚 #';
ZhHans.MIXLY_DETACHINTERRUPT_PIN = '取消硬件中断 管脚 #';
ZhHans.MIXLY_ATTACHPININTERRUPT_PIN = '软件中断 管脚 #';
ZhHans.MIXLY_DETACHPININTERRUPT_PIN = '取消软件中断 管脚 #';
ZhHans.MIXLY_MODE = '模式';
ZhHans.MIXLY_DO = '执行';
ZhHans.MIXLY_BUILDIN_LED = '内嵌LED';
ZhHans.MIXLY_EXTERN_LED = 'LED';
ZhHans.MIXLY_STAT = '设为';
ZhHans.MIXLY_DIGITALWRITE_PIN = '数字输出 管脚 #';
ZhHans.MIXLY_DIGITALREAD_PIN = '数字输入 管脚 #';
ZhHans.MIXLY_ANALOGWRITE_PIN = '模拟输出 管脚 #';
ZhHans.MIXLY_ANALOGREAD_PIN = '模拟输入 管脚 #';
ZhHans.MIXLY_SERIAL_WRITE = '原始输出';
ZhHans.MIXLY_SERIAL_PRINT = '打印';
ZhHans.MIXLY_SERIAL_PRINTLN = '打印（自动换行）';
ZhHans.MIXLY_SERIAL_FLUSH = '清空缓存区数据';
ZhHans.MIXLY_STEP = '步长为';
ZhHans.MIXLY_TONE = '播放声音';
ZhHans.MIXLY_TONE_NOTIMER = '播放声音(无定时器)';
ZhHans.MIXLY_FREQUENCY = '频率';
ZhHans.MIXLY_CHANNEL = '通道';
ZhHans.MIXLY_DURATION = '持续时间';
ZhHans.MIXLY_NOTONE = '结束声音';
ZhHans.MIXLY_NOTONE_NOTIMER = '结束声音(无定时器)';
ZhHans.MIXLY_BLOCKGROUP_CATEGORY = '模块组';
ZhHans.MIXLY_IR_RECEIVE = '红外接收 管脚 #';
ZhHans.MIXLY_IR_RECEIVE_ENABLE = '红外接收使能 管脚 #';
ZhHans.MIXLY_IR_SEND_NEC1 = '红外发射（';
ZhHans.MIXLY_IR_SEND_NEC2 = '） 管脚 #';
ZhHans.MIXLY_IR_RECEIVE_RAW = '红外接收并打印数据（RAW） 管脚 #';
ZhHans.MIXLY_IR_SEND_RAW = '红外发射（RAW） 管脚 #';
ZhHans.LANG_MATH_TO_INT = '取整';
ZhHans.LANG_MATH_TO_ROUND = '取整(四舍五入)';
ZhHans.LANG_MATH_TO_CEIL = '取整(取上限)';
ZhHans.LANG_MATH_TO_FLOOR = '取整(取下限)';
ZhHans.MIXLY_SERVO = '舵机';
ZhHans.MIXLY_DEGREE_0_180 = '角度 (0~180)';
ZhHans.MIXLY_READ_DEGREES = '读取度数';
ZhHans.MIXLY_HIGH = '高';
ZhHans.MIXLY_LOW = '低';
ZhHans.MIXLY_ON = '开';
ZhHans.MIXLY_OFF = '关';
ZhHans.MIXLY_RISING = '上升';
ZhHans.MIXLY_FALLING = '下降';
ZhHans.MIXLY_CHANGE = '改变';
ZhHans.MIXLY_I2C_MASTER_WRITE = "I2C写入 设备地址";
ZhHans.MIXLY_I2C_MASTER_READ = "I2C读取 设备地址";
ZhHans.MIXLY_I2C_MASTER_READ2 = "I2C读取";
ZhHans.MIXLY_I2C_BYTES = "字节数";
ZhHans.MIXLY_I2C_AVAILABLE = '读取I2C成功吗？';
ZhHans.MIXLY_I2C_SLAVE_ONRECEIVE = 'I2C从机接收事件';
ZhHans.MIXLY_I2C_HOWMANY = 'I2C从机接收字节数';
ZhHans.MIXLY_I2C_SLAVE_ONREQUEST = 'I2C从机发送事件';
ZhHans.MIXLY_I2C_SLAVE_WRITE = 'I2C从机发送字节';
ZhHans.MIXLY_I2C_SLAVE_WRITE_ARRAY = 'I2C从机发送数组';
ZhHans.MIXLY_I2C_SLAVE_WRITE_ARRAY_ARRAYNAME = '数组';
ZhHans.MIXLY_I2C_SLAVE_WRITE_ARRAY_ARRAYLENGTH = '长度';
ZhHans.LANG_CONTROLS_FOR_INPUT_WITH = '使用';
ZhHans.LANG_CONTROLS_FOR_INPUT_VAR = 'x';
ZhHans.LANG_CONTROLS_FOR_INPUT_FROM = '从';
ZhHans.LANG_CONTROLS_FOR_INPUT_TO = '到';
ZhHans.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT = '重复';
ZhHans.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE = '满足条件';
ZhHans.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = '不满足条件';
ZhHans.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP = '循环';
ZhHans.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = '跳出';
ZhHans.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = '跳到下一个';
ZhHans.LANG_CONTROLS_FLOW_STATEMENTS_WARNING = '警告：\n' + '这个模块只能\n' + '用在循环中。';
ZhHans.LANG_MATH_INT = '整数';
ZhHans.LANG_MATH_LONG = '长整数';
ZhHans.LANG_MATH_FLOAT = '小数';
ZhHans.LANG_MATH_BOOLEAN = '布尔';
ZhHans.LANG_MATH_BYTE = '字节';
ZhHans.LANG_MATH_CHAR = '字符';
ZhHans.LANG_MATH_STRING = '字符串';
ZhHans.LANG_MATH_UNSIGNED_INT = '无符号整数';
ZhHans.LANG_MATH_WORD = '字';
ZhHans.LANG_MATH_UNSIGNED_LONG = '无符号长整数';
ZhHans.LANG_MATH_UNSIGNED_CHAR = '无符号字符';
ZhHans.LANG_MATH_DOUBLE = '双精度浮点数';
ZhHans.LANG_LISTS_GET_INDEX1 = '的第';
ZhHans.LANG_LISTS_GET_INDEX2 = '项';
ZhHans.LANG_LISTS_GET_INDEX_TOOLTIP = '返回数组中指定位置的值，索引从1开始。';
ZhHans.LANG_LISTS_SET_INDEX1 = '的第';
ZhHans.LANG_LISTS_SET_INDEX2 = '项赋值为';
ZhHans.LANG_LISTS_SET_INDEX_TOOLTIP = '设置数组中指定位置的值，索引从1开始。';
ZhHans.LANG_MATH_CONSTRAIN_INPUT_CONSTRAIN = '约束';
ZhHans.LANG_MATH_CONSTRAIN_INPUT_LOW = '介于 (最小值)';
ZhHans.LANG_MATH_CONSTRAIN_INPUT_HIGH = '和 (最大值)';
ZhHans.LANG_MATH_RANDOM_SEED = '初始化随机数';
ZhHans.LANG_MATH_RANDOM_INT_INPUT_FROM = '随机整数 从';
ZhHans.LANG_MATH_RANDOM_INT_INPUT_TO = '到';
ZhHans.MIXLY_JOYSTICK = '摇杆';
ZhHans.MIXLY_POTENTIOMETER = '电位器';
ZhHans.MIXLY_SOUND = '声音';
ZhHans.MIXLY_TEMPERATURE = '温度';
ZhHans.MIXLY_Humidity = '湿度';
ZhHans.MIXLY_Altitude = '气压';
ZhHans.MIXLY_MAKELISTFROM = '从字符串';
ZhHans.MIXLY_SPLITBYDOU = '创建数组';
ZhHans.MIXLY_SETUP = '初始化';
ZhHans.MIXLY_WARNING_INTERRUPT = '该管脚号不能作为中断';
ZhHans.MIXLY_CHAOSHENGBO = '超声波测距(cm) ';
ZhHans.MIXLY_WEIGHTSENSOR = '称重模块读取重量(g)';
ZhHans.MIXLY_IR_RECEIVE_YES = '有信号';
ZhHans.MIXLY_IR_RECEIVE_NO = '无信号';
ZhHans.MIXLY_TEXT_JOIN = '连接';
ZhHans.MIXLY_SERIAL_AVAILABLE = '有数据可读吗？';
ZhHans.MIXLY_SERIAL_EVENT = '串口中断';
ZhHans.MIXLY_SERIAL_READSTR = '读取字符串';
ZhHans.MIXLY_SERIAL_READSTR_UNTIL = '读取字符串直到';
ZhHans.MIXLY_SERIAL_READ = '读取';
ZhHans.MIXLY_IR_RECIEVE_TOOLTIP = '在接收到红外信号时进行用户自定义的处理。';
ZhHans.MIXLY_IR_SEND_NEC_TOOLTIP = '发射指定类型的红外数据';
ZhHans.MIXLY_IR_RECIEVE_RAW_TOOLTIP = '在接收到红外信号时以RAW格式打印出红外数据。';
ZhHans.MIXLY_IR_SEND_RAW_TOOLTIP = '发射RAW红外数据，4个参数分别是管脚号、数组、数组长度、红外信号频率';
ZhHans.MIXLY_LIST_NAME = '数组';
ZhHans.MIXLY_LIST_LENGTH = '数组长度';
ZhHans.MIXLY_TO_INT = '转整数';
ZhHans.MIXLY_TO_FLOAT = '转小数';
ZhHans.MIXLY_DATA = "数值";
ZhHans.MIXLY_BITS = "比特数";
ZhHans.MIXLY_PIN = '管脚 #';
ZhHans.MIXLY_GETTEMPERATUE = '获取温度';
ZhHans.MIXLY_GETHUMIDITY = '获取湿度';
ZhHans.MIXLY_DHT11 = 'DHT11 管脚 #';
ZhHans.MIXLY_LCD_RGB_BACKLIGHT = '液晶RGB背光屏';
ZhHans.MIXLY_DF_LCD = '液晶显示屏';
ZhHans.MIXLY_LCD_PRINT1 = '打印第1行';
ZhHans.MIXLY_LCD_PRINT2 = '打印第2行';
ZhHans.MIXLY_LCD_PRINT3 = '打印第3行';
ZhHans.MIXLY_LCD_PRINT4 = '打印第4行';
ZhHans.MIXLY_LCD_ROW = '在第';
ZhHans.MIXLY_LCD_COLUMN = '行第';
ZhHans.MIXLY_LCD_PRINT = '列打印';
ZhHans.MIXLY_LCD_SETCOLOR = '设置颜色';
ZhHans.MIXLY_LCD_STAT_CURSOR = '有光标';
ZhHans.MIXLY_LCD_STAT_NOCURSOR = '无光标';
ZhHans.MIXLY_LCD_STAT_BLINK = '闪烁';
ZhHans.MIXLY_LCD_STAT_NOBLINK = '不闪烁';
ZhHans.MIXLY_LCD_STAT_CLEAR = '清屏';
ZhHans.MIXLY_LCD_NOBACKLIGHT = '关闭背光';
ZhHans.MIXLY_LCD_BACKLIGHT = '打开背光';
ZhHans.MIXLY_NUMBER = '数字';
ZhHans.MIXLY_BLUETOOTH = '蓝牙';
ZhHans.MIXLY_BLUETOOTH_READ_STR = '读取数据（返回字符串）';
ZhHans.MIXLY_AVAILABLE = '有数据可读？';
ZhHans.MIXLY_DATAPIN = '数据管脚 #';
ZhHans.MIXLY_CLOCKPIN = '时钟管脚 #';
ZhHans.MIXLY_BITORDER = '顺序';
ZhHans.MIXLY_MSBFIRST = '高位先入';
ZhHans.MIXLY_LSBFIRST = '低位先入';
ZhHans.MIXLY_TOSTRING = '转字符串';
ZhHans.MIXLY_TOCHAR = '转ASCII字符';
ZhHans.MIXLY_TOASCII = '转ASCII数值';
ZhHans.MIXLY_STOP = '停止';
ZhHans.MIXLY_PULSEIN = '脉冲长度（微秒） 管脚 #';
ZhHans.MIXLY_PULSEIN_STAT = '状态';
ZhHans.MIXLY_PULSEIN_TIMEOUT = '超时（微秒）';
ZhHans.MIXLY_MAX = '取最大值';
ZhHans.MIXLY_MIN = '取最小值';
ZhHans.MIXLY_WRITE_SD_FILE = '写入SD 文件';
ZhHans.MIXLY_WRITE_SPIFFS_FILE = '写入SPIFFS 文件';
ZhHans.MIXLY_SD_DATA = '数据';
ZhHans.MIXLY_SD_NEWLINE = '换行';
ZhHans.MIXLY_EEPROM_WRITE_LONG = '写入(长整数) EEPROM 地址';
ZhHans.MIXLY_EEPROM_READ_LONG = '读取(长整数) EEPROM 地址';
ZhHans.MIXLY_EEPROM_WRITE_BYTE = '写入(字节) EEPROM 地址';
ZhHans.MIXLY_EEPROM_READ_BYTE = '读取(字节) EEPROM 地址';
ZhHans.MIXLY_TRAFFIC_LED = '设置交通灯';
ZhHans.MIXLY_EAST = '东';
ZhHans.MIXLY_SOUTH = '南';
ZhHans.MIXLY_WEST = '西';
ZhHans.MIXLY_NORTH = '北';
ZhHans.MIXLY_BUTTON = '按钮';
ZhHans.MIXLY_UP = '上';
ZhHans.MIXLY_DOWN = '下';
ZhHans.MIXLY_LEFT = '左';
ZhHans.MIXLY_RIGHT = '右';
ZhHans.MIXLY_MID = '中';
ZhHans.MIXLY_IS_PRESSED = '被按着';
ZhHans.LANG_INOUT_DIGITAL_WRITE_TOOLTIP = '设置指定管脚电平值';
ZhHans.MIXLY_FORWARD = '前进';
ZhHans.MIXLY_BACKWARD = '后退';
ZhHans.MIXLY_TURNLEFT = '左转';
ZhHans.MIXLY_TURNRIGHT = '右转';
ZhHans.MIXLY_RUNTIME = '系统运行时间';
ZhHans.MIXLY_LED_ON_BOARD = '板载';
ZhHans.MIXLY_ALL = '全部';
ZhHans.MIXLY_SET_LED = '设置LED';
ZhHans.MIXLY_SHOW_FACE = '表情面板';
ZhHans.MIXLY_SHOW_FACE_TEXT = '显示文字:';
ZhHans.MIXLY_SHOW_FACE_TIME = '显示时间';
ZhHans.MIXLY_SETTING = '设置';
ZhHans.MIXLY_LCD_ADDRESS = "设备地址";
ZhHans.MIXLY_TOOLTIP_INOUT_HIGHLOW = '返回高电平或低电平';
ZhHans.MIXLY_TOOLTIP_INOUT_DIGITAL_READ = '返回指定管脚的电平值';
ZhHans.MIXLY_TOOLTIP_INOUT_ANALOG_WRITE = '设置指定管脚的值(0~255)';
ZhHans.MIXLY_TOOLTIP_INOUT_ANALOG_READ = '返回指定管脚的值(0~1023)';
ZhHans.MIXLY_TOOLTIP_INOUT_ATTACHINTERRUPT = '设置指定管脚的中断';
ZhHans.MIXLY_TOOLTIP_INOUT_DETACHINTERRUPT = '取消指定管脚的中断';
ZhHans.MIXLY_TOOLTIP_CONTROL_SETUP = '初始化操作(这里面的内容只执行一次)';
ZhHans.MIXLY_TOOLTIP_CONTROL_DELAY = '延迟指定时间';
ZhHans.MIXLY_TOOLTIP_CONTROL_MILLIS = '返回系统运行的时间';
ZhHans.MIXLY_TOOLTIP_VARIABLES_DECLARE = '声明并初始化一个变量';
ZhHans.MIXLY_TOOLTIP_MATH_MAX = '返回两个数中较大的那个';
ZhHans.MIXLY_TOOLTIP_MATH_MIN = '返回两个数中较小的那个';
ZhHans.MIXLY_TOOLTIP_MATH_MAP = '将一个数从第一个区间映射到第二个区间，并返回映射之后的值。';
ZhHans.MIXLY_TOOLTIP_TEXT_JOIN = '将两个字符串拼接成一个字符串。';
ZhHans.MIXLY_TOOLTIP_TEXT_TOTEXT = '将一个数字转为一个字符串。';
ZhHans.MIXLY_TOOLTIP_TEXT_TOCHAR = '返回一个ASCII编码对应的文本符号。';
ZhHans.MIXLY_TOOLTIP_TEXT_TOASCII = '返回一个字符对应的ASCII编码。';
ZhHans.MIXLY_TOOLTIP_TEXT_TOINT = '将一个字符串转为一个整数。';
ZhHans.MIXLY_TOOLTIP_TEXT_TOFLOAT = '将一个字符串转为一个小数。';
ZhHans.MIXLY_TOOLTIP_TEXT_TOBYTE = '将一个字符串转为字节。';
ZhHans.MIXLY_TOOLTIP_LISTS_CREATE_WITH_TEXT = '通过一个字符串来创建一个数组。';
ZhHans.MIXLY_TOOLTIP_LOGIT_TRUEORFALSE = '如果第一个参数为真，则返回第二参数，否则返回第三个参数。';
ZhHans.MIXLY_TOOLTIP_BLOCKGROUP_SERIAL_AVAILABLE = '如果串口有数据可读，返回真，否则返回假。';
ZhHans.MIXLY_TOOLTIP_BLOCKGROUP_SERIAL_READ_STR = '返回串口中的字符串。';
ZhHans.MIXLY_TOOLTIP_BLOCKGROUP_SERIAL_READ_INT = '返回串口中的整数。';
ZhHans.MIXLY_TOOLTIP_BLOCKGROUP_SERIAL_READ_FLOAT = '返回串口中的小数。';
ZhHans.MIXLY_TOOLTIP_BLOCKGROUP_CHAOSHENGBO = '返回超声波传感器测得的距离。';
ZhHans.MIXLY_TOOLTIP_BLOCKGROUP_GET_TEM = '返回温湿度传感器测得的温度（0~50）';
ZhHans.MIXLY_TOOLTIP_BLOCKGROUP_GET_HUM = '返回温湿度传感器测得的湿度（20~90%）';
ZhHans.MIXLY_TOOLTIP_BLOCKGROUP_SERVO_MOVE = '设置舵机的旋转角度（0~180°）和延时的时长';
ZhHans.MIXLY_TOOLTIP_BLOCKGROUP_SERVO_READ = '返回舵机当前停留的角度。';
ZhHans.MIXLY_TOOLTIP_BLOCKGROUP_TONE = '按指定的频率播放声音。';
ZhHans.MIXLY_TOOLTIP_BLOCKGROUP_TONE2 = '按指定的频率和持续时间播放声音。';
ZhHans.MIXLY_TOOLTIP_BLOCKGROUP_NOTONE = '停止播放声音。';
ZhHans.MIXLY_TOOLTIP_INOUT_pinMode = '改变管脚模式';
ZhHans.MIXLY_TOOLTIP_INOUT_pulseIn = '获取某个管脚最近一次脉冲的周期（微秒）';
ZhHans.MIXLY_TOOLTIP_INOUT_pulseIn2 = '获取某个管脚最近一次脉冲的周期（微秒，可设置超时时间）';
ZhHans.MIXLY_TOOLTIP_INOUT_shiftout = '将数据通过串行的方式在引脚上输出，相当于一般意义上的同步串行通信';
ZhHans.MIXLY_TOOLTIP_CONTROL_MSTIMER2 = 'Arduino内部定时器中断';
ZhHans.MIXLY_TOOLTIP_CONTROL_MSTIMER2_START = 'MsTimer2开始计时';
ZhHans.MIXLY_TOOLTIP_CONTROL_MSTIMER2_STOP = 'MsTimer2停止计时';
ZhHans.MIXLY_TOOLTIP_CONTROL_END_PROGRAM = '停止程序';
ZhHans.MIXLY_TOOLTIP_CONTROL_ALLOW_INTERRUPT = '允许设置中断';
ZhHans.MIXLY_TOOLTIP_SCOOP = 'Arduino多线程';
ZhHans.MIXLY_TOOLTIP_SCOOP_YIELD = '开始执行多线程任务';
ZhHans.MIXLY_TOOLTIP_SCOOP_SLEEP = '延迟指定时间(仅用于多线程)';
ZhHans.MIXLY_TOOLTIP_MATH_RANDOM_SEED = '设置随机数种子';
ZhHans.MIXLY_TOOLTIP_TEXT_FIND_CHAR_AT = '在字符串中求子串 %1 的位置';
ZhHans.MIXLY_TOOLTIP_TEXT_EQUALS_STARTS_ENDS = '返回字符串是否%1 %2';
ZhHans.MIXLY_TOOLTIP_SERIAL_BEGIN = '初始化串口并设置串口通信波特率';
ZhHans.MIXLY_TOOLTIP_SERIAL_READSTRUNITL = '从串口读取字符串直到遇到%1';
ZhHans.MIXLY_TOOLTIP_SERIAL_FLUSH = '清除串口缓存区的数据';
ZhHans.MIXLY_TOOLTIP_SOFTSERIAL = '将数字管脚%1和%2模拟成串口通信管脚';
ZhHans.MIXLY_TOOLTIP_SERIALEVENT = '在串口接收信息时通过中断方式执行某些命令';
ZhHans.MIXLY_TOOLTIP_IR_ENABLE = '';
ZhHans.MIXLY_TOOLTIP_I2C_MASTER_WRITE = 'I2C主设备发送数据，参数是主设备的地址和要发送的值';
ZhHans.MIXLY_TOOLTIP_I2C_MASTER_READ = 'I2C主设备读取数据，参数是主设备的地址和要读取内容的字节长度';
ZhHans.MIXLY_TOOLTIP_I2C_MASTER_READ2 = '返回从I2C读取到的数据';
ZhHans.MIXLY_TOOLTIP_I2C_AVAILABLE = '返回是否成功读取I2C设备数据';
ZhHans.MIXLY_TOOLTIP_I2C_SLAVE_ONRECEIVE = 'I2C从机接收主机产生的时钟和数据信号，并执行相应操作';
ZhHans.MIXLY_TOOLTIP_I2C_HOWMANY = '返回I2C从机接收字节数';
ZhHans.MIXLY_TOOLTIP_I2C_SLAVE_ONREQUEST = 'I2C从机根据主机产生的时钟和数据信号发送，并执行相应操作';
ZhHans.MIXLY_TOOLTIP_I2C_SLAVE_WRITE = 'I2C发送字节';
ZhHans.MIXLY_TOOLTIP_I2C_SLAVE_WRITE_ARRAY = 'I2C发送数组';
ZhHans.MIXLY_TOOLTIP_SPI_TRANSFER = '作为主设备以SPI方式通过管脚%1向从机传输数据';
ZhHans.MIXLY_TOOLTIP_RFID_INIT = '初始化RFID读卡器，参数为数据线管脚号、时钟线管脚号、主输出从输出线管脚号和主输入从输出先管脚号';
ZhHans.MIXLY_TOOLTIP_RFID_ON = '当RFID读取到数据时执行一些指令';
ZhHans.MIXLY_TOOLTIP_RFID_READ = '返回RFID读取到的卡号';
ZhHans.MIXLY_TOOLTIP_RFID_IN = '当RFID读取到特定数据时执行一些指令';
ZhHans.MIXLY_TOOLTIP_RFID_WRITEBLOCK = '向电子标签中的数据块写数据';
ZhHans.MIXLY_TOOLTIP_RFID_READBLOCK = '从电子标签中的数据块读数据';
ZhHans.MIXLY_TOOLTIP_RFID_OFF = '使RFID设备不再继续读取数据';
ZhHans.MIXLY_TOOLTIP_STORE_SDWRITE = '向SD卡写入文件';
ZhHans.MIXLY_TOOLTIP_STORE_EEPROM_WRITELONG = '向EEPROM特定地址写入长整型数据';
ZhHans.MIXLY_TOOLTIP_STORE_EEPROM_READLONG = '从EEPROM的特定地址读取长整型数据';
ZhHans.MIXLY_TOOLTIP_STORE_EEPROM_WRITEBYTE = '向EEPROM特定地址写入字节型数据';
ZhHans.MIXLY_TOOLTIP_STORE_EEPROM_READBYTE = '从EEPROM的特定地址读取字节型数据';
ZhHans.MIXLY_TOOLTIP_GPS_INIT = '初始化GPS设备，参数为GPS通信管脚和波特率';
ZhHans.MIXLY_TOOLTIP_GPS_DATA_AVAILABLE = '返回GPS数据是否为有效值';
ZhHans.MIXLY_TOOLTIP_GPS_GETDATA = '获取GPS卫星传回的%1数据';
ZhHans.MIXLY_TOOLTIP_LM35 = '获取LM35传感器传回的温度值';
ZhHans.MIXLY_TOOLTIP_DS18 = '获取DS18B20传感器传回的温度值';
ZhHans.MIXLY_TOOLTIP_DS1302_INIT = '初始化DS1302 RTC时钟模块，参数为重置线管脚号，数据线管脚号和时钟线管脚号';
ZhHans.MIXLY_TOOLTIP_DS1307_INIT = '初始化DS1307 RTC时钟模块，参数为数据线管脚号和时钟线管脚号';
ZhHans.MIXLY_TOOLTIP_RTC_GETTIME = '从RTC时钟模块获取%1';
ZhHans.MIXLY_TOOLTIP_ADXL345 = '获取ADXL345重力感应模块传回的%1';
ZhHans.MIXLY_TOOLTIP_BLOCKGROUP_SERVO_WRITEMICROSECONDS = '设置舵机的旋转时间，参数取值为[1000,2000]';
ZhHans.MIXLY_TOOLTIP_TONE_NOTE = '返回音名对应的频率';
ZhHans.MIXLY_TOOLTIP_STEPPER_STEP = '用于初始化两管脚步进电机';
ZhHans.MIXLY_TOOLTIP_STEPPER_STEP2 = '用于初始化四管脚步进电机';
ZhHans.MIXLY_TOOLTIP_STEPPER_MOVE = '设置步进电机的移动步数';
ZhHans.MIXLY_TOOLTIP_LCD_INIT = '初始化LCD显示屏，设置地址';
ZhHans.MIXLY_TOOLTIP_LCD_INIT2 = '初始化LCD显示屏，指定时钟线和数据线连接管脚并设置地址';
ZhHans.MIXLY_TOOLTIP_LCD_INIT3 = '初始化LCD显示屏，指定所有连接管脚并设置地址';
ZhHans.MIXLY_TOOLTIP_LCD_PRINT = 'LCD显示屏分行打印';
ZhHans.MIXLY_TOOLTIP_LCD_PRINT2 = '从LCD显示屏第%1行第%2列开始显示指定内容';
ZhHans.MIXLY_TOOLTIP_LCD_POWER = '设定LCD显示屏的显示样式';
ZhHans.MIXLY_TOOLTIP_OLED_DRAW4STRING = 'OLED显示屏分行打印';
ZhHans.MIXLY_TOOLTIP_OLED_PRINT = '从OLED显示屏第%1行第%2列开始显示指定内容';
ZhHans.MIXLY_TOOLTIP_RGB_DISPLAY2 = '设置RGB彩灯模块指定灯的颜色';
ZhHans.MIXLY_TOOLTIP_4digitdisplay_power = '设置TM1650四位数码管显示模式';
ZhHans.MIXLY_TOOLTIP_4digitdisplay_displayString = 'TM1650四位数码管显示字符串（超过四位则滚动显示）';
ZhHans.MIXLY_TOOLTIP_4digitdisplay_showDot = '在TM1650四位数码管指定位置显示小数点';
ZhHans.MIXLY_TOOPTIP_4DIGITDISPLAY_TM1637_BRIGHTNESS = '设置TM1637的亮度,范围0-100';
ZhHans.MIXLY_DISPLAY_TM1637_Time_Point = '时钟点 设为';
ZhHans.MIXLY_TOOPTIP_Matrix_HK16T33_INIT = '初始化HK16T33 8*8点阵屏';
ZhHans.MIXLY_TOOPTIP_Matrix_HK16T33_ROTATION = '点阵屏显示方向旋转';
ZhHans.MIXLY_TOOPTIP_Matrix_HK16T33_TEXT = '每次显示一个字符，依次显示';
ZhHans.MIXLY_TOOPTIP_Matrix_HK16T33_LEDARRAY = '点亮点阵屏上的对应位置';
ZhHans.MIXLY_TOOPTIP_Matrix_HK16T33_CLEAR = '清除点阵屏上内容';
ZhHans.MIXLY_TOOPTIP_Matrix_HK16T33_DISPLAYCHAR = '由数组生成点阵屏显示内容';
ZhHans.MIXLY_TOOLTIP_ETHERNET_INIT = '启动以太网服务，参数为以太网扩展卡的MAC地址，返回1表示成功启动，0表示失败';
ZhHans.MIXLY_TOOLTIP_ETHERNET_MACADDRESS = 'MAC地址，格式为XX-XX-XX-XX-XX-XX,X为任意十六进制数';
ZhHans.MIXLY_TOOLTIP_ETHERNET_LOCALIP = '返回本机IP地址';
ZhHans.MIXLY_TOOLTIP_ETHERNET_CONNECT = '连接远程服务器，返回1表示成功启动，其他表示失败';
ZhHans.MIXLY_TOOLTIP_ETHERNET_STOP = '与服务器断开连接';
ZhHans.MIXLY_TOOLTIP_ETHERNET_CONNECTED = '返回是否已连接某个服务器';
ZhHans.MIXLY_TOOLTIP_ETHERNET_CLIENT_AVAILABLE = '返回是否有服务端发送的数据可读';
ZhHans.MIXLY_TOOLTIP_ETHERNET_CLIENT_PRINT = '将数据打印到客户端连接到的服务器。发送内容会转为对应的ASCII码（例如，数字123作为三个字符“1”、“2”、“3”发送）。';
ZhHans.MIXLY_TOOLTIP_ETHERNET_CLIENT_PRINTLN = '将数据打印到客户端连接到的服务器。发送内容会转为对应的ASCII码并在最后添加换行符（例如，数字123作为三个字符“1”、“2”、“3”发送）。';
ZhHans.MIXLY_TOOLTIP_ETHERNET_CLIENT_READ = '读取服务端发送客户端缓冲区的下一个字节';
ZhHans.MIXLY_TOOLTIP_ETHERNET_GET_REQUEST = '向指定地址发送一个GET请求';
ZhHans.MIXLY_TOOLTIP_VARIABLES_CHANGE = '对常量或变量进行强制类型转换';
ZhHans.MIXLY_TOOLTIP_MLX90614_GET_DATA = 'MLX90614红外测温传感器获取温度，返回数据的类型为float';
ZhHans.MIXLY_BUTTON_PRESSED = '按下';
ZhHans.MIXLY_BUTTON_RELEASED = '松开';
ZhHans.MIXLY_BUTTON_HOLD = '按住';
ZhHans.TO_SPI_SLAVE_PIN = '向SPI从机#';
ZhHans.SPI_TRANSFER = '传输';
ZhHans.MIXLY_SERIAL_BEGIN = '波特率';
ZhHans.MIXLY_SERIALBT_INIT = '初始化ESP32蓝牙 设备名称';
ZhHans.MIXLY_SERIALBT_AVAILABLE = 'ESP32蓝牙有数据可读？';
ZhHans.MIXLY_SERIALBT_READ = 'ESP32蓝牙数据';
ZhHans.MIXLY_SERIALBT_WRITE = 'ESP32蓝牙发送数据';
ZhHans.MIXLY_ESP32_RUNNING_CORE = 'ESP32双核';
ZhHans.MIXLY_CONTROL_CORE_DELAY = 'ESP32双核延时';
ZhHans.MIXLY_ESP32_RUNNING_CORE_PRIORITY = '优先级';
ZhHans.MIXLY_STEPPER = '步进电机';
ZhHans.MIXLY_STEPPER_SETUP_STEPPER = '初始化步进电机';
ZhHans.MIXLY_STEPPER_PIN1 = '管脚1#';
ZhHans.MIXLY_STEPPER_PIN2 = '管脚2#';
ZhHans.MIXLY_STEPPER_PIN3 = '管脚3#';
ZhHans.MIXLY_STEPPER_PIN4 = '管脚4#';
ZhHans.MIXLY_STEPSPERREVOLUTION = '设置步数';
ZhHans.MIXLY_STEPPER_SET_SPEED = '设置转速';
ZhHans.MIXLY_STEPPER_GET_SPEED = '获取转速';
ZhHans.MIXLY_STEPPER_STEP = '移动步数';
ZhHans.MIXLY_ETHERNET_BEGIN = '初始化 (DHCP)';
ZhHans.MIXLY_ETHERNET = '以太网';
ZhHans.MIXLY_ETHERNET2 = '以太网2';
ZhHans.MIXLY_ETHERNET_MAC_ADDRESS = 'MAC地址';
ZhHans.MIXLY_ETHERNET_LOCALIP = '本地IP';
ZhHans.MIXLY_ETHERNET_CLINET_CONNECT_SERVER = '客户端连接到服务器';
ZhHans.MIXLY_ETHERNET_CLINET_PORT = '端口';
ZhHans.MIXLY_ETHERNET_CLINET_STOP = '客户端-停止';
ZhHans.MIXLY_ETHERNET_CLINET_CONNECTED = '客户端-已连接';
ZhHans.MIXLY_ETHERNET_CLINET_AVAILABLE = '客户端-有数据可读';
ZhHans.MIXLY_ETHERNET_CLINET_PRINT = '客户端-打印';
ZhHans.MIXLY_ETHERNET_CLINET_PRINTLN = '客户端-打印（自动换行）';
ZhHans.MIXLY_ETHERNET_CLINET_READ = '客户端-读取';
ZhHans.MIXLY_ETHERNET_CLINET_GET_REQUEST = 'GET请求';
ZhHans.MIXLY_ETHERNET_CLINET_URL = 'URL';
ZhHans.MIXLY_ETHERNET_CLINET_SERVER = '服务器';
ZhHans.MIXLY_TEMP = '温度传感器';
ZhHans.MIXLY_LM35 = 'LM35温度传感器';
ZhHans.MIXLY_DS18B20 = 'DS18B20 管脚 #';
ZhHans.MIXLY_DS18B20_C = '°C';
ZhHans.MIXLY_DS18B20_F = '°F';
ZhHans.MIXLY_GPS_INIT = 'GPS初始化';
ZhHans.MIXLY_GPS_DATA_AVAILABLE = 'GPS获取到数据';
ZhHans.MIXLY_GPS_DATA_ENCODE = 'GPS解析数据成功';
ZhHans.MIXLY_GPS_LOCATION = '位置';
ZhHans.MIXLY_GPS_DATE = '日期';
ZhHans.MIXLY_GPS_TIME = '时间';
ZhHans.MIXLY_GPS_ISVALID = '有效';
ZhHans.MIXLY_GPS_GET = 'GPS获取';
ZhHans.MIXLY_GPS_LOCATION_LAT = '位置-纬度';
ZhHans.MIXLY_GPS_LOCATION_LNG = '位置-经度';
ZhHans.MIXLY_GPS_DATE_YEAR = '日期-年';
ZhHans.MIXLY_GPS_DATE_MONTH = '日期-月';
ZhHans.MIXLY_GPS_DATE_DAY = '日期-日';
ZhHans.MIXLY_GPS_TIME_HOUR = '时间-时';
ZhHans.MIXLY_GPS_TIME_MINUTE = '时间-分';
ZhHans.MIXLY_GPS_TIME_SECOND = '时间-秒';
ZhHans.MIXLY_GPS_TIME_CENTISECOND = '时间-厘秒';
ZhHans.MIXLY_PARAMS = '参数';
ZhHans.MIXLY_MSTIMER2_EVERY = '每隔';
ZhHans.MIXLY_MSTIMER2_DO = '执行';
ZhHans.MIXLY_MSTIMER2_START = '启动';
ZhHans.MIXLY_CONTROL_INTERRUPTS = '允许中断';
ZhHans.MIXLY_CONTROL_NOINTERRUPTS = '禁止中断';
ZhHans.MIXLY_CONTROL_SCoop_loop = '循环';
ZhHans.MIXLY_CONTROL_SCoop_yield = '执行SCoop任务';
ZhHans.MIXLY_CONTROL_SCoop_sleep = 'SCoop 延时(仅用于SCoop)';
ZhHans.MIXLY_WARNING_NOT_DECLARE = '该变量未声明';
ZhHans.MIXLY_LENGTH = "获取长度";
ZhHans.MIXLY_EQUALS = "等于";
ZhHans.MIXLY_STARTSWITH = "开始于";
ZhHans.MIXLY_ENDSWITH = "结尾于";
ZhHans.MIXLY_COMPARETO = "比较";
ZhHans.MIXLY_COMPARETO_HELP = "按字典顺序比较，相等则返回0，大于则返回大于0的值，小于则返回小于0的值";
ZhHans.UNDO = "撤销";
ZhHans.REDO = "重做";
ZhHans.MIXLY_CONTROL_END_PROGRAM = "停止程序";
ZhHans.MIXLY_CONTROL_NOTES = '注释:';
ZhHans.texttodisplay = "显示文本";
ZhHans.OLEDDISPLAY = "显示";
ZhHans.rawx = "行坐标x:(最大127)";
ZhHans.liney = "列坐标y:(最大63)";
ZhHans.line1 = "第一行";
ZhHans.line2 = "第二行";
ZhHans.line3 = "第三行";
ZhHans.line4 = "第四行";
ZhHans.num1 = "数字1";
ZhHans.num2 = "数字2";
ZhHans.num3 = "数字3";
ZhHans.num4 = "数字4";
ZhHans.MIXLY_RGB_INIT = 'RGB灯初始化';
ZhHans.MIXLY_RGB_SET_BRIGHTNESS = 'RGB灯设置亮度';
ZhHans.MIXLY_RGB_SET_COLOR = 'RGB灯设置颜色';
ZhHans.MIXLY_RGB_SHOW = 'RGB灯设置生效';
ZhHans.MIXLY_RGB = 'RGB灯';
ZhHans.MIXLY_CHASE = '跑马灯';
ZhHans.MIXLY_RAINBOW = '彩虹';
ZhHans.MIXLY_RGB_NUM = '灯号';
ZhHans.MIXLY_RGB_COUNT = '灯数';
ZhHans.MIXLY_RGB_R = 'R值';
ZhHans.MIXLY_RGB_G = 'G值';
ZhHans.MIXLY_RGB_B = 'B值';
ZhHans.MIXLY_RGBdisplay_rgb_rainbow1 = '七彩变换切换时间';
ZhHans.MIXLY_RGBdisplay_rgb_rainbow2 = '七彩循环切换时间';
ZhHans.MIXLY_RGB_DISPLAY_RAINBOW_TYPE_1 = '普通';
ZhHans.MIXLY_RGB_DISPLAY_RAINBOW_TYPE_2 = '渐变';
ZhHans.MIXLY_RGB_display_rgb_rainbow3 = '彩虹值';
ZhHans.MIXLY_4DIGITDISPLAY = '四位数码管';
ZhHans.MIXLY_4DIGITDISPLAY_NOMBER1 = '第';
ZhHans.MIXLY_4DIGITDISPLAY_NOMBER2 = '个';
ZhHans.MIXLY_4DIGITDISPLAY_DOT = '小数点';
ZhHans.MIXLY_4DIGITDISPLAY_ON = '亮';
ZhHans.MIXLY_4DIGITDISPLAY_OFF = '灭';
ZhHans.MIXLY_0DEGREE = '0度';
ZhHans.MIXLY_90DEGREE = '90度';
ZhHans.MIXLY_180DEGREE = '180度';
ZhHans.MIXLY_270DEGREE = '270度';
ZhHans.MIXLY_MATRIX_TYPE = '点阵类型';
ZhHans.MIXLY_MATRIX_NAME = '点阵名称';
ZhHans.MIXLY_MAX7219_INIT_NUM = '点阵模块数量';
ZhHans.MIXLY_MAX7219_PUTSTR = '点阵屏幕滚动显示';
ZhHans.MIXLY_SPEED = '速度';
ZhHans.MIXLY_BRIGHTNESS = '亮度';
ZhHans.MIXLY_MAX7219_BRIGHTNESS_TOOLTIP = '亮度范围0~15'
ZhHans.MIXLY_MAX7219_LEDARRAY = '图案变量';
ZhHans.MIXLY_MAX7219_INIT = 'MAX7219点阵初始化';
ZhHans.MIXLY_MAX7219_IMG = '点阵预设图案';
ZhHans.MIXLY_MAX7219_HDISPALY = '水平点阵屏数';
ZhHans.MIXLY_MAX7219_VDISPALY = '竖直点阵屏数';
ZhHans.MAX7219_FILLSCREEN_ON = '全亮';
ZhHans.MAX7219_FILLSCREEN_OFF = '全灭';
ZhHans.MAX7219_SHUTDOWN_ON = '关闭屏幕';
ZhHans.MAX7219_SHUTDOWN_OFF = '开启屏幕';
ZhHans.MIXLY_MAX7219_NO = '屏幕序号';
ZhHans.MAX7219_INIT_TOOLTIP = '初始化点阵屏';
ZhHans.MIXLY_TOOPTIP_Matrix_MAX7219_STRING = '按一定速度逐个显示字符串中的每个字符';
ZhHans.MIXLY_TOOPTIP_Matrix_MAX7219_PREDEFARR = '返回预先定义的图案对应的数组';
ZhHans.MIXLY_4DIGITDISPLAY_TM1637 = 'TM1637';
ZhHans.MIXLY_4DIGITDISPLAY_TM1637_DISPLAYPRINT = 'TM1637 显示';
ZhHans.MIXLY_4DIGITDISPLAY_TM1637_DISPLAYSTRING_TIP = '少于等于4字符为显示，超过4个字符为滚动显示。';
ZhHans.MIXLY_4DIGITDISPLAY_TM1637_DISPLAYSTRING_TIP1 = '最多显示4位数字，多余4位数字无效。';
ZhHans.MIXLY_4DIGITDISPLAY_TM1637_TIP = '使用前必须用两个管脚初始化,CLK是时钟管脚,DIO是数据管脚';
ZhHans.MIXLY_4DIGITDISPLAY_TM1637_DISPLAYTIME = 'TM1637 显示时间';
ZhHans.MIXLY_4DIGITDISPLAY_TM1637_DISPLAYTIME_TOOLTIP = '显示时间,时分';
ZhHans.MIXLY_4DIGITDISPLAY_TM1637_INIT = 'TM1637 初始化';
ZhHans.MIXLY_4DIGITDISPLAY_TM1637_BRIGHTNESS = 'TM1637 设置亮度';
ZhHans.MIXLY_4DIGITDISPLAY_4DIGITDISPLAY_BRIGHTNESS_TOOLTIP = '设置亮度,范围是0-7';
ZhHans.MIXLY_4DIGITDISPLAY_TM1637_CLEARDISPLAY = 'TM1637 清屏';
ZhHans.MIXLY_YEAR = '年';
ZhHans.MIXLY_MONTH = '月';
ZhHans.MIXLY_DAY = '日';
ZhHans.MIXLY_HOUR = '时';
ZhHans.MIXLY_MINUTE = '分';
ZhHans.MIXLY_SECOND = '秒';
ZhHans.MIXLY_WEEK = '周';
ZhHans.MIXLY_WEEK2 = '星期';
ZhHans.MIXLY_MILLISECOND = '微秒';
ZhHans.MIXLY_DS1302_INITPIN = '初始化时钟模块DS1302 管脚 #';
ZhHans.MIXLY_SETDATE = '设置日期:';
ZhHans.MIXLY_DATEFORMATE = '日期格式(年-月-日)';
ZhHans.MIXLY_TIMEFORMATE = '时间格式(时:分:秒)';
ZhHans.MIXLY_DISPLAY_MATRIX_INIT = "HT16K33点阵初始化";
ZhHans.MIXLY_DISPLAY_MATRIX_SHOW = "HT16K33点阵";
ZhHans.MIXLY_DISPLAY_MATRIX_X = 'X轴';
ZhHans.MIXLY_DISPLAY_MATRIX_Y = 'Y轴';
ZhHans.MIXLY_DISPLAY_MATRIX_SHOWPOINT = ' 单点设为';
ZhHans.MIXLY_DISPLAY_MATRIX_SHOWPOINT_TOOLTIP = '点阵屏单点操作，XY轴取值范围1-8';
ZhHans.MIXLY_DISPLAY_MATRIX_CLEAR = " 显示清屏";
ZhHans.MIXLY_DISPLAY_MATRIX_ARRAYVAR = "数组变量";
ZhHans.MIXLY_DISPLAY_MATRIX_PICARRAY = " 图案数组";
ZhHans.MIXLY_DISPLAY_MATRIX_ROTATE = "旋转";
ZhHans.MIXLY_RTCINIT = '初始化时钟模块';
ZhHans.MIXLY_RTCGETTIME = '获取时间';
ZhHans.MIXLY_RTCSETTIME = '设置时间';
ZhHans.MIXLY_RTCSETDATE = '设置日期';
ZhHans.MIXLY_GET = '获取';
ZhHans.MIXLY_SYSTEM = '系统';
ZhHans.MIXLY_ADXL345 = '加速度传感器 ADXL345';
ZhHans.MIXLY_ADXL345_X = 'X轴加速度';
ZhHans.MIXLY_ADXL345_Y = 'Y轴加速度';
ZhHans.MIXLY_ADXL345_Z = 'Z轴加速度';
ZhHans.MIXLY_ADXL345_XA = 'X轴角度';
ZhHans.MIXLY_ADXL345_YA = 'Y轴角度';
ZhHans.MIXLY_ADXL345_ZA = 'Z轴角度';
ZhHans.MIXLY_Accel_X = 'X轴加速度';
ZhHans.MIXLY_Accel_Y = 'Y轴加速度';
ZhHans.MIXLY_Accel_Z = 'Z轴加速度';
ZhHans.MIXLY_Gyro_X = 'X轴角度';
ZhHans.MIXLY_Gyro_Y = 'Y轴角度';
ZhHans.MIXLY_Gyro_Z = 'Z轴角度';
ZhHans.MixGo_MPU9250_AX = 'x轴加速度';
ZhHans.MixGo_MPU9250_AY = 'y轴加速度';
ZhHans.MixGo_MPU9250_AZ = 'z轴加速度';
ZhHans.MixGo_MPU9250_GX = 'x轴角速度';
ZhHans.MixGo_MPU9250_GY = 'y轴角速度';
ZhHans.MixGo_MPU9250_GZ = 'z轴角速度';
ZhHans.MixGo_MPU9250_MX = 'x轴磁场';
ZhHans.MixGo_MPU9250_MY = 'y轴磁场';
ZhHans.MixGo_MPU9250_MZ = 'z轴磁场';
ZhHans.MIXLY_MICROBIT_JS_IS_GESTURE = '发生手势 ';
ZhHans.MIXLY_MICROBIT_JS_SERIAL_WHEN_CONTAIN_DATA = '当 Serial 收到的数据包含 ';
ZhHans.MIXLY_MICROBIT_JS_SERIAL_READ_LINE = 'Serial 读取一行';
ZhHans.MIXLY_MICROBIT_JS_RANDOM_BOOLEAN = '随机产生真或假';
ZhHans.MIXLY_MICROBIT_JS_PERIOD = '周期(微秒)设为';
ZhHans.MIXLY_MICROBIT_JS_LAST_PULSE_PERIOD = '获取最近一次脉冲的周期(微秒)';
ZhHans.MIXLY_MICROBIT_JS_PULSE_STATUS = '脉冲状态';
ZhHans.MIXLY_MICROBIT_JS_RADIO_SEND_NUMBER = '无线 发送数字';
ZhHans.MIXLY_MICROBIT_JS_RADIO_SEND_VALUE = '无线 发送键值';
ZhHans.MIXLY_MICROBIT_JS_RADIO_SEND_STRING = '无线 发送字符串';
ZhHans.MIXLY_MICROBIT_JS_RADIO_ON_RECEIVE = '当无线收到';
ZhHans.MIXLY_MICROBIT_JS_RADIO_SET_GROUP = '无线 设置组';
ZhHans.MIXLY_MICROBIT_JS_RADIO_SET_TRANSMIT_POWER = '无线 设置输出信号强度';
ZhHans.MIXLY_MICROBIT_JS_RADIO_SET_TRANSMIT_SERIAL_NUMBER = '无线 设置传输中带串口号';
ZhHans.MIXLY_MICROBIT_JS_RADIO_WRITE_RECEIVE_PACKET_TO_SERIAL = '无线 将收到数据写入串口';
ZhHans.MIXLY_MICROBIT_JS_CREATE_SPRITE = '创建精灵 在x:';
ZhHans.MIXLY_MICROBIT_JS_Y = 'y:';
ZhHans.MIXLY_MICROBIT_JS_MOVE_BY = '移动';
ZhHans.MIXLY_MICROBIT_JS_DELETE_VAR = '删除';
ZhHans.MIXLY_MICROBIT_JS_TURN = '朝';
ZhHans.MIXLY_MICROBIT_JS_BY_ANGLE = '角度';
ZhHans.MIXLY_MICROBIT_JS_NUMBER = '大小';
ZhHans.MIXLY_MICROBIT_JS_TOUCH = '碰触';
ZhHans.MIXLY_MICROBIT_JS_TOUCH_EDGE = '碰触边缘?';
ZhHans.MIXLY_MICROBIT_JS_CHANGE_SCORE = '改变分数 大小';
ZhHans.MIXLY_MICROBIT_JS_SET_SCORE = '设置分数';
ZhHans.MIXLY_MICROBIT_JS_ON_EDGE_BOUNCE = '如果在边缘,则跳跃';
ZhHans.MIXLY_MICROBIT_JS_START_COUNTDOWN = '倒计时(毫秒)';
ZhHans.MIXLY_MICROBIT_JS_SCORE = '游戏得分';
ZhHans.MIXLY_MICROBIT_JS_GAME_OVER = '游戏结束';
ZhHans.MIXLY_MICROBIT_JS_GAME_RESUME = '游戏复位';
ZhHans.MIXLY_MICROBIT_JS_GAME_PAUSE = '游戏暂停';
ZhHans.MIXLY_MICROBIT_JS_ACCELERATION = "获取加速度 (g)"
ZhHans.MIXLY_MICROBIT_JS_SET_ACCELERATION = '设置加速度范围';
ZhHans.MIXLY_MICROBIT_JS_LIGHT_LEVEL = '获取光亮度';
ZhHans.MIXLY_MICROBIT_JS_CALIBRATE_COMPASS = '校准指南针';
ZhHans.MIXLY_MICROBIT_JS_GET_COMPASS = '获取指南针';
ZhHans.MIXLY_MICROBIT_JS_ROTATION = '获取旋转角度';
ZhHans.MIXLY_MICROBIT_JS_MAGETIC_FORCE = '获取磁通量(uT)';
ZhHans.MIXLY_MICROBIT_JS_BEAT = '节拍';
ZhHans.MIXLY_MICROBIT_JS_RING_TONE = '持续播放声音';
ZhHans.MIXLY_MICROBIT_JS_REST_TONE = '声音停止(ms)';
ZhHans.MIXLY_MICROBIT_JS_START_MELODY = '播放歌曲';
ZhHans.MIXLY_MICROBIT_JS_MUSIC_EVENT = '当播放';
ZhHans.MIXLY_MICROBIT_JS_GET_TEMPO = '获取节奏';
ZhHans.MIXLY_MICROBIT_JS_CHANGE_TEMPO = '增加节奏';
ZhHans.MIXLY_MICROBIT_JS_SET_TEMPO = '设置节奏为';
ZhHans.MIXLY_MICROBIT_JS_I2C_READ_ADDRESS = 'I2C 读取数字 地址';
ZhHans.MIXLY_MICROBIT_JS_I2C_FORMAT = '格式';
ZhHans.MIXLY_MICROBIT_JS_I2C_WRITE_ADDRESS = 'I2C 写入数字 地址';
ZhHans.MIXLY_MICROBIT_JS_I2C_VALUE = '值';
ZhHans.MIXLY_MICROBIT_JS_I2C_SETUP = 'I2C 初始化';
ZhHans.MIXLY_MICROBIT_JS_SPI_WRITE = "I2C 写入";
ZhHans.MIXLY_MICROBIT_JS_SPI_FREQUENCY = "SPI 频率";
ZhHans.MIXLY_MICROBIT_JS_SPI_FORMAT = "SPI 格式";
ZhHans.MIXLY_MICROBIT_JS_SPI_SET_PINS = "SPI 设置管脚";
ZhHans.MIXLY_MICROBIT_JS_BLE_SERVICE = '蓝牙 开启服务';
ZhHans.MIXLY_MICROBIT_JS_BLE_ON_CONNECTED = '蓝牙 连接时';
ZhHans.MIXLY_MICROBIT_JS_BLE_ON_DISCONNECTED = '蓝牙 断开连接时';
ZhHans.MIXLY_MICROBIT_JS_BLE_ON_RECEIVE = '蓝牙 收到数据';
ZhHans.MIXLY_MICROBIT_JS_BLE_CONNECTED = '可连接';
ZhHans.MIXLY_MICROBIT_JS_BLE_NAMESPACE = '命名空间(字节 6-9)';
ZhHans.MIXLY_MICROBIT_JS_BLE_INSTANCE = '实例(字节 2-6)';
ZhHans.MIXLY_MICROBIT_JS_BLE_POWER = '功率';
ZhHans.MIXLY_MICROBIT_JS_BLE_URL = '网址'
ZhHans.MIXLY_MICROBIT_JS_BLE_WRITE_NUMBER = '蓝牙 uart 写入数字';
ZhHans.MIXLY_MICROBIT_JS_BLE_WRITE_STRING = '蓝牙 uart 写入字符串';
ZhHans.MIXLY_MICROBIT_JS_BLE_WRITE_VALUE = '蓝牙 uart 写入值';
ZhHans.MIXLY_MICROBIT_JS_BLE_UART_SERVICE = '蓝牙 开启uart服务';
ZhHans.MIXLY_MICROBIT_JS_BLE_STOP_ADVERTISING = '停止蓝牙公布';
ZhHans.MIXLY_MICROBIT_JS_BLE_SET_POWER = '设置蓝牙传输功率';
ZhHans.MIXLY_MICROBIT_JS_BLE_READ_UNTIL = '蓝牙 读取uart 直到遇到';
ZhHans.MIXLY_MICROBIT_JS_BLE_URL_CONNECTED = '蓝牙 公布网址. 可连接';
ZhHans.MIXLY_MICROBIT_JS_BLE_UID_CONNECTED = '蓝牙 公布UID. 可连接';
ZhHans.MIXLY_MICROBIT_JS_SYSTEM_RUN_BACKGROUND = '在后台运行';
ZhHans.MIXLY_MICROBIT_JS_SYSTEM_WAIT = '等待 (us)';
ZhHans.MIXLY_MICROBIT_JS_SYSTEM_RAISE_SOURCE = '触发事件 源';
ZhHans.MIXLY_MICROBIT_JS_SYSTEM_RAISE_VALUE = '值';
ZhHans.MIXLY_MICROBIT_JS_SYSTEM_ON_SOURCE = '当事情发生时 源';
ZhHans.MIXLY_MICROBIT_JS_SYSTEM_TIMESTAMP = '事情时间戳';
ZhHans.MIXLY_MICROBIT_JS_SYSTEM_VALUE = '事件值';
ZhHans.MIXLY_MICROBIT_JS_SYSTEM_DEVICE_NAME = '设备名';
ZhHans.MIXLY_MICROBIT_JS_SYSTEM_DEVICE_SERIAL_NUMBER = '设备串口号';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_SHOW_NUMBER = '显示数字';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_SHOW_IMAGE_OR_STRING = '显示图像/字符串';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_SHOW_STRING_ONE_BY_ONE = '逐字';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_SHOW_LEDS = '显示LED';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_SHOW_ARROW = '显示箭头';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_PLOT_POINT_X = '绘图 x';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_PLOT_POINT_Y = 'y';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_UNPLOT_POINT_X = '取消绘图 x';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_TOGGLE_POINT_X = '切换 x';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_GET_POINT_X = '点 x';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_PLOT_BAR_START = '绘制条形图 值为';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_PLOT_BAR_END = '最高';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_SET_BRIGHTNESS = '设置亮度';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_STOP_ANIMATION = '停止动画';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_LED_ENABLE = 'LED 启动';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_SHOW_IMAGE = '显示图片';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_AT_OFFSET = 'offset';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_CREATE_IMAGE = '创建图像';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_SCROLL_IMAGE = '滚动图像';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_WITH_OFFSET = 'offset';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_SCROLL_INTERVAL = '间隔';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_CREATE_BIG_IMAGE = '创建大图像';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_ARROW_IMAGE = '获取箭头图像';
ZhHans.MIXLY_MICROBIT_JS_TYPE_ARRAY_NUMBER = '数组<数字>';
ZhHans.MIXLY_MICROBIT_JS_TYPE_ARRAY_STRING = '数组<字符串>';
ZhHans.MIXLY_MICROBIT_JS_LIST_ADD_VALUE = '增加 值';
ZhHans.MIXLY_MICROBIT_JS_LIST_TO_END = '到末尾';
ZhHans.MIXLY_MICROBIT_JS_LIST_GET_AND_REMOVE_LAST = '获取并删除最后一项';
ZhHans.MIXLY_MICROBIT_JS_LIST_INSERT_AT = '插入 第';
ZhHans.MIXLY_MICROBIT_JS_LIST_VALUE = '项  值';
ZhHans.MIXLY_MICROBIT_JS_LIST_REVERSE = '逆序';
ZhHans.MIXLY_MICROBIT_JS_LIST_CLEAR = '清除';
ZhHans.MIXLY_MICROBIT_JS_LIST_GET_AND_REMOVE_FIRST = '获取并删除第一项';
ZhHans.MIXLY_MICROBIT_JS_LIST_INSERT = '插入';
ZhHans.MIXLY_MICROBIT_JS_LIST_AT_BEGINNING = '在首端';
ZhHans.MIXLY_MICROBIT_JS_LIST_FIND_INDEX_OF = '获取下标 值';
ZhHans.MIXLY_MICROBIT_JS_LIST_REMOVE_VALUE_AT = '删除项 第';
ZhHans.MIXLY_MICROBIT_JS_LIST_REMOVE_VALUE_XIANG = '项';
ZhHans.MIXLY_MICROBIT_JS_INTERRUPT_BTN = '中断 按钮#';
ZhHans.MIXLY_MICROBIT_JS_INOUT_ANALOG_PITCH = '模拟输出频率为';
ZhHans.MIXLY_MICROBIT_JS_INOUT_FREQUENCY = '赫兹的音调持续时长（秒）';
ZhHans.INOUT_ANALOGPITCH = "输出一定频率的音调一段时间";
ZhHans.MIXLY_MICROBIT_JS_INOUT_SETPIN = "设置管脚 #";
ZhHans.MIXLY_MICROBIT_JS_INOUT_EMITEVENTS = "发出事件";
ZhHans.MIXLY_MICROBIT_JS_INOUT_EVENT_EDGE = "接触边缘";
ZhHans.MIXLY_MICROBIT_JS_INOUT_EVENT_PULSE = "脉冲";
ZhHans.MIXLY_MICROBIT_JS_INOUT_EVENT_TOUCH = "触碰";
ZhHans.MIXLY_MICROBIT_JS_INOUT_SETPULL = "电路状态";
ZhHans.INOUT_SETEVENT = "设置管脚发出的事件类型";
ZhHans.MIXLY_MICROBIT_JS_INOUT_PULL_UP = "上拉";
ZhHans.MIXLY_MICROBIT_JS_INOUT_PULL_DOWN = "下拉";
ZhHans.MIXLY_MICROBIT_JS_INOUT_PULL_NONE = "无";
ZhHans.INOUT_SETPULL = "设置电路状态";
ZhHans.MIXLY_MICROBIT_JS_INOUT_SET_PITCH_PIN = "设置模拟输出声调的管脚为#";
ZhHans.INOUT_SET_PITCH_PIN = "设置用来进行模拟输出声调的管脚编号";
ZhHans.MIXLY_MICROBIT_shake = '摇晃';
ZhHans.MIXLY_MICROBIT_face_up = '朝上';
ZhHans.MIXLY_MICROBIT_face_down = '朝下';
ZhHans.MIXLY_MICROBIT_freefall = '自由落体';
ZhHans.MIXLY_MICROBIT_Accelerometer_X = '加速度计X轴';
ZhHans.MIXLY_MICROBIT_Accelerometer_Y = '加速度计Y轴';
ZhHans.MIXLY_MICROBIT_Accelerometer_Z = '加速度计Z轴';
ZhHans.MIXLY_MICROBIT_Was_gesture = '发生过手势 %1';
ZhHans.MIXLY_MICROBIT_Is_gesture = '发生手势 %1';
ZhHans.MIXLY_MICROBIT_Get_gestures = '获取所有识别的手势';
ZhHans.MIXLY_MICROBIT_Current_gesture = '当前手势';
ZhHans.MIXLY_MICROBIT_Button_is_pressed = '按键 %1 已经按下';
ZhHans.MIXLY_MICROBIT_Button_was_pressed = '按钮 %1 曾经按下';
ZhHans.MIXLY_MICROBIT_Get_number_of_presses_for_button = '按钮 %1 按下过的次数';
ZhHans.MIXLY_MICROBIT_Calibrate_compass = '校正指南针';
ZhHans.MIXLY_MICROBIT_Compass_heading = '指南针方向';
ZhHans.MIXLY_MICROBIT_Get_brightness_at = '获取第X列 %1 Y行 %2 位置的亮度';
ZhHans.MIXLY_MICROBIT_Set_brightness_at = '设置第X列 %1 Y行 %2 LED的亮度到 %3';
ZhHans.MIXLY_MICROBIT_Clear_display = '清除显示内容';
ZhHans.MIXLY_MICROBIT_SHOW_IMAGE_OR_STRING = '显示(图像/字符串)';
ZhHans.MIXLY_MICROBIT_Animate_images_or_string = '依次显示(图像/字符串) %1 延时 %2 毫秒 %3 等待 %4 %5 循环 %6 %7 清除 %8';
ZhHans.MIXLY_MICROBIT_Scroll_message = '滚动消息 %1';
ZhHans.MIXLY_MICROBIT_Turn_on_display = '打开';
ZhHans.MIXLY_MICROBIT_Turn_off_display = '关闭';
ZhHans.MIXLY_MICROBIT_monitor = "屏幕";
ZhHans.MIXLY_MICROBIT_Display_is_on = '显示器已打开？';
ZhHans.MIXLY_MICROBIT_Built_in_image = '内置图像 %1';
ZhHans.MIXLY_MICROBIT_Copy_image = '复制图像 %1';
ZhHans.MIXLY_MICROBIT_Invert_image = '反显图像 %1';
ZhHans.MIXLY_MICROBIT_Create_image = '创建图像 %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13 %14 %15 %16 %17 %18 %19 %20 %21 %22 %23 %24 %25 %26 %27 %28 %29 %30';
ZhHans.MIXLY_MICROBIT_Panic_with_status_code = '错误状态码';
ZhHans.MIXLY_MICROBIT_Sleep = '睡眠 %1 毫秒';
ZhHans.MIXLY_MICROBIT_Running_time = '运行时间';
ZhHans.MIXLY_MICROBIT_Board_temperature = '主板温度';
ZhHans.MIXLY_MICROBIT_Reset_micro = '复位 micro:bit';
ZhHans.MIXLY_MICROBIT_Play_built_in_melody = '播放内置音乐 %1 管脚 #%2 %3 等待 %4 %5 循环 %6';
ZhHans.MIXLY_MICROBIT_Play_built_in_melody_easy = '播放内置音乐 %1 管脚 #%2 %3 ';
ZhHans.MIXLY_MICROBIT_Play_pitch = '播放声音频率 %1 %2 持续 %3 毫秒';
ZhHans.MIXLY_MICROBIT_Play_notes = '播放音符列表 %1 管脚 # %2 等待 %3 %4 循环 %5';
ZhHans.MIXLY_MICROBIT_Reset_music = '恢复音乐初始设置';
ZhHans.MIXLY_MICROBIT_Stop_music = '停止播放音乐';
ZhHans.MIXLY_MICROBIT_Set_tempo = '设置节拍: 1 拍 %1 ticks at %2 bpm';
ZhHans.MIXLY_MICROBIT_Get_current_tempo = '获取当前节奏';
ZhHans.MIXLY_MICROBIT_Initialise_pin = '使用引脚 %1 控制，neopixel 彩灯数 %2 %3';
ZhHans.MIXLY_MICROBIT_Clear_neopixels = '清除neopixels彩灯 %1';
ZhHans.MIXLY_MICROBIT_Show_neopixels = '显示neopixels彩灯 %1';
ZhHans.MIXLY_MICROBIT_Using_neopixels = 'neopixels彩灯控制 %1 设置位置 %2 红色 %3 绿色 %4 蓝色 %5';
ZhHans.MIXLY_MICROBIT_Switch_on_radio = '打开无线';
ZhHans.MIXLY_MICROBIT_Switch_off_radio = '关闭无线';
ZhHans.MIXLY_MICROBIT_Configure_radio = '配置无线 消息长度 %1 队列 %2 %3 信道 %4 %5 广播功率 %6 %7 地址 %8 %9 群组 %10 %11 数据速率 %12 %13';
ZhHans.MIXLY_MICROBIT_SPI_INIT = 'SPI初始化 波特率 %1 bits %2 %3 mode %4 %5 MOSI# %6 %7 MISO# %8 SCK# %9';
ZhHans.MIXLY_MICROBIT_Reset_radio = '复位无线';
ZhHans.MIXLY_MICROBIT_Send_message = '发送消息 %1';
ZhHans.MIXLY_MICROBIT_Receive_message = '无线接收';
ZhHans.MIXLY_MICROBIT_Say = '说 %1';
ZhHans.MIXLY_MICROBIT_Pronounce = '读 %1';
ZhHans.MIXLY_MICROBIT_Sing = '唱 %1';
ZhHans.MIXLY_MICROBIT_Pin_touched = '管脚 # %1 被触摸？';
ZhHans.MIXLY_MICROBIT_Read_analog = '模拟输入 管脚 # %1';
ZhHans.MIXLY_MICROBIT_Write_analog = '模拟输出 管脚 # %2 设为 %1';
ZhHans.MIXLY_MICROBIT_Read_digital = '数字输入 管脚 # %1';
ZhHans.MIXLY_MICROBIT_Write_digital = '数字输出 管脚 # %2 设为 %1';
ZhHans.MIXLY_MICROBIT_JS_WAS_GESTURE = '发生过手势 ';
ZhHans.MIXLY_MICROBIT_JS_GET = '获取';
ZhHans.MIXLY_MICROBIT_JS_GET_GESTURE = '所有识别的';
ZhHans.MIXLY_MICROBIT_JS_CURRENT_GESTURE = '当前';
ZhHans.MIXLY_MICROBIT_JS_GESTURE = '手势';
ZhHans.MIXLY_MICROBIT_JS_FIELD_STRENGTH = '磁场强度';
ZhHans.MIXLY_MICROBIT_JS_FIELD_STRENGTH_ALL = '综合强度';
ZhHans.MIXLY_MICROBIT_JS_IS_COMPASS_CALIBRATED = '指南针已经校正？';
ZhHans.MIXLY_IS_TOUCHED = '被触摸';
ZhHans.MIXLY_WAS_PRESSED = '被按下';
ZhHans.MIXLY_GET_PRESSES = '被按下的次数';
ZhHans.MIXLY_MICROBIT_JS_MONITOR_SCROLL_STRING = '滚动显示字符串';
ZhHans.MIXLY_MICROBIT_PY_ACTUATOR_SPEECH_SAY = '说';
ZhHans.MIXLY_MICROBIT_PY_ACTUATOR_SPEECH_SING = '唱';
ZhHans.MIXLY_MICROBIT_PY_ACTUATOR_SPEECH_PRENOUNCE = '读';
ZhHans.LISTS_NAME_TOOLTIP = '输入列表名称';
ZhHans.blockpy_LIST_ADD_LIST = '增加 列表';
ZhHans.blockpy_LISTS_CREATE_WITH_INPUT_WITH = '初始化列表为';
ZhHans.MIXLY_blockpy_TOOLTIP_LISTS_CREATE_WITH_TEXT = '通过一个字符串来创建一个列表。';
ZhHans.blockpy_MIXLY_SPLITBYDOU = '创建列表';
ZhHans.blockpy_LISTS_LENGTH_TOOLTIP = "返回列表的长度。";
ZhHans.blockpy_LANG_LISTS_GET_INDEX_TOOLTIP = '返回列表中指定位置的值。';
ZhHans.blockpy_LANG_LISTS_SET_INDEX_TOOLTIP = '设置列表中指定位置的值。';
ZhHans.LISTS_GET_INDEX_RANDOM2 = "随机取出列表";
ZhHans.LISTS_GET_INDEX_RANDOM3 = "中的一项";
ZhHans.MATH_ZHENGCHU_SYMBOL = "//";
ZhHans.MIXLY_MICROBIT_JS_PERIOD_MIL = '周期';
ZhHans.MIXLY_TOOLTIP_INOUT_ANALOG_WRITE_PY = '设置指定管脚的值(0~1023)';
ZhHans.LISTS_ISEMPTY_TITLE = '是空的吗?';
ZhHans.LISTS_SORT_TITLE = '%1 排序 %2 %3';
ZhHans.LISTS_SORT_TYPE_NUMERIC = '按数字';
ZhHans.LISTS_SORT_TYPE_TEXT = '按字母';
ZhHans.LISTS_SORT_TYPE_IGNORECASE = '按字母(忽略大小写)';
ZhHans.LISTS_SORT_ORDER_ASCENDING = '升序';
ZhHans.LISTS_SORT_ORDER_DESCENDING = '降序';
ZhHans.DISPLAY_IMAGE_LET = '将图像';
ZhHans.DISPLAY_IMAGE_LET2 = '向';
ZhHans.DISPLAY_IMAGE_SHIFT = '平移';
ZhHans.DISPLAY_IMAGE_UNIT = '个单位';
ZhHans.LANG_MATH_RANDOM_FLOAT_INPUT_FROM = '随机小数 从';
ZhHans.LANG_MATH_RANDOM_FLOAT_INPUT_TO = '到';
ZhHans.LANG_MATH_RANDOM_FLOAT_TOOLTIP2 = '返回两个数（含）之间的随机小数';
ZhHans.MICROBIT_SPEECH_pitch = '音高';
ZhHans.MICROBIT_SPEECH_mouth = '嘴唇';
ZhHans.MICROBIT_SPEECH_throat = '喉咙';
ZhHans.MICROBIT_SPEECH_translation = '翻译为语音';
ZhHans.MICROBIT_ACTUATOR_ticks = '分辨率';
ZhHans.MICROBIT_PYTHON_TYPE = '获取数据类型';
ZhHans.MICROBIT_LOGIC_IS_IN = '中';
ZhHans.CONTROLS_FOREACH_INPUT = "对";
ZhHans.MICROBIT_DISPLAY_UNION = '联合';
ZhHans.MICROBIT_DISPLAY_INTERSECTION = '相交';
ZhHans.MICROBIT_DISPLAY_MINUS = '减除';
ZhHans.MICROBIT_DISPLAY_MERGE_SHAPE = '合并形状';
ZhHans.DICTS_CREATE_EMPTY_TITLE = "初始化为空字典";
ZhHans.DICTS_CREATE_EMPTY_TOOLTIP = "返回一个空字典，长度为 0，不包含任何数据记录";
ZhHans.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = "增加、删除或重新排列各部分以此重新配置这个字典块。";
ZhHans.DICTS_CREATE_WITH_INPUT_WITH = "初始化字典为";
ZhHans.DICTS_CREATE_WITH_ITEM_TITLE = "条目"
ZhHans.DICTS_CREATE_WITH_ITEM_TOOLTIP = "将一个项添加到字典中。";
ZhHans.DICTS_CREATE_WITH_TOOLTIP = "建立一个具有任意数量项目的字典。";
ZhHans.DICTS_CREATE_WITH_ITEM_KEY = "key"
ZhHans.DICT_KEYS = "获取所有键";
ZhHans.DICTS_KEYS_TOOLTIP = "返回一个列表，包括一个字典所有的键";
ZhHans.DICTS_GET_FROM_DICTS = "从字典";
ZhHans.DICTS_GET_IN = "获取键";
ZhHans.DICTS_GET_TOOLTIP = "获取字典中某个键的对应值，若键名称不存在则触发KeyError";
ZhHans.DICTS_GET_DEFAULT_TOOLTIP = "获取字典中某个键的对应值，若键名称不存在则返回默认值";
ZhHans.DICTS_ADD_in_DICT = "在字典";
ZhHans.DICTS_ADD = "中添加或修改条目 键";
ZhHans.DICTS_ADD_VALUE = "对应值";
ZhHans.DICTS_ADD_OR_CHANGE_TOOLTIP = "在字典中添加或删除条目";
ZhHans.DICTS_DELETE_IN = "中删除条目 键";
ZhHans.DICTS_DELETE_VALUE = "及对应值";
ZhHans.DICTS_DELETE_TOOLTIP = "删除字典中某个条目";
ZhHans.DICT_CLEAR = "清空字典中所有条目";
ZhHans.DICT_ITEMS = "字典转化为列表";
ZhHans.DICTS_ITEMS_TOOLTIP = "返回一个列表，包括一个字典可遍历的所有键和对应值";
ZhHans.DICT_VALUES = "获取所有键对应的值";
ZhHans.DICTS_VALUES_TOOLTIP = "返回一个列表，包括一个字典所有键的对应值";
ZhHans.DICTS_LENGTH_TOOLTIP = "返回字典的长度，即键的个数";
ZhHans.DICT_DELDICT = "删除字典";
ZhHans.OBJECT_DELETE = "删除列表/元组/字典/集合";
ZhHans.MATH_BIN = '二进制';
ZhHans.MATH_DEC = '十进制';
ZhHans.MATH_OCT = '八进制';
ZhHans.MATH_HEX = '十六进制';
ZhHans.MIXLY_MICROBIT_TYPE_FLOAT = '浮点数';
ZhHans.MIXLY_MICROBIT_TYPE_STRING = "字符串";
ZhHans.MIXLY_MICROBIT_TYPE_LIST = "列表";
ZhHans.MIXLY_MICROBIT_TYPE_TUPLE = "元组";
ZhHans.MIXLY_MICROBIT_TYPE_DICT = "字典";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_OPEN_FILE = "打开文件";
ZhHans.MIXPY_PANDAS_READ_CSV = "读取csv文件";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_MODE = "模式";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_READ = "读"
ZhHans.MIXLY_MICROBIT_PY_STORAGE_WRITE = "写"
ZhHans.MIXLY_MICROBIT_PY_STORAGE_BIT_READ = "二进制读";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_BIT_WRITE = "二进制写";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_AS = "为";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_FILE_WRITE = "写入文件";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_FROM_FILE = '从文件';
ZhHans.MIXLY_MICROBIT_PY_STORAGE_NO_MORE_THAN_SIZE = "读取内容 不超过";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_ONE_LINE_NO_MORE_THAN_SIZE = "读取一行内容 不超过";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_ALL_LINES_NO_MORE_THAN_SIZE = "读取所有行内容 不超过";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_CHARACTER = "字符";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_CAN_WRITE_ORNOT = "是否可写";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_GET = "获取";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_FILENAME = "的文件名";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_CLOSE_FILE = "关闭文件";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_LIST_ALL_FILES = "列出所有文件";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_DELETE_FILE = "删除文件";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_GET_FILE_SIZE = "获得文件";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_SIZE = "大小";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_RETURN_FILE = "返回文件";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_PRESENT_LOCATION = "当前读取的位置";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_FILE_TELL = "返回文件当前读取的位置";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_SET_FILE_POSITION = "设置文件";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_CURRENT_POSITION = "当前读取位置为";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_FILE_SEEK_START = "从文件开头算起";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_FILE_SEEK_CURRENT = "从文件当前位置算起";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_FILE_SEEK_END = "从文件结尾算起";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_FILE_SEEK_OFFSET = "偏移";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_CHANGE_DIR = '改变当前工作目录为';
ZhHans.MIXLY_MICROBIT_PY_STORAGE_GET_CURRENT_DIR = "获取当前工作目录";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_MKDIR = "文件夹";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_MAKEDIRS = "嵌套的文件夹";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_PATH = "根据目录";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_DELETE_DIRS = "递归删除目录";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_RENAME = "重命名文件";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_TO = "为";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_IS_OR_NOT = "是否是";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_IS_DIR = "目录";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_THE_PATH = "路径";
ZhHans.MIXLY_MICROBIT_PY_CONTORL_GET_TYPE = "数据类型";
ZhHans.MIXLY_MICROBIT_PY_CONTORL_UNAME = "当前系统信息";
ZhHans.MIXLY_MICROBIT_SHOW_STRING = " %1 延时 %2 毫秒 %3 等待 %4 %5 循环 %6 %7 清除 %8";
ZhHans.MIXLY_COMMUNICATION_RFID_INITIAL = "初始化RFID为";
ZhHans.MIXLY_COMMUNICATION_RFID_ON_DETECTED = "侦测到信号";
ZhHans.MIXLY_COMMUNICATION_RFID_READ_CARDNUM = "RFID所读卡的卡号";
ZhHans.MIXLY_COMMUNICATION_RFID_READ_CARDNUM_IS = "RFID侦测到的卡号为";
ZhHans.MIXLY_COMMUNICATION_RFID_WRITE = "RFID写卡";
ZhHans.MIXLY_COMMUNICATION_DATA_BLOCK = "数据块";
ZhHans.MIXLY_COMMUNICATION_WRITE_NUM = "写入数据为";
ZhHans.MIXLY_MICROBIT_PY_COMMUNICATE_WIFI = "无线";
ZhHans.MIXLY_MICROBIT_PY_COMMUNICATE_ON = "打开";
ZhHans.MIXLY_MICROBIT_PY_COMMUNICATE_OFF = "关闭";
ZhHans.MIXLY_COMMUNICATION_RFID_TOOLTIP = "这是RFID的读卡";
ZhHans.MIXLY_COMMUNICATION_RFID_READ = "RFID读取";
ZhHans.MIXLY_COMMUNICATION_DATA_FROM = "的数据";
ZhHans.MIXLY_COMMUNICATION_RFID_OFF = "RFID停止侦测";
ZhHans.HTML_RESET = "复位";
ZhHans.blockpy_inout_input = '接收输入';
ZhHans.blockpy_inout_raw_input = '接收字符串输入';
ZhHans.INOUT_input_TOOLTIP = '接收键盘输入，以回车结尾，prompt是提供给用户的输入提示';
ZhHans.INOUT_raw_input_TOOLTIP = '以字符串格式接收键盘输入，以回车结尾，prompt是提供给用户的输入提示';
ZhHans.blockpy_turtle_create = '创建海龟';
ZhHans.blockpy_turtle_create_TOOLTIP = '创建一个新的海龟';
ZhHans.blockpy_forward = '向前';
ZhHans.blockpy_backward = '向后';
ZhHans.blockpy_turtle_move_num = '步数';
ZhHans.MIXLY_TOOLTIP_TURTEL_FORWARD = '命令海龟向前移动';
ZhHans.MIXLY_TOOLTIP_TURTEL_BACKWARD = '命令海龟向后移动';
ZhHans.blockpy_left = '向左';
ZhHans.blockpy_right = '向右';
ZhHans.blockpy_turtle_rotate = '旋转';
ZhHans.MIXLY_TOOLTIP_TURTEL_LEFT = '命令海龟向左旋转';
ZhHans.MIXLY_TOOLTIP_TURTEL_RIGHT = '命令海龟向右旋转';
ZhHans.blockpy_setheading = '面向';
ZhHans.blockpy_setheading_degree = '度';
ZhHans.blockpy_time_time = '当前时间的时间戳';
ZhHans.blockpy_SET_CREATE_WITH_TOOLTIP = "建立一个具有任意数量元素的集合。";
ZhHans.blockpy_SET_CREATE_EMPTY_TITLE = "初始化为空集合";
ZhHans.blockpy_SET_CREATE_WITH_INPUT_WITH = '初始化集合为';
ZhHans.blockpy_SET_CREATE_WITH_CONTAINER_TITLE_ADD = "集合";
ZhHans.blockpy_SET_CREATE_WITH_CONTAINER_TOOLTIP = "增加、删除或重新排列各部分以此重新配置这个集合块。";
ZhHans.blockpy_SET_VARIABLES_NAME = "元素";
ZhHans.blockpy_SET_CREATE_WITH_ITEM_TOOLTIP = "将一个元素添加到集合中。";
ZhHans.SET_LENGTH_TOOLTIP = "返回集合的元素个数。";
ZhHans.SET_CLEAR = "清空集合中所有元素";
ZhHans.LISTS_TO_SET = "转化为集合";
ZhHans.blockpy_USE_LIST = '将列表';
ZhHans.LISTS_TO_SET_TOOLTIP = "通过列表创建集合";
ZhHans.blockpy_set_union = '并集';
ZhHans.blockpy_set_intersection = '交集';
ZhHans.blockpy_set_difference = '差集';
ZhHans.blockpy_set = '集合';
ZhHans.blockpy_and_set = '与集合';
ZhHans.blockpy_set_get_operate = '取';
ZhHans.MIXLY_TOOLTIP_SET_UNION = '返回两个集合的并集';
ZhHans.MIXLY_TOOLTIP_SET_INTERSECTION = '返回两个集合的交集';
ZhHans.MIXLY_TOOLTIP_SET_DIFFERENCE = '返回两个集合的差集';
ZhHans.MIXLY_blockpy_set_add = '增加';
ZhHans.SET_ADD_TOOLTIP = "向集合中添加一个元素，若此元素已在集合中则没有效果。";
ZhHans.MIXLY_blockpy_set_discard = '移除';
ZhHans.SET_DISCARD_TOOLTIP = "从集合中移除一个元素，若此元素不在集合中则没有效果。";
ZhHans.blockpy_set_update = '并更新';
ZhHans.MIXLY_TOOLTIP_SET_UPDATE = '取两个集合的并集，并赋值给前一个集合';
ZhHans.MIXLY_TOOLTIP_SET_INTERSECTION_UPDATE = '取两个集合的交集，并赋值给前一个集合';
ZhHans.MIXLY_TOOLTIP_SET_DIFFERENCE_UPDATE = '取两个集合的差集，并赋值给前一个集合';
ZhHans.blockpy_set_of = '的';
ZhHans.blockpy_is_set = '是否是集合';
ZhHans.blockpy_set_sub = '子集';
ZhHans.blockpy_set_super = '超集';
ZhHans.MIXLY_TOOLTIP_SET_SUB = '判断前一个集合是否是后一个集合的子集，返回布尔值';
ZhHans.MIXLY_TOOLTIP_SET_SUPER = '判断前一个集合是否是后一个集合的超集，返回布尔值';
ZhHans.blockpy_turtle_reset = '重置';
ZhHans.blockpy_turtle_home = '返回原点';
ZhHans.blockpy_turtle_drawing = '痕迹';
ZhHans.MIXLY_TOOLTIP_TURTEL_CLEAR = '清除海龟的所有痕迹，海龟位置和状态不变';
ZhHans.MIXLY_TOOLTIP_TURTEL_RESET = '清除海龟的所有痕迹，海龟状态重置为初始状态';
ZhHans.MIXLY_TOOLTIP_TURTEL_HOME = '海龟返回原点并恢复初始状态，痕迹不变';
ZhHans.blockpy_turtle_penup = '抬笔';
ZhHans.blockpy_turtle_pendown = '落笔';
ZhHans.blockpy_turtle_blank = ' ';
ZhHans.MIXLY_TOOLTIP_TURTEL_PENUP = '抬笔，海龟移动时不会留下痕迹';
ZhHans.MIXLY_TOOLTIP_TURTEL_PENDOWN = '落笔，海龟移动时会留下痕迹';
ZhHans.blockpy_turtle_size = '粗细';
ZhHans.blockpy_turtle_set = '设置画笔';
ZhHans.blockpy_turtle_set_num = '为';
ZhHans.MIXLY_TOOLTIP_TURTEL_SIZE = '设置海龟绘画痕迹的粗细';
ZhHans.MIXLY_TOOLTIP_TURTEL_SPEED = '设置海龟绘画时的移动速度';
ZhHans.blockpy_turtle_circle = '圆';
ZhHans.blockpy_turtle_dot = '点';
ZhHans.blockpy_turtle_draw = '绘制图形';
ZhHans.blockpy_turtle_radius = '半径为';
ZhHans.MIXLY_TOOLTIP_TURTEL_CIRCLE = '绘制一个空心圆形';
ZhHans.MIXLY_TOOLTIP_TURTEL_DOT = '绘制一个实心圆点';
ZhHans.MIXLY_TURTEL_SHAPESIZE = '设置海龟图标大小';
ZhHans.MIXLY_TURTEL_SHAPESIZE_WID = '垂直拉伸倍数';
ZhHans.MIXLY_TURTEL_SHAPESIZE_LEN = '水平拉伸倍数';
ZhHans.MIXLY_TURTEL_SHAPESIZE_OUTLINE = '轮廓宽度';
ZhHans.MIXLY_TOOLTIP_SHAPESIZE = '设置海龟的图标大小，三个参数分别为与当前箭头方向的垂直方向上的拉伸倍数，与当前箭头方向的水平方向上的拉伸倍数，轮廓宽度值';
ZhHans.MIXLY_TURTEL_GET_SHAPESIZE = '海龟图标大小';
ZhHans.MIXLY_TURTEL_GET_SHAPESIZE_TOOLTIP = '获取海龟当前的图标大小，返回一个长度为3的元组，分别代表海龟当前垂直方向的拉伸倍数，水平方向上的拉伸倍数以及轮廓宽度值';
ZhHans.MIXLY_TURTEL_GETSCREEN = '初始化海龟屏幕';
ZhHans.MIXLY_TURTEL_GETSCREEN_TOOLTIP = '初始化海龟屏幕，允许对屏幕进行调整或者创建屏幕事件';
ZhHans.MIXLY_TURTEL_EVENT_ONKEY = '创建事件 按下按键';
ZhHans.MIXLY_TURTEL_EVENT_ONKEY_TOOLTIP = '创建一个键盘响应事件，字符串键值可以是普通的按键或功能键，键值为None表示任何按键按下都会触发';
ZhHans.MIXLY_TURTEL_EVENT_ONCLICK = '创建事件 点击鼠标';
ZhHans.MIXLY_TURTEL_EVENT_ONCLICK_TOOLTIP = '创建一个鼠标响应事件，点击鼠标左键触发相应的函数（此函数必须包含两个参数，对应鼠标点击处的横纵坐标）';
ZhHans.MIXLY_TURTEL_EVENT_ONTIMER = '创建事件 倒计时';
ZhHans.MIXLY_TURTEL_EVENT_ONTIMER_TOOLTIP = '创建一个倒计时事件，倒计时指定的时间触发相应的函数';
ZhHans.MIXLY_TURTEL_SCREEN_LISTEN = '事件生效';
ZhHans.blockpy_turtle_show = '显示海龟';
ZhHans.blockpy_turtle_hide = '隐藏海龟';
ZhHans.MIXLY_TOOLTIP_TURTEL_SHOW = '将海龟显示为箭头';
ZhHans.MIXLY_TOOLTIP_TURTEL_HIDE = '隐藏表示海龟的箭头';
ZhHans.blockpy_turtle_goto = '移动到坐标 x';
ZhHans.blockpy_turtle_goto_y = 'y';
ZhHans.blockpy_turtle_goto_position = '位置处';
ZhHans.blockpy_turtle_setx = 'x';
ZhHans.blockpy_turtle_sety = 'y';
ZhHans.MIXLY_TOOLTIP_TURTEL_SETX = '海龟横向移动到给定的坐标位置';
ZhHans.MIXLY_TOOLTIP_TURTEL_SETY = '海龟纵向移动到给定的坐标位置';
ZhHans.blockpy_turtle_setxy_num = '坐标为';
ZhHans.blockpy_turtle_bgcolor = '设置背景颜色';
ZhHans.blockpy_turtle_pencolor = '设置画笔颜色';
ZhHans.blockpy_turtle_fillcolor = '设置画笔填充颜色';
ZhHans.TUPLE_CREATE_WITH_TOOLTIP = "建立一个具有任意数量项目的元组。";
ZhHans.TUPLE_CREATE_EMPTY_TITLE = "初始化为空元组";
ZhHans.TUPLE_CREATE_WITH_INPUT_WITH = "初始化元组为";
ZhHans.TUPLE_CREATE_WITH_CONTAINER_TITLE_ADD = "元组";
ZhHans.TUPLE_CREATE_WITH_CONTAINER_TOOLTIP = "增加、删除或重新排列各部分以此重新配置这个元组块。";
ZhHans.TUPLE_CREATE_WITH_ITEM_TOOLTIP = "将一个元素添加到元素中。";
ZhHans.TUPLE_GET_INDEX_TOOLTIP = '返回元组中指定位置的值。';
ZhHans.TUPLE_LENGTH_TOOLTIP = "返回元组的长度。";
ZhHans.TUPLE_DEL = "删除元组";
ZhHans.TUPLE_JOIN = "连接";
ZhHans.TUPLE_JOIN_TOOLTIP = "将两个元组进行连接形成一个新的元组。";
ZhHans.LISTS_TO_TUPLE = "转化为元组";
ZhHans.blockpy_TUPLE_MAX = '最大值';
ZhHans.blockpy_TUPLE_MIN = '最小值';
ZhHans.blockpy_turtle_set_size = '设置画笔粗细为';
ZhHans.blockpy_turtle_set_speed = '设置画笔速度为';
ZhHans.MICROPYTHON_TOOLTIP_LISTS_CREATE_WITH_TEXT = "通过一个字符串来创建一个列表。";
ZhHans.MIXPY_TOOLTIP_TUPLE_CREATE_WITH_TEXT = "通过一个字符串来创建一个元组。";
ZhHans.MIXPY_TOOLTIP_SET_CREATE_WITH_TEXT = "通过一个字符串来创建一个集合。";
ZhHans.blockpy_MIXLY_TUPLE_CREATE = '创建元组';
ZhHans.TURTLE_CLONE = "复制海龟";
ZhHans.TURTLE_CLONE_TOOLTIP = "创建一个当前海龟的复制。";
ZhHans.blockpy_turtle_angle = '角度为';
ZhHans.blockpy_turtle_beginfill = '开始填充';
ZhHans.blockpy_turtle_endfill = '结束填充';
ZhHans.MIXLY_TOOLTIP_TURTEL_BEGINFILL = '让海龟开始进行填充';
ZhHans.MIXLY_TOOLTIP_TURTEL_ENDFILL = '让海龟结束填充';
ZhHans.blockpy_USE_TUPLE = '将元组';
ZhHans.LISTS_TO_TUPLE_TOOLTIP = "将一个元组转换成列表";
ZhHans.BLOCKPY_PRINT_TOOLTIP = "打印指定的文字、数字或其他值，结尾自动换行。";
ZhHans.MIXLY_TOOLTIP_TUPLE_MAX = '获取元组中的最大值';
ZhHans.MIXLY_TOOLTIP_TUPLE_MIN = '获取元组中的最小值';
ZhHans.MIXLY_DE = '的';
ZhHans.MIXLY_UPDATE = '改为';
ZhHans.MIXLY_LIST_LEN = '长度';
ZhHans.MIXLY_LIST_COUNT = '个数';
ZhHans.MIXLY_LIST_INDEX = '位置';
ZhHans.A_TO_B = '转化为';
ZhHans.MIXLY_MICROBIT_WAIT = '等待';
ZhHans.MIXLY_MICROBIT_RANDOM = '随机';
ZhHans.TUPLE_TO_SET = "将元组转化为集合";
ZhHans.TUPLE_TO_LISTS = "将元组转化为列表";
ZhHans.SET_TO_TUPLE = "将集合转化为元组";
ZhHans.SET_TO_LISTS = "将集合转化为列表";
ZhHans.MATH_BA = "把";
ZhHans.MATH_JinZhi = "进制";
ZhHans.MATH_ZHW = "转换为";
ZhHans.MATH_Before_two = "二进制数转换为";
ZhHans.MATH_Before_eight = "八进制数转换为";
ZhHans.MATH_Before_ten = "十进制数转换为";
ZhHans.MATH_Before_sixteen = "十六进制数转换为";
ZhHans.MATH_Behind_two = "二进制数";
ZhHans.MATH_Behind_eight = "八进制数";
ZhHans.MATH_Behind_ten = "十进制数";
ZhHans.MATH_Behind_sixteen = "十六进制数";
ZhHans.MIXLY_TOOLTIP_sensor_pin_pressed = "返回管脚被触摸状态";
ZhHans.MIXLY_TOOLTIP_INOUT_ANALOG_WRITE_SET = "设置管脚周期";
ZhHans.MICROBIT_controls_TypeLists = "返回数据类型";
ZhHans.IN = "如果元素（x）在序列中则返回真";
ZhHans.MATH_TWO = '二';
ZhHans.MATH_TEN = '十';
ZhHans.MATH_EIGHT = '八';
ZhHans.MATH_SIXTEEN = '十六';
ZhHans.TEXT_GET_INDEX_RANDOM = "随机";
ZhHans._GET_TEXT_SUBLIST_TOOLTIP = "返回字符串中指定的部分。";
ZhHans.MIXLY_TOOLTIP_TEXT_LENGTH = "获取字符串长度";
ZhHans.MIXLY_SENOR_IS_PRESSED = "按钮被按着返回真";
ZhHans.MIXLY_SENOR_WAS_PRESSED = "按钮被按下返回真";
ZhHans.MIXLY_MICROBIT_JS_CURRENT = "当";
ZhHans.MIXLY_MICROBIT_JS_STATE = "状态为";
ZhHans.MIXLY_MICROBIT_PERFORMANCE = "执行一些语句";
ZhHans.MIXLY_MICROBIT_JS_IS_COMPASS_CALIBRATED1 = "如果指南针已经校正则返回真";
ZhHans.MIXLY_MICROBIT_JS_SET_TEMPO1 = "设置节奏的分辨率和速度";
ZhHans.MIXLY_MICROBIT_PY_ACTUATOR_SPEECH = "按指定的音乐属性";
ZhHans.MIXLY_MICROBIT_Play_notes1 = "播放音符列表";
ZhHans.MIXLY_MICROBIT_Play_built_in_melody1 = "播放内置音乐";
ZhHans.MIXLY_MICROBIT_Copy_image1 = "复制图像";
ZhHans.DISPLAY_IMAGE_LET3 = "平移指定个单位";
ZhHans.MIXLY_MICROBIT_image_add = "合并两个图像";
ZhHans.MIXLY_MICROBIT_image_reduce = "从图像1减除掉图像2";
ZhHans.MIXLY_MICROBIT_Create_image1 = "创建图像";
ZhHans.MIXLY_MICROBIT_Invert_image1 = "反显图像";
ZhHans.MIXLY_MICROBIT_Display_is_on1 = "如果显示器已打开则返回真";
ZhHans.MIXLY_MICROBIT_JS_MONITOR_SHOW_delay = "以指定的时间间隔";
ZhHans.MIXLY_MICROBIT_Animate_images1 = "动画显示图像";
ZhHans.MIXLY_MICROBIT_JS_MONITOR_BRIGHTNESS1 = "获取点(x,y)的亮度";
ZhHans.MIXLY_MICROBIT_JS_MONITOR_BRIGHTNESS2 = "设置点(x,y)的亮度";
ZhHans.MIXLY_MICROBIT_Built_in_image1 = "内置图像";
ZhHans.MIXLY_RGB_PIN_COUNT = "初始化RGB彩灯模块，包含指定数量的灯";
ZhHans.MIXLY_RGB_NUM_R_G_B = "设置RGB彩灯模块指定灯的R值,G值,B值，灯号从1开始";
ZhHans.MIXLY_RGB_NUM_R_G_B_MP = "设置RGB彩灯模块指定灯的R值,G值,B值，灯号从0开始";
ZhHans.MIXLY_RGB_NUM_R_G_B_MIXGOCC = "设置RGB彩灯模块指定灯的R值,G值,B值，灯号从0到3";
ZhHans.MIXLY_RGB_ALL_R_G_B_MIXGOCC = "设置全部RGB彩灯模块的R值,G值,B值";
ZhHans.MIXLY_RGB_NUM_R_G_B_MIXGOME = "设置RGB彩灯模块指定灯的R值,G值,B值，灯号从0到1";
ZhHans.MIXLY_RGB_NUM_R_G_B_MPYTHON = "设置RGB彩灯模块指定灯的R值,G值,B值，灯号从0到2";
ZhHans.MIXLY_MICROBIT_JS_SERIAL_READ_LINE1 = "返回串口中的一行字符串";
ZhHans.MIXLY_SERIAL_AVAILABLE1 = "如果串口中的数据可读则返回真";
ZhHans.MIXLY_SERIAL_softserial = "初始化串口 输入,输出,波特率";
ZhHans.MIXLY_MICROBIT_Configure_radio1 = '配置无线的消息长度,最大队列数量,信道,广播功率,数据速率';
ZhHans.MIXLY_MICROBIT_Send_message1 = "无线发送字符串";
ZhHans.MIXLY_MICROBIT_JS_I2C_READ = "设置I2C读取数字的设备地址,字节数";
ZhHans.MIXLY_MICROBIT_JS_I2C_WRITE = "设置I2C写入数字的设备地址,值";
ZhHans.TEXT_PRINT_Huanhang_TOOLTIP = "自动换行";
ZhHans.MIXLY_MICROBIT_Shiliang_Direction = "x,y,z矢量和";
ZhHans.MIXLY_MICROBIT_Direction = "方向";
ZhHans.MIXLY_MICROBIT_JS_ACCELERATION1 = "加速度(mg)";
ZhHans.MIXLY_MIX1 = "年/月/日";
ZhHans.MIXLY_MIX2 = "时/分/秒";
ZhHans.MIXLY_LCD_PRINT3_TOOLTIP = "在液晶显示屏第x行,第y列打印字符串";
ZhHans.MIXLY_LCD_PRINT4_TOOLTIP = "在液晶显示屏第一行和第二行打印字符串";
ZhHans.MIXLY_USE = "以";
ZhHans.MIXLY_BELONG = "的";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_CAN_WRITE_ORNOT1 = "如果文件可写则返回真，反之返回假";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_GET_FILENAME = "获取文件名称";
ZhHans.MIXLY_MICROBIT_IMAGE = "图像";
ZhHans.MIXLY_MICROBIT_Reset_COMPASS = "恢复指南针初始设置";
ZhHans.blockpy_turtle_pencolor_hex = '设置画笔颜色为十六进制';
ZhHans.blockpy_turtle_fillcolor_hex = '设置画笔填充颜色为十六进制';
ZhHans.blockpy_SET_GET_AND_REMOVE_LAST = '获取并删除集合中随机一项';
ZhHans.MIXLY_blockpy_set_update = '拆分增加';
ZhHans.SET_TO_LISTS_TOOLTIP = "将集合转化为列表";
ZhHans.blockpy_set_add_update = '拆分增加 列表/字符串';
ZhHans.blockpy_USE_SET = '将集合';
ZhHans.SET_TO_LIST = "转化为列表";
ZhHans.DICTS_ADD_OR_CHANGE = "添加或修改为";
ZhHans.MIXLY_TOOLTIP_LISTS_CREATE_WITH_TEXT2 = '创建或修改一个列表。';
ZhHans.PYTHON_LISTS_GET_SUBLIST_TOOLTIP = "复制列表中指定的部分。";
ZhHans.SET_UPDATE_TOOLTIP = "将列表或字符串的内容拆分并添加到集合中。";
ZhHans.SET_POP_TOOLTIP = "获取并删除集合中的一项。";
ZhHans.DICT_LENGTH_TOOLTIP = "返回字典中键的个数。";
ZhHans.DICTS_CLEAR_TOOLTIP = "将字典转化为一个空字典，保留变量。";
ZhHans.DICTS_DEL_TOOLTIP = "清空字典，并删除字典对应的变量。";
ZhHans.LISTS_INDEX_FROM_START_TOOLTIP = "%1是第一项";
ZhHans.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "返回在列表中的指定位置的项。";
ZhHans.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "返回列表中随机一项。";
ZhHans.LISTS_GET_RANDOM_SUBLIST_TOOLTIP = "从序列或集合中获取随机的若干项按随机顺序构成一个列表。";
ZhHans.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "获取并移除列表中的指定位置的项。";
ZhHans.MIXLY_Digital_PINMODEIN = "数字输入";
ZhHans.MIXLY_Digital_PINMODEOUT = "数字输出";
ZhHans.MIXLY_Analog_PINMODEIN = "模拟输入";
ZhHans.MIXLY_Analog_PINMODEOUT = "模拟输出";
ZhHans.MIXLY_mSecond = "毫秒";
ZhHans.MIXLY_uSecond = "微秒";
ZhHans.MIXLY_TOOLTIP_INOUT_ANALOG_WRITE_SET_FREQ = "设置管脚模拟输出频率";
ZhHans.MIXLY_TOOLTIP_CHAOSHENGBO = '超声波测距(cm):trigger接管脚15，echo接管脚14，sclk接管脚13';
ZhHans.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "获取并移除列表中随机一项。";
ZhHans.LISTS_GET_INDEX_TOOLTIP_INSERT = "在列表中的指定位置插入项。";
ZhHans.LISTS_GET_INDEX_TOOLTIP_CHANGE = "修改列表中指定位置的项。";
ZhHans.LISTS_GET_INDEX_TOOLTIP_DELETE = "移除列表中指定位置的项。";
ZhHans.blockpy_turtle_shape = '形状设置为';
ZhHans.blockpy_turtle_shape_arrow = '箭头';
ZhHans.blockpy_turtle_shape_turtle = '海龟';
ZhHans.blockpy_turtle_shape_square = '方块';
ZhHans.blockpy_turtle_shape_triangle = '三角';
ZhHans.blockpy_turtle_shape_circle = '圆形';
ZhHans.blockpy_turtle_shape_classic = '默认';
ZhHans.blockpy_turtle_write = '书写';
ZhHans.TURTLE_SHAPE_TOOLTIP = "设置海龟的形状，可选形状包括圆形、三角、方形、海龟、箭头和默认。";
ZhHans.TURTLE_WRITE_TOOLTIP = "使海龟在画布上当前位置书写指定的文字。";
ZhHans.LISTS_EXTEND_TOOLTIP = "将后一个列表增加到前一个列表结尾。";
ZhHans.MIXLY_MICROBIT_LIST_A_VALUE = '一个数值';
ZhHans.MIXLY_MICROBIT_LIST_A_ITEM = '一项';
ZhHans.MIXLY_MICROBIT_LIST_ASSIGN_AT = '赋值 第';
ZhHans.MIXLY_MICROBIT_LIST_EXTEND = '扩展增加';
ZhHans.MIXLY_MICROBIT_LIST_POP = '删除并获取 第';
ZhHans.TURTLE_POS_SHAPE = "获取海龟当前";
ZhHans.TURTLE_POS = "位置";
ZhHans.TURTLE_SHAPE = "形状";
ZhHans.TURTLE_HEADING = "朝向";
ZhHans.MIXLY_TOOLTIP_TURTEL_POS = '获取海龟当前位置，返回一个包含当前位置x坐标和y坐标的元组';
ZhHans.MIXLY_TOOLTIP_TURTEL_SHAPE = '获取海龟当前形状，返回一个字符串';
ZhHans.MIXLY_TOOLTIP_TURTEL_GET_SPEED = '获取海龟当前速度，返回一个整数';
ZhHans.LISTS_CREATE_PYTHON_EMPTY_TITLE = "初始化为空列表";
ZhHans.LISTS_CREATE_PYTHON_EMPTY_TOOLTIP = "返回一个列表，长度为 0，不包含任何数据记录";
ZhHans.LISTS_CREATE_WITH_PYTHON_TOOLTIP = "建立一个具有任意数量项目的列表。";
ZhHans.MIXLY_TOOLTIP_CONVERT_LIST_TO_TUPLE = '将列表转化成元组。';
ZhHans.MIXLY_TOOLTIP_CONVERT_LIST_TO_SET = '将列表转化成集合。';
ZhHans.MIXLY_TOOLTIP_CONVERT_LIST_TO_ARRAY = '将列表转化成数组。';
ZhHans.LANG_LISTS_REVERSE_TOOLTIP = '逆转列表中所有项的顺序。';
ZhHans.LISTS_SORT_TOOLTIP = '将列表中的所有项按照指定顺序指定方式进行排序。';
ZhHans.MIXLY_TOOLTIP_LIST_FIND_INDEX = '返回指定值在列表中的位置，如果值有多个则返回第一个值的位置。';
ZhHans.MIXLY_TOOLTIP_LIST_FIND_COUNT = '返回指定值在列表中的个数。';
ZhHans.MIXLY_TOOLTIP_LIST_APPEND = '将指定值增加到列表末尾。';
ZhHans.MIXLY_TOOLTIP_LIST_REMOVE = '将指定值从列表中移除，如果列表中有多个值则删除第一个，如果该值不在列表中则报错。';
ZhHans.LISTS_SET_INDEX_TOOLTIP_INSERT = "在列表中的指定位置增加指定的值。";
ZhHans.LISTS_SET_INDEX_TOOLTIP_CHANGE = "修改列表中的指定位置的值。";
ZhHans.LISTS_SET_INDEX_TOOLTIP_DELETE = "移除列表中的指定位置的值。";
ZhHans.DICT_UPDATE = "中的项目对应增加到字典";
ZhHans.MAKE_DICT = "将字典";
ZhHans.DICTS_UPDATE_TOOLTIP = "将前一个字典中的所有条目对应添加到后一个字典中，前者保持不变。";
ZhHans.DICTS_ADD_TOOLTIP = "在字典中添加或修改条目。";
ZhHans.MIXLY_TOOLTIP_TUPLE_FIND_INDEX = '返回指定值在元组中的位置，如果值有多个则返回第一个值的位置。';
ZhHans.MIXLY_TOOLTIP_TUPLE_FIND_COUNT = '返回指定值在元组中的个数。';
ZhHans.MATH_ONLIST_TOOLTIP_TUPLE_AVERAGE = "返回元组中的数值的平均值。";
ZhHans.MIXLY_UART_SETUP = "初始化 UART为";
ZhHans.MIXLY_TOOLTIP_BLOCKGROUP_GET_TEM_HUM = "返回温湿度传感器测得的温度和湿度，温度范围：0~50，湿度范围：20~90%";
ZhHans.MIXLY_DHT11_T_H = "获取温度和湿度";
ZhHans.MIXLY_RECT = "绘制矩形";
ZhHans.MIXLY_RECT_START = "起点";
ZhHans.MIXLY_RECT_Fill = "填充";
ZhHans.MIXLY_MICROBIT_SHOW_RECT = " 起点(x %1 ,y %2 ) 宽度 %3 高度 %4 %5 填充 %6";
ZhHans.MIXLY_MICROBIT_SHOW_LINE = "线条 起点(x %1 ,y %2 ) 长度 %3 ";
ZhHans.MIXLY_DISPLAY_DRAW = "绘制";
ZhHans.MIXLY_DISPLAY_RLINE = "水平";
ZhHans.MIXLY_DISPLAY_VLINE = "竖直";
ZhHans.MIXLY_MICROBIT_SHOW_LINE_ARBITRARILY = "绘制线条 起点(x1 %1 ,y1 %2 ) 终点(x2 %3 ,y2 %4 ) ";
ZhHans.MIXLY_ESP32_Create_image = '创建图像 %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13 %14 %15 %16 %17 %18 %19 %20 %21 %22 %23 %24 %25 %26 %27 %28 %29 %30 %31 %32 %33 %34 %35 %36 %37 %38 %39 %40 %41 %42 %43 %44 %45 %46 %47 %48 %49 %50 %51 %52 %53 %54 %55 %56 %57 %58 %59 %60 %61 %62 %63 %64 %65 %66 %67 %68 %69 %70 %71 %72 %73 %74 %75 %76 %77 %78 %79 %80 %81 %82 %83 %84 %85 %86 %87 %88 %89 %90 %91 %92 %93 %94 %95 %96 %97 %98 %99 %100 %101 %102 %103 %104 %105 %106 %107 %108 %109 %110 %111 %112 %113 %114 %115 %116 %117 %118 %119 %120 %121 %122 %123 %124 %125 %126 %127 %128 %129 %130 %131 %132 %133 %134 %135 %136';
ZhHans.MIXLY_ESP32_JS_MONITOR_BRIGHTNESS = "如果点(x,y)处灯亮着返回真";
ZhHans.MIXLY_ESP32_JS_MONITOR_GET_POINT = "处的灯亮着？";
ZhHans.MIXLY_ESP32_JS_MONITOR_SET_BRIGHTNESS = "设置亮灭";
ZhHans.MIXLY_ESP32_ON = "亮";
ZhHans.MIXLY_ESP32_OFF = "灭";
ZhHans.MIXLY_ESP32_JS_MONITOR_SET_SCREEN_BRIGHTNESS = "设置屏幕亮度";
ZhHans.MIXLY_ESP32_JS_MONITOR_GET_SCREEN_BRIGHTNESS = "获取屏幕亮度";
ZhHans.MIXLY_ESP32_JS_MONITOR_SET_BLINK_RATE = "设置闪烁频率";
ZhHans.MIXLY_NETWORK_INIT = "设置Wi-Fi";
ZhHans.MIXLY_NETWORK_MODE = "模式为";
ZhHans.MIXLY_NETWORK_WIFI_OPEN = "激活";
ZhHans.MIXLY_NETWORK_WIFI_CLOSE = "停用";
ZhHans.MIXLY_NETWORK_WIFI_FLAG = "网络接口";
ZhHans.MIXLY_NETWORK_WIFI_SCAN = "扫描可用Wi-Fi";
ZhHans.MIXLY_ESP32_NETWORK_CONNECT = "连接Wi-Fi";
ZhHans.MIXLY_NETWORK_WIFI_CONNECT = "Wi-Fi连接状态";
ZhHans.MIXLY_SYMBOL_QUESTION = "?";
ZhHans.MIXLY_ESP32_NETWORK_IP = "IP地址";
ZhHans.MIXLY_ESP32_NETWORK_MASK = "子网掩码";
ZhHans.MIXLY_ESP32_NETWORK_GATEWAY = "网关";
ZhHans.MIXLY_ESP32_NETWORK_STOP_CONNECT = "断开Wi-Fi";
ZhHans.MIXLY_ESP32_NETWORK_GET_WIFI = "获取Wi-Fi";
ZhHans.MIXLY_NETWORK_WIFI_ESSID = "接入点名称";
ZhHans.MIXLY_NETWORK_WIFI_CHANNEL = "Wi-Fi通道";
ZhHans.MIXLY_NETWORK_WIFI_SCAN_ATTRIBUTE = "全部特征";
ZhHans.MIXLY_ESP32_READ_LINE = "读取一行";
ZhHans.MIXLY_PINMODEPULLDOWN = "下拉输入";
ZhHans.MIXLY_ESP32_BLUETOOTH_SETUP = "初始化 设置蓝牙";
ZhHans.MIXLY_ESP32_BLUETOOTH_ADV_MAN = "厂商名字";
ZhHans.MIXLY_ESP32_BLUETOOTH_ADV_DEV = "设备名字";
ZhHans.MIXLY_ESP32_BLUETOOTH_FLAG = "广播";
ZhHans.MIXLY_ESP32_BLUETOOTH_START = "启用";
ZhHans.MIXLY_ESP32_BLUETOOTH = "蓝牙";
ZhHans.MIXLY_ESP32_BDA = "连接到远程GATTS服务器";
ZhHans.MIXLY_ESP32_BLUETOOTH_SERVICES = "获取现有GATTS服务";
ZhHans.MIXLY_ESP32_BLUETOOTH_CONNS = "获取当前所有客户端连接";
ZhHans.MIXLY_ESP32_BLUETOOTH_SCANNING = "扫描处于活动状态？";
ZhHans.MIXLY_ESP32_SERVICE_SETUP = "创建GATTSService";
ZhHans.MIXLY_ESP32_ONENET_CLIENT = "设备ID";
ZhHans.MIXLY_ESP32_ONENET_SERVER = "服务器域名";
ZhHans.MIXLY_ESP32_ONENET_USERNAME = "产品ID";
ZhHans.MIXLY_ESP32_ONENET_PASSWORD = "产品APIKey";
ZhHans.MIXLY_ESP32_ONENET_TOPIC = "主题";
ZhHans.MIXLY_ESP32_ONENET_SUB = "回调函数";
ZhHans.MIXLY_ESP32_IOT_CONNECT_WIFI = "确保连接到Wi-Fi";
ZhHans.MIXLY_ESP32_DISCONNECT_ONENET = "断开连接";
ZhHans.MIXLY_ESP32_CHECK_ONENET = "接收并执行指令";
ZhHans.MIXLY_ESP32_PUBLISH_ONENET = "发送信息";
ZhHans.MIXLY_ESP32_PUBLISH_ONENET_EMPTY = "发送空信息";
ZhHans.MIXLY_TO_BITES = '转字节';
ZhHans.MATH_ONLIST_TOOLTIP_TUPLE_MAX = "返回元组中最大数。";
ZhHans.MATH_ONLIST_TOOLTIP_TUPLE_MEDIAN = "返回元组中的中位数。";
ZhHans.MATH_ONLIST_TOOLTIP_TUPLE_MIN = "返回元组中最小数。";
ZhHans.MATH_ONLIST_TOOLTIP_TUPLE_MODE = "返回元组中的最常见的项的列表。";
ZhHans.MATH_ONLIST_TOOLTIP_TUPLE_RANDOM = "从元组中返回一个随机的元素。";
ZhHans.MATH_ONLIST_TOOLTIP_TUPLE_STD_DEV = "返回元组的标准偏差。";
ZhHans.MATH_ONLIST_TOOLTIP_TUPLE_SUM = "返回元组中的所有数字的和。";
ZhHans.TUPLE_DEL_TOOLTIP = "删除元组变量，释放元组变量的储存空间。";
ZhHans.PYTHON_TUPLE_GET_SUBLIST_TOOLTIP = "复制元组中指定的部分。";
ZhHans.MIXLY_ESP32_NETWORK_SERVER1 = "设置ESP32为服务端";
ZhHans.MIXLY_ESP32_NETWORK_SERVER2 = "接收消息";
ZhHans.MIXLY_MICROBIT_RADIO_SEND = "无线发送";
ZhHans.MIXLY_MICROBIT_MSG = "消息"
ZhHans.MIXLY_MICROBIT_MSG_BYTE = "消息(含字节)"
ZhHans.MIXLY_MICROBIT_MSG_FULL = "(消息,信号强度,时间戳)"
ZhHans.blockpy_DICT_POP = '获取并删除字典中键';
ZhHans.DICT_POP_TOOLTIP = "获取并删除字典中的对应项，返回被删除的值。";
ZhHans.DICTS_DEFAULT_VALUE = "默认值为";
ZhHans.DICTS_SET_DEFAULT = "设置 键";
ZhHans.DICTS_SETDEFAULT_TOOLTIP = "在字典中添加一个键及对应值，如果字典中已有同名键则无效。";
ZhHans.TEXT_UPPER = "大写（全部字符）";
ZhHans.TEXT_TITLE = "大写（单词首字母）";
ZhHans.TEXT_CAPITALIZE = "大写（句子首字母）";
ZhHans.TEXT_SWAPCASE = "大小写对调";
ZhHans.TEXT_LOWER = "小写";
ZhHans.TEXT_LJUST = "左对齐";
ZhHans.TEXT_CENTER = "居中";
ZhHans.AILGN_EDGE = "边缘";
ZhHans.TEXT_RJUST = "右对齐";
ZhHans.MIXLY_MIXPY_REPLACE = "替换";
ZhHans.LIST_SPLIT_AS = "按照";
ZhHans.LIST_SPLIT = "划分";
ZhHans.MIXLY_TOOLTIP_TEXT_SPLIT = "将字符串划分，返回一个列表。";
ZhHans.TEXT_STRIM = "消除";
ZhHans.TEXT_TRIM_BOTH = "两侧";
ZhHans.TEXT_TRIM_LEFT = "左侧";
ZhHans.TEXT_TRIM_RIGHT = "右侧";
ZhHans.TEXT_BLANK = "空格";
ZhHans.TEXT_TRIM_BOTH_TOOLTIP = "复制这段文字的同时删除两端多余的空格。";
ZhHans.TEXT_TRIM_LEFT_TOOLTIP = "复制这段文字的同时删除左侧多余的空格。";
ZhHans.TEXT_TRIM_RIGHT_TOOLTIP = "复制这段文字的同时删除右侧多余的空格。";
ZhHans.LIST_EQUAL_DISTANCE = "等距";
ZhHans.MIXLY_LIST_LENGTH = "按长度";
ZhHans.blockpy_TURTLE_DONE = '海龟显示图形';
ZhHans.blockpy_turtle_bgcolor_hex = '设置背景颜色为十六进制';
ZhHans.MIXLY_TOOLTIP_SERIES_CREATE_FROM_TEXT = '用数组或字典创建或修改一个series。';
ZhHans.SERIES_INDEX_VALUE = "获取Series所有";
ZhHans.SERIES_INDEX = "索引";
ZhHans.SERIES_INDEX_TOOLTIP = "返回一个列表，包括一个Series所有的索引";
ZhHans.SERIES_VALUE_TOOLTIP = "返回一个列表，包括一个Series所有的值";
ZhHans.blockpy_series_create = '创建series';
ZhHans.blockpy_series_via = '通过列表或字典';
ZhHans.blockpy_PYLAB_SHOW = '显示绘制图像';
ZhHans.blockpy_PYLAB_LEGEND = '显示图例';
ZhHans.blockpy_PYLAB_TITLE = '设置图像标题为';
ZhHans.blockpy_PYLAB_SET_LABEL = '设置图像';
ZhHans.blockpy_PYLAB_LABEL = '坐标说明文字为';
ZhHans.PYLAB_LABEL_X = "横";
ZhHans.PYLAB_LABEL_Y = "纵";
ZhHans.blockpy_series_set_index = '索引为';
ZhHans.blockpy_PYLAB_PLOT = '绘制成折线图';
ZhHans.blockpy_dataframe_create = '创建二维数据表';
ZhHans.blockpy_dataframe_via = '通过字典';
ZhHans.blockpy_dataframe_set_index_column = '列索引为';
ZhHans.blockpy_dataframe_set_index_raw = '行索引为';
ZhHans.blockpy_series_create_TOOLTIP = '通过字典或列表创建一个series，索引为默认的自然数';
ZhHans.blockpy_series_create_index_TOOLTIP = '通过字典或列表创建一个series，并指定一个列表作为索引';
ZhHans.blockpy_dataframe_create_TOOLTIP = '通过字典创建一个二维表，索引为默认的自然数';
ZhHans.blockpy_dataframe_create_index_TOOLTIP = '通过字典创建一个二维表，并指定列表作为行列索引';
ZhHans.blockpy_PYLAB_PLOT_LINE = '线型';
ZhHans.blockpy_PYLAB_PLOT_LINE_SOLID = '实线';
ZhHans.blockpy_PYLAB_PLOT_LINE_DOTTED = '虚线';
ZhHans.blockpy_PYLAB_PLOT_LINE_CHAIN = '点划线';
ZhHans.blockpy_PYLAB_PLOT_LINE_POINT_DOTTED = '点虚线';
ZhHans.mixpy_PYLAB_PLOT_XY = '绘制折线图';
ZhHans.mixpy_PYLAB_SCATTER = '绘制散点图';
ZhHans.mixpy_SUBPLOT = '分割子图 ';
ZhHans.mixpy_SUBPLOT_VERTICLE = '上下分割成';
ZhHans.mixpy_SUBPLOT_HORIZEN = '份 左右分割成';
ZhHans.mixpy_SUBPLOT_NUM = '份 激活部分';
ZhHans.mixpy_PYLAB_BAR = '绘制条形图';
ZhHans.mixpy_PYLAB_HIST = '绘制直方图';
ZhHans.mixpy_PYLAB_PIE = '绘制饼图';
ZhHans.mixpy_PYLAB_BAR_ALIGN = '对齐方式';
ZhHans.mixpy_PYLAB_PLOT_X = '自变量';
ZhHans.mixpy_PYLAB_PLOT_Y = '因变量';
ZhHans.mixpy_PYLAB_PLOT_XY_TOOLTIP = '以指定的自变量和因变量绘制折线图，自变量和因变量可以是列表、数组、元组等';
ZhHans.mixpy_PYLAB_PLOT_BAR_PLOT = '折线图';
ZhHans.mixpy_PYLAB_PLOT_BAR_BAR = '条形图';
ZhHans.mixpy_PYLAB_PLOT_BAR_EASY_TOOLTIP = '以指定的自变量和因变量绘制条形图，自变量和因变量可以是列表、数组、元组等';
ZhHans.mixpy_PYLAB_HIST_TOOLTIP = '以指定的数据集和分割点绘制直方图，数据集和分割点可以是列表、数组、元组等';
ZhHans.mixpy_PYLAB_TICKS = '轴刻度 ';
ZhHans.mixpy_PYLAB_TICKS_TAG = '标签';
ZhHans.mixpy_PYLAB_TICKS_TOOLTIP = '设置坐标轴的标签内容';
ZhHans.mixpy_NUMPY_TRIG = '数组运算';
ZhHans.mixpy_NUMPY_TRIG_TOOLTIP = '针对数组或列表中的每一项执行指定运算，结果返回一个数组';
ZhHans.mixpy_PANDAS_READCSV_TITLE = '标题行';
ZhHans.mixpy_PANDAS_READCSV_HEADER_Y = '包含';
ZhHans.mixpy_PANDAS_READCSV_HEADER_N = '不包含';
ZhHans.mixpy_PANDAS_READCSV_TOOLTIP = '将指定的csv文件内容读入一个变量，变量类型为Dataframe，如选择包含标题行则默认将csv文件第一行作为标题';
ZhHans.mixpy_DATAFRAME_GET = "获取标签";
ZhHans.mixpy_DATAFRAME_GET_INDEX = "对应的";
ZhHans.mixpy_DATAFRAME_GET_TOOLTIP = "按照标题名或索引名获取Dataframe的行或列";
ZhHans.mixpy_PL_SAVEFIG = "将绘制的图形保存为图片";
ZhHans.mixpy_PL_SAVEFIG_TOOLTIP = "保存绘制的图形，参数可以设置保存图片的路径、名称和扩展名";
ZhHans.mixpy_TURTLE_SAVEFIG_TOOLTIP = "通过海龟屏幕保存绘制的图形，支持的文件格式为.eps，需要预先初始化海龟屏幕";
ZhHans.mixpy_PL_TEXT_X = '横坐标';
ZhHans.mixpy_PL_TEXT_Y = '纵坐标';
ZhHans.mixpy_PL_TEXT_TAG = '处的数据标签为';
ZhHans.mixpy_PL_TEXT_TOOLTIP = '设置指定位置的数值标签';
ZhHans.mixpy_PL_AXES = '设置横纵坐标轴等长';
ZhHans.mixpy_PL_TEXT_CENTER = '正中';
ZhHans.mixpy_PL_TEXT_TOP = '上方';
ZhHans.mixpy_PL_TEXT_BOTTOM = '下方';
ZhHans.mixpy_PL_TEXT_HOR = '水平位于点';
ZhHans.mixpy_PL_TEXT_VER = '垂直位于点';
ZhHans.mixpy_PL_PIE_SHADOW_Y = '有';
ZhHans.mixpy_PL_PIE_SHADOW_N = '无';
ZhHans.mixpy_PYLAB_PIE_EXPLODE = '离心距离';
ZhHans.mixpy_PYLAB_PIE_SHADOW = '阴影';
ZhHans.mixpy_PYLAB_PIE_AUTOPCT = '数据标签';
ZhHans.mixpy_PYLAB_PIE_AUTOPCT_Z = '保留整数';
ZhHans.mixpy_PYLAB_PIE_AUTOPCT_O = '保留一位小数';
ZhHans.mixpy_PYLAB_PIE_AUTOPCT_T = '保留两位小数';
ZhHans.COLOUR_CYAN = "青色";
ZhHans.COLOUR_MAGENTA = "品红";
ZhHans.COLOUR_YELLOW = "黄色";
ZhHans.COLOUR_BLACK = "黑色";
ZhHans.COLOUR_WHITE = "白色";
ZhHans.blockpy_PYLAB_PLOT_DOT = '点型';
ZhHans.blockpy_PYLAB_PLOT_DOT_CIRCULAR = '圆点';
ZhHans.blockpy_PYLAB_PLOT_DOT_LARGE_DOT = '大圆点';
ZhHans.blockpy_PYLAB_PLOT_DOT_PIXEL = '像素点';
ZhHans.blockpy_PYLAB_PLOT_DOT_TRIANGLE_UP = '正三角';
ZhHans.blockpy_PYLAB_PLOT_DOT_TRIANGLE_DOWN = '倒三角';
ZhHans.blockpy_PYLAB_PLOT_DOT_TRIANGLE_LEFT = '左三角';
ZhHans.blockpy_PYLAB_PLOT_DOT_TRIANGLE_RIGHT = '右三角';
ZhHans.blockpy_PYLAB_PLOT_DOT_TRIMARKER_UP = 'Y形（正向）';
ZhHans.blockpy_PYLAB_PLOT_DOT_TRIMARKER_DOWN = 'Y形（倒向）';
ZhHans.blockpy_PYLAB_PLOT_DOT_TRIMARKER_LEFT = 'Y形（左向）';
ZhHans.blockpy_PYLAB_PLOT_DOT_TRIMARKER_RIGHT = 'Y形（右向）';
ZhHans.blockpy_PYLAB_PLOT_DOT_SQUARE = '正方形';
ZhHans.blockpy_PYLAB_PLOT_DOT_PENTAGON = '五边形';
ZhHans.blockpy_PYLAB_PLOT_DOT_STAR = '星形';
ZhHans.blockpy_PYLAB_PLOT_DOT_HEXAGON_VERTICAL = '竖六边形';
ZhHans.blockpy_PYLAB_PLOT_DOT_HEXAGON_HORIZONTAL = '横六边形';
ZhHans.blockpy_PYLAB_PLOT_DOT_PLUS = '加号';
ZhHans.blockpy_PYLAB_PLOT_DOT_CROSS = '叉号';
ZhHans.blockpy_PYLAB_PLOT_DOT_DIAMOND = '菱形（大）';
ZhHans.blockpy_PYLAB_PLOT_DOT_DIAMOND_SMALL = '菱形（小）';
ZhHans.blockpy_PYLAB_PLOT_DOT_VERTICAL = '短竖线';
ZhHans.blockpy_PYLAB_PLOT_DOT_HORIZONTAL = '短横线';
ZhHans.MIXLY_MICROBIT_JS_I2C = "I2C";
ZhHans.MIXLY_ESP32_TOUCH = "触摸";
ZhHans.MIXLY_ESP32_TOUCH_SENSOR = "触摸传感器";
ZhHans.MIXLY_ESP32_NEAR = "红外接近传感器数值";
ZhHans.MIXLY_ESP32_NEAR_BOOL = "红外接近传感器是否被遮挡";
ZhHans.MIXLY_ESP32_EXTERN_NEAR = "红外接近传感器";
ZhHans.MIXLY_ESP32_INTERRUPT = "中断";
ZhHans.MIXLY_ESP32_PITCH = "音高";
ZhHans.MIXLY_ESP32_DUTY = "音调";
ZhHans.MIXLY_ESP32_LIGHT = "获取光强传感器的值";
ZhHans.MIXLY_ESP32_SOUND = "获取声音传感器的值";
ZhHans.MIXLY_ESP32_EXTERN_LIGHT = "光强传感器";
ZhHans.MIXLY_ESP32_EXTERN_SOUND = "声音传感器";
ZhHans.MIXLY_ESP32_EXTERN_VALUE = "获取数值";
ZhHans.MIXLY_ESP32_MONITOR_SCROLL = '滚动';
ZhHans.MIXLY_PYTHON_GLOBAL = '使用全局变量';
ZhHans.MIXLY_ESP32_TOGGLE = "反转";
ZhHans.MIXLY_PYTHON_ONE_SHOT = "单次触发";
ZhHans.MIXLY_PYTHON_PERIODIC = "多次触发";
ZhHans.MIXLY_RTC_TIME = "设置RTC时钟";
ZhHans.blockpy_REQUESTS_GET = '发起get请求 接收为变量';
ZhHans.blockpy_REQUESTS_GET_TOOLTIP = '利用HTTP协议向指定域名发起get请求，将响应结果赋予变量';
ZhHans.blockpy_REQUESTS_GET_ATTR_STATUS_CODE = '状态码';
ZhHans.blockpy_REQUESTS_GET_ATTR_HEADER = '消息头';
ZhHans.blockpy_REQUESTS_GET_ATTR_TEXT = '响应内容';
ZhHans.blockpy_REQUESTS_GET_ATTR_CONTENT = '二进制内容';
ZhHans.blockpy_REQUESTS_GET_ATTR_COOKIES = 'cookies';
ZhHans.blockpy_REQUESTS = '请求';
ZhHans.blockpy_CONDUCT = '发起';
ZhHans.MIXLY_ESP32_TIME_TICKS_DIFF = '获取两个时间的差值'
ZhHans.MIXLY_ESP32_TIME_MINUS = '减'
ZhHans.MIXLY_ESP32_MACHINE_VALUE = '的值'
ZhHans.MIXLY_ESP32_RGB_WRITE = '生效'
ZhHans.MIXLY_GETPRESSURE = '获取大气压强';
ZhHans.MIXLY_MICROPYTHON_AS = "为";
ZhHans.MIXLY_ESP32_ONEWIRE_SCAN = "扫描";
ZhHans.MIXLY_ESP32_ONEWIRE_RESET = "重置 OneWire";
ZhHans.MIXLY_ESP32_ONEWIRE_READ = "读取字节";
ZhHans.MIXLY_ESP32_ONEWIRE_INIT = "初始化 bus";
ZhHans.MIXLY_ESP32_ONEWIRE_SELECT = "设置 OneWire";
ZhHans.MIXLY_ESP32_I2C_SCAN1 = "搜索I2C";
ZhHans.MIXLY_ESP32_I2C_SCAN2 = "总线上设备";
ZhHans.MIXLY_ESP32_SPI_SET = "设置 SPI 波特率";
ZhHans.MIXLY_ESP32_SPI_BUFFER = "缓冲器";
ZhHans.MIXLY_ESP32_SPI_OUTPUT = "同时输出";
ZhHans.MIXLY_ESP32_SET = "创建";
ZhHans.MIXLY_ESP32_WRITE = "写入";
ZhHans.MIXLY_ESP32_BUFFER_READ = "同时读取到缓冲器";
ZhHans.MIXLY_ESP32_WNUMBER = "写入数字 地址";
ZhHans.MIXLY_ESP32_RNUMBER = "读取数字 地址";
ZhHans.MIXLY_ESP32_READ = "读取";
ZhHans.MIXLY_ESP32_SUCCESS = "成功吗？";
ZhHans.MIXLY_ESP32_SPI_INIT = "SPI 初始化";
ZhHans.MIXLY_ESP32_REF_VOLTAGE = "参考电压";
ZhHans.MIXLY_TOOLTIP_DISPLAY_ONOFF = '返回灯的亮灭状态';
ZhHans.MIXLY_MICROPYTHON_SOCKET_INIT = '创建套接字';
ZhHans.MIXLY_MICROPYTHON_SOCKET_TYPE = '类型为';
ZhHans.MIXLY_MICROPYTHON_SOCKET_LISTEN = '开始监听传入连接';
ZhHans.MIXLY_MICROPYTHON_SOCKET_QUEUE = '最大队列数';
ZhHans.MIXLY_MICROPYTHON_SOCKET_LET_SOCKET = '将套接字';
ZhHans.MIXLY_MICROPYTHON_SOCKET_BIND_TO_ADDRESS = '绑定到地址';
ZhHans.MIXLY_MICROPYTHON_SOCKET_ACCEPT = '接受连接并返回套接字对象';
ZhHans.MIXLY_MICROPYTHON_SOCKET_RECEIVE = '接收套接字的数据 字节数';
ZhHans.MIXLY_MICROPYTHON_SOCKET_SEND = '发送';
ZhHans.MIXLY_MICROPYTHON_SOCKET_MAKE = "将";
ZhHans.MIXLY_MICROPYTHON_SOCKET_TO = "至";
ZhHans.MIXLY_MICROPYTHON_SOCKET_CLOSE = "关闭连接";
ZhHans.MIXLY_ESP32_MONITOR_GET_SCREEN_IMAGE = "获取屏幕图案";
ZhHans.MIXLY_ESP32_MONITOR_GET_SCREEN_IMAGE_TOOLTIP = "返回屏幕当前显示的图案";
ZhHans.MIXLY_ESP32_MONITOR_SHOW_STATIC = '静态显示字符串';
ZhHans.MIXLY_ESP32_SENOR_GYRO = '角速度(rad/s)';
ZhHans.DATAFRAME_RAW = "行";
ZhHans.DATAFRAME_COLUMN = "列";
ZhHans.MIXLY_ESP32_MUSIC_PLAY_LISTS = '播放音符列表'
ZhHans.MIXLY_ESP32_MUSIC_WAIT = '等待'
ZhHans.MIXLY_ESP32_MUSIC_LOOP = '循环'
ZhHans.MIXLY_ESP32_MIXGO_MUSIC_PLAY_TONE = '显示音符'
ZhHans.MIXLY_ESP32_MIXGO_MUSIC_SHOW_IN = '在'
ZhHans.MIXLY_MICROPYTHON_CLEAR = '清空'
ZhHans.MIXLY_MICROPYTHON_FORMAT = '格式化字符串'
ZhHans.MIXLY_SYSTEM_TIME_LOCALTIME = '获取格式化时间';
ZhHans.MIXLY_SYSTEM_TIME_LOCALTIME_ALL = "当前时间";
ZhHans.MIXLY_SYSTEM_TIME_LOCALTIME_YEAR = "当前年份";
ZhHans.MIXLY_SYSTEM_TIME_LOCALTIME_MONTH = "当前月份";
ZhHans.MIXLY_SYSTEM_TIME_LOCALTIME_DATE = "当前日期";
ZhHans.MIXLY_SYSTEM_TIME_LOCALTIME_HOUR = "当前小时";
ZhHans.MIXLY_SYSTEM_TIME_LOCALTIME_MINUTE = "当前分钟";
ZhHans.MIXLY_SYSTEM_TIME_LOCALTIME_SECOND = "当前秒钟";
ZhHans.MIXLY_SYSTEM_TIME_LOCALTIME_INWEEK = "当前是一周的第几天";
ZhHans.MIXLY_SYSTEM_TIME_LOCALTIME_INYEAR = "当前是一年的第几天";
ZhHans.MIXLY_SYSTEM_TIME_LOCALTIME_DST = "当前夏令时标记";
ZhHans.MIXLY_TURTLE_SCREEN_DELAY = '设置动画播放时间间隔为';
ZhHans.MIXLY_TOOLTIP_TURTEL_SCREEN_DELAY = '设置海龟绘画动画播放时刷新的时间间隔，默认为10，数值越小动画播放越快';
ZhHans.MIXLY_TURTLE_WRITE_MOVE = '画笔随文字移动';
ZhHans.MIXLY_TURTLE_WRITE_MOVE_TRUE = '是';
ZhHans.MIXLY_TURTLE_WRITE_MOVE_FALSE = '否';
ZhHans.MIXLY_TURTLE_WRITE_ALIGN = '文字对齐';
ZhHans.MIXLY_TURTLE_WRITE_ALIGN_LEFT = '居左';
ZhHans.MIXLY_TURTLE_WRITE_ALIGN_CENTER = '居中';
ZhHans.MIXLY_TURTLE_WRITE_ALIGN_RIGHT = '居右';
ZhHans.MIXLY_TURTLE_WRITE_FONT_NAME = '字体';
ZhHans.MIXLY_TURTLE_WRITE_FONT_NUM = '字号';
ZhHans.MIXLY_TURTLE_WRITE_FONT_TYPE = '字形';
ZhHans.MIXLY_TURTLE_WRITE_FONT_TYPE_NORMAL = '标准';
ZhHans.MIXLY_TURTLE_WRITE_FONT_TYPE_BOLD = '加粗';
ZhHans.MIXLY_TURTLE_WRITE_FONT_TYPE_ITALIC = '倾斜';
ZhHans.MIXLY_TURTLE_WRITE_FONT_TYPE_BOLD_ITALIC = '倾斜加粗';
ZhHans.MIXLY_ESP32_I2C_INIT = "初始化I2C，sda为数据信号，scl为时钟信号，频率为数据传输速率一般为10k或40k";
ZhHans.MIXLY_ESP32_I2C_SCAN = "搜索I2C总线上设备，返回设备地址";
ZhHans.MIXLY_ESP32_I2C_AVAILABLE = "判断I2C读取数据是否成功，返回真/假";
ZhHans.MIXLY_ESP32_SPI_INIT_TOOLTIP = "创建SPI对象并设置波特率(baudrate)，(时钟)极性(polarity):0/1，(时钟)相位(phase):0/1，以及时钟(SCK)，主设备输出，从设备输入(MOSI)，主设备输入，从设备输出(MISO)管脚";
ZhHans.MIXLY_ESP32_SPI_BUFFER_SET = "创建一个缓冲字节流，并设置其大小";
ZhHans.MIXLY_ESP32_SPI_READ = "返回SPI读取的字节(需填入读取的字节数)";
ZhHans.MIXLY_ESP32_SPI_READ_OUTPUT = "在MOSI上输出0xFF时读取一定数量的字节并返回";
ZhHans.MIXLY_ESP32_SPI_READINTO = "返回读取到的缓冲字节流(长度在创建缓冲字节流时已设置)";
ZhHans.MIXLY_ESP32_SPI_READINTO_OUTPUT = "读取给定的缓冲字节流并在MOSI上输出0xff";
ZhHans.MIXLY_ESP32_SPI_WRITE = "SPI发送字节";
ZhHans.MIXLY_ESP32_SPI_WRITE_READINTO = "SPI发送字节并将其读取到缓冲字节流";
ZhHans.MIXLY_ESP32_OW_INIT = "在某管脚上创建单总线协议";
ZhHans.MIXLY_ESP32_OW_SCAN = "返回总线上的设备列表";
ZhHans.MIXLY_ESP32_OW_READ = "读取总线上一个字节";
ZhHans.MIXLY_ESP32_OW_WRITE = "在总线上写入字符串/字节";
ZhHans.MIXLY_ESP32_OW_SELECT = "通过ROM代码选择特定的设备";
ZhHans.MIXLY_ESP32_OW_RESET = "重置总线";
ZhHans.MIXLY_ESP32_SERVO_MOVE = '设置舵机的旋转角度（0~180°)';
ZhHans.MIXLY_ESP32_SERVO_SPEED_TOOLIPS = '设置舵机的旋转速度(-100~100%)';
ZhHans.MIXLY_ESP32_LED_SETONOFF = "设置内嵌LED的状态";
ZhHans.MIXLY_ESP32_LED_GETONOFF = "获取内嵌LED当前的状态";
ZhHans.MIXLY_ESP32_LED_SETBRIGHT = "设置内嵌LED的当前亮度（0~65535）";
ZhHans.MIXLY_ESP32_EXTERN_LED_SETONOFF = "设置LED的状态";
ZhHans.MIXLY_ESP32_EXTERN_LED_GETONOFF = "获取LED当前的状态";
ZhHans.MIXLY_ESP32_EXTERN_LED_SETBRIGHT = "设置LED的当前亮度（0~65535）";
ZhHans.MIXLY_ESP32_MUSIC_PLAYSHOW = "播放音符列表，并显示对应音符";
ZhHans.MIXLY_ESP32_MUSIC_SET_TEMPO = "设置播放音乐的分辨率和速度";
ZhHans.MIXLY_ESP32_MUSIC_GET_TEMPO = "获取音乐当前的节奏";
ZhHans.MIXLY_ESP32_MUSIC_RESET = "恢复音乐的分辨率、速度等初始设置";
ZhHans.MIXLY_ESP32_MUSIC_WRI = "使与RGB彩灯有关的设置全部生效";
ZhHans.MIXLY_ESP32_MUSIC_SHOW_STATIC = "在屏幕上静态显示字符串";
ZhHans.MIXLY_ESP32_DISPLAY_SETPIXEL = "设置LED点阵灯在(x,y)位置的亮灭状态";
ZhHans.MIXLY_ESP32_SHOW_IMAGE_OR_STRING_DELAY = "在一段时间内显示图像/字符串";
ZhHans.MIXLY_ESP32_SCROLL_IMAGE_OR_STRING_DELAY = "在一段时间内滚动显示图像/字符串";
ZhHans.MIXLY_OLED_RECT = "以设定的顶点与长度绘制矩形";
ZhHans.MIXLY_OLED_LINE = "以设定的顶点与长度绘制线条";
ZhHans.MIXLY_OLED_LINE_ARBIT = "以设定的起点与终点绘制线条";
ZhHans.MIXLY_ESP32_SENSOR_LIGHT_LEVEL_TOOLTIP = "设置传感器亮度等级";
ZhHans.MIXLY_ESP32_SENSOR_RTC_INT_TOOLTIP = "初始化实时时钟";
ZhHans.MIXLY_ESP32_RTC_SET_DATATIME_TOOLTIP = "设置实时时钟模块时间";
ZhHans.MIXLY_ESP32_RTC_GET_TIME_TOOLTIP = "返回实时时钟的时间"
ZhHans.MIXLY_ESP32_NETWORK_INIT_TOOLTIP = "设置 Wi-Fi 的工作模式并初始化Wi-Fi";
ZhHans.MIXLY_ESP32_NETWORK_OPEN_TOOLTIP = "网络连接";
ZhHans.MIXLY_ESP32_NETWORK_SCAN_TOOLTIP = "返回可连接的Wi-Fi的";
ZhHans.MIXLY_ESP32_NETWORK_CONNECT_TOOLTIP = "设置Wi-Fi的名称和密码";
ZhHans.MIXLY_ESP32_NETWORK_WIFI_CONNECT_TOOLTIP = "当连接上Wi-Fi时返回为真";
ZhHans.MIXLY_ESP32_NETWORK_GET_CONNECT_TOOLTIP = "返回已连接上的Wi-Fi的地址";
ZhHans.MIXLY_ESP32_NETWORK_STOP_TOOLTIP = "断开Wi-Fi";
ZhHans.MIXLY_ESP32_NETWORK_GET_WIFI_TOOLTIP = "返回Wi-Fi的连接名称";
ZhHans.MIXLY_ESP32_NETWORK_AP_CONNECT_TOOLTIP = "设置接入点的名称";
ZhHans.MIXLY_ESP32_NETWORK_SOCKET_INIT_TOOLTIP = "设置网络连接协议为";
ZhHans.MIXLY_ESP32_NETWORK_SOCKET_BIND_TOOLTIP = "将套接字绑定到网络地址";
ZhHans.MIXLY_ESP32_NETWORK_SOCKET_LISTEN_TOOLTIP = "监听传入的连接";
ZhHans.MIXLY_ESP32_NETWORK_SOCKET_ACCEPT_TOOLTIP = "接受连接并返回连接的对象";
ZhHans.MIXLY_ESP32_NETWORK_SOCKET_RECEIVE_TOOLTIP = "利用TCP协议返回接收的数据";
ZhHans.MIXLY_ESP32_NETWORK_SOCKET_SEND_TOOLTIP = "利用TCP协议发送信息";
ZhHans.MIXLY_ESP32_NETWORK_SOCKET_RECEIVE_FROM_TOOLTIP = "利用UDP协议返回接收的数据";
ZhHans.MIXLY_ESP32_NETWORK_SOCKET_SEND_TO_TOOLTIP = "发送信息到指定的网络地址";
ZhHans.MIXLY_ESP32_NETWORK_SOCKET_CLOSE_TOOLTIP = "关闭网络连接";
ZhHans.MIXLY_ESP32_SENSOR_MIXGO_PIN_NEAR_TOOLTIP = '返回';
ZhHans.ESP32_SENSOR_NIXGO_LIGHT_TOOLTIP = '返回光强传感器的值（0~65535）';
ZhHans.ESP32_SENSOR_NIXGO_SOUND_TOOLTIP = '返回声音传感器的值（0~65535）';
ZhHans.MIXLY_MICROBIT_SENSOR_BMP_temperature_TOOLTIP = "获取温度（-45~+85℃)";
ZhHans.MIXLY_MICROBIT_SENSOR_BMP_press_TOOLTIP = "获取大气压强（0~20000hPa)";
ZhHans.MIXLY_MICROBIT_SENSOR_SHT_temperature_TOOLTIP = "获取温度（-40~+125℃）";
ZhHans.MIXLY_MICROBIT_SENSOR_SHT_HUM_TOOLTIP = "获取湿度（0~100%）";
ZhHans.MIXLY_ESP32_SENSOR_USE_I2C_TOOLTIP = '初始化传感器类型为：';
ZhHans.MIXLY_MICROBIT_SENSOR_DS18X20_TOOLTIP = '获取DS18X20的温度（℃）';
ZhHans.MIXLY_TOOLTIP_RTC_SETTIME = ZhHans.MIXLY_RTCSETTIME;
ZhHans.MIXLY_TOOLTIP_RTC_SETDATE = ZhHans.MIXLY_RTCSETDATE;
ZhHans.MIXLY_TOOLTIP_RGB_INIT = ZhHans.MIXLY_RGB_PIN_COUNT;
ZhHans.MIXLY_TOOLTIP_RGB_DISPLAY = ZhHans.MIXLY_RGB_NUM_R_G_B;
ZhHans.MIXLY_ESP32_INOUT_HIGHLOW_TOOLTIP = "返回高电平（1）或者低电平（0）";
ZhHans.MIXLY_ESP32_INOUT_DIGITAL_INIT_TOOLTIP = "初始化某管脚为数字输出的管脚";
ZhHans.MIXLY_ESP32_INOUT_DIGITAL_WRITE_TOOLTIP = "设置某管脚的数字输出值";
ZhHans.MIXLY_ESP32_INOUT_DIGITAL_READ_TOOLTIP = "获取某管脚的数字输入值";
ZhHans.MIXLY_ESP32_INOUT_ANALOG_READ_INIT_TOOLTIP = "初始化某个管脚为模拟输入的管脚";
ZhHans.MIXLY_ESP32_INOUT_ANALOG_ATTEN_TOOLTIP = "设置模拟输入的参考电压为3.3V、2.2V、1.5V或1.2V";
ZhHans.MIXLY_ESP32_INOUT_ANALOG_READ_TOOLTIP = "获取模拟输入的值（0~65535）";
ZhHans.MIXLY_ESP32_INOUT_PWM_ANALOG_WRITE_INIT_TOOLTIP = "初始化某管脚为模拟输出管脚";
ZhHans.MIXLY_ESP32_INOUT_PWM_ANALOG_WRITE_TOOLTIP = "设置某管脚模拟输出的值（0~65535）";
ZhHans.MIXLY_ESP32_INOUT_PWM_ANALOG_WRITE_SET_FREQ_TOOLTIP = "设置某管脚模拟输出的频率（1～78125）";
ZhHans.MIXLY_ESP32_INOUT_PIN_PRESSED_INIT_TOOLTIP = "初始化某管脚为触摸传感器的管脚";
ZhHans.MIXLY_ESP32_INOUT_PIN_PRESSED_TOOLTIP = "获取某管脚触摸传感器的值";
ZhHans.MIXLY_ESP32_INOUT_PIN_ATTACHINTERRUPT_TOOLTIP = "设置某个管脚中断的模式为上升、下降或者改变，并且设置回调函数";
ZhHans.MIXLY_ESP32_INOUT_ANALOG_WRITE_INIT_TOOLTIP = "初始化某管脚为模拟输出的管脚";
ZhHans.MIXLY_ESP32_INOUT_ANALOG_WRITE_TOOLTIP = "设置某管脚的模拟输出的值";
ZhHans.MIXLY_ESP32_THRESHOLD = "阈值";
ZhHans.MIXLY_TOUCHATTACHINTERRUPT_PIN = '触摸中断 管脚';
ZhHans.MIXLY_ESP32_HW_TIMER = '硬件定时器 编号#';
ZhHans.MIXLY_PYTHON_CONTROLS_PASS_TOOLTIP = "占位语句pass";
ZhHans.MIXLY_PYTHON_CONTROLS_RANGE_TOOLTIP = "返回一个整数序列，不包含末尾的数字，模块中的三个参数均应为整数";
ZhHans.MIXLY_PYTHON_CONTROLS_FOR_RANGE_TOOLTIP = "从起始数到结尾数中取出变量“%1”的值，按指定的间隔，执行指定的块";
ZhHans.MIXLY_ESP32_SYSTEM_TIMER_TOOLTIP = "设置某个计时器的间隔为某数值，模式为单次触发或多次触发，回调函数为某函数";
ZhHans.MIXLY_ESP32_SYSTEM_TIMER_INIT_TOOLTIP = "初始化一个计时器";
ZhHans.MIXLY_PYTHON_CONTROLS_FLOW_STATEMENTS_TOOLTIP = "跳出所在的循环";
ZhHans.MIXLY_ESP32_CONTROLS_MILLIS_TOOLTIP = "获取系统运行时间";
ZhHans.MIXLY_ESP32_SYSTEM_TICKS_DIFF_TOOLTIP = "获取两个时间的差值";
ZhHans.MIXLY_MIXPY_INOUT_STR_INPUT_TOOLTIP = '接收键盘输入，以回车结尾，内容自动转换为字符串，prompt是提供给用户的输入提示';
ZhHans.MIXLY_MIXPY_INOUT_INT_INPUT_TOOLTIP = '接收键盘输入，以回车结尾，内容自动转换为整数，prompt是提供给用户的输入提示';
ZhHans.MIXLY_MIXPY_INOUT_FLOAT_INPUT_TOOLTIP = '接收键盘输入，以回车结尾，内容自动转换为小数，prompt是提供给用户的输入提示';
ZhHans.MIXLY_MIXPY_CONTROL_END_TOOLTIP = '终止程序';
ZhHans.MIXLY_MIXPY_CONTROL_TRY_TOOLTIP = "尝试执行一段语句，根据语句正误情况执行一些命令";
ZhHans.MIXLY_MIXPY_CONTROL_EXCEPT_TOOLTIP = "如果尝试执行的语句有错误则执行的语句";
ZhHans.MIXLY_MIXPY_CONTROL_FINALLY_TOOLTIP = "无论尝试执行的语句是否有错误都执行的语句";
ZhHans.MIXLY_MIXPY_TEXT_UPPER_TOOLTIP = "将一个字符串中的所有字母全部转换成大写字母";
ZhHans.MIXLY_MIXPY_TEXT_TITLE_TOOLTIP = "将一个字符串中每个单词的首字母全部转换成大写字母";
ZhHans.MIXLY_MIXPY_TEXT_CAPITALIZE_TOOLTIP = "将一个字符串中每个句子的首字母全部转换成大写字母";
ZhHans.MIXLY_MIXPY_TEXT_SWAPCASE_TOOLTIP = "将一个字符串中的小写字母全部转换成大写字母，大写字母全部转换成小写字母";
ZhHans.MIXLY_MIXPY_TEXT_LOWER_TOOLTIP = "将一个字符串中的所有字符全部转换成小写字母";
ZhHans.MIXLY_MIXPY_TEXT_CENTER_TOOLTIP = "设置一个字符串的对齐方式，并用符号填充全部空白";
ZhHans.MIXLY_MIXPY_TEXT_FIND_TOOLTIP = "返回一个数字，代表字符串中某个字符首次出现的位置";
ZhHans.MIXLY_MIXPY_TEXT_REPLACE_TOOLTIP = "将一段字符串中的指定内容替换成相应的内容";
ZhHans.MIXLY_MIXPY_TEXT_SPLIT_TOOLTIP = "将一个字符串按照指定字符拆分成多个字符串，返回一个包含这些子字符串的列表";
ZhHans.MIXLY_MIXPY_TURTLE_TEXTINPUT = '海龟 获取用户输入的字符串';
ZhHans.MIXLY_MIXPY_TURTLE_TEXTINPUT_TITLE = '输入框标题为';
ZhHans.MIXLY_MIXPY_TURTLE_TEXTINPUT_PROMPT = '用户提示为';
ZhHans.TURTLE_TEXTINPUT_TOOLTIP = "弹出一个对话框获取用户输入的字符串，两个参数分别为对话框标题和用户的输入提示";
ZhHans.MIXLY_MIXPY_TURTLE_NUMINPUT = '海龟 获取用户输入的浮点数';
ZhHans.TURTLE_NUMINPUT_TOOLTIP = "弹出一个对话框获取用户输入的浮点数，参数分别为对话框标题、用户的输入提示、用户输入的默认值、最小值和最大值";
ZhHans.MIXLY_MIXPY_TURTLE_DRAW_CIRCLE = '绘制圆形';
ZhHans.MIXLY_MIXPY_TURTLE_SETXY = '坐标设置为';
ZhHans.MIXLY_MIXPY_TURTLE_SETXY_TOOLTIP = '命令海龟移动到指定的横纵坐标位置';
ZhHans.LANG_MATH_FLOAT_RANDOM = '小数(左开右闭)';
ZhHans.MIXLY_MIXPY_TEXT_FORMAT_TOOLTIP = '将第一个字符串参数指定位置处的内容对应替换为相应的参数，返回得到的字符串';
ZhHans.TEXT_RANDOM_CHAR = "随机一个字符";
ZhHans.TEXT_RANDOM_CHAR_TOOLTIP = "返回字符串中随机的一个字符";
ZhHans.LANG_LISTS_CLEAR_TOOLTIP = '删除列表中的所有项，使其变成一个空列表。';
ZhHans.MIXLY_TOOLTIP_TUPLE_SUM = '返回元组中所有数值的总和';
ZhHans.MIXLY_ESP32_IOT_WIFI_CONNECT_TOOLTIP = "连接到名称为某某，密码为某某的Wi-Fi";
ZhHans.MIXLY_ESP32_IOT_ONENET_CONNECT_TOOLTIP = "创建某个onenet连接";
ZhHans.MIXLY_ESP32_IOT_ONENET_DISCONNECT_TOOLTIP = "断开某个onenet连接";
ZhHans.MIXLY_ESP32_IOT_ONENET_CHECK_TOOLTIP = "使某个onenet连接接收并执行指令";
ZhHans.MIXLY_ESP32_IOT_ONENET_PUBLISH_DICT_TOOLTIP = "让某个onenet连接发送某个字典";
ZhHans.MIXLY_ESP32_IOT_ONENET_PUBLISH_TOOLTIP = "让某个onenet连接发送某消息";
ZhHans.MIXLY_MICROPYTHON_TYPE_COMPLEX = "复数";
ZhHans.TEXT_LINES_TOOLTIP = "多行文本";
ZhHans.MIXLY_MIXPY_LISTS_REMOVE = '删除指定项';
ZhHans.MIXLY_MIXPY_INOUT_PRINT_EMPTY = '光标自动换行';
ZhHans.MIXLY_MIXPY_INOUT_PRINT_MANY_ITEM_TOOLTIP = '将item拖入或拖出右侧的组块以改变打印的参数个数';
ZhHans.MIXLY_MIXPY_INOUT_PRINT_MANY_CONTAINER_TOOLTIP = "增加、删除或重新排列各部分以此重新配置这个组块";
ZhHans.MIXLY_MIXPY_INOUT_PRINT_MANY_TOOLTIP = '打印多个参数，如果参数个数为0，则让光标下移一行';
ZhHans.MIXLY_HANDBIT_DISLPAY_OLED_FILL = '充满';
ZhHans.MIXLY_PYTHON_CONTROLS_THREAD_START = '启动线程';
ZhHans.MIXLY_PYTHON_CONTROLS_THREAD_USE = '调用函数';
ZhHans.MIXLY_PYTHON_CONTROLS_THREAD_TOOLTIP = '启动一个新的线程，使用给定的参数(置于元组中)来调用函数';
ZhHans.MIXLY_ESP32_SHOW_IMAGE_OR_STRING_OR_ANIMATION = '显示(图像/字符串/动画)';
ZhHans.MIXLY_ESP32_SHOW_IMAGE_OR_STRING = '显示(图像/字符串)';
ZhHans.MIXLY_MIXPY_TURTLE_WIDTH = '画笔宽度';
ZhHans.MIXLY_TOOLTIP_TURTEL_HEADING = '获取海龟当前朝向，返回一个浮点数';
ZhHans.MIXLY_TOOLTIP_TURTEL_WIDTH = '获取海龟当前画笔宽度，返回一个整数';
ZhHans.MIXLY_PYTHON_TEXT_EVAL = '获取字符串';
ZhHans.MIXLY_PYTHON_TEXT_EVAL_RESULT = '执行结果';
ZhHans.MIXLY_PYTHON_TEXT_EVAL_TOOLTIP = '获取参数代码执行的返回值，如参数代码无返回值则返回None';
ZhHans.MIXLY_PYTHON_OS_SYSTEM = '执行系统指令';
ZhHans.MIXLY_PYTHON_OS_SYSTEM_TOOLTIP = '将字符串转化成命令在系统上运行，每条系统指令执行时会创建一个子进程，子进程的执行结果不会影响主进程';
ZhHans.MIXLY_PYTHON_TEXT_JOIN_SEQ_USE_STR = '通过字符串';
ZhHans.MIXLY_PYTHON_TEXT_JOIN_SEQ_SEQ = '将序列';
ZhHans.MIXLY_PYTHON_TEXT_JOIN_SEQ_GET_STR = '连接成一个字符串';
ZhHans.MIXLY_PYTHON_TEXT_JOIN_SEQ_TOOLTIP = '第二个参数必须是可迭代的且迭代的每一项类型都是字符串；结果返回一个字符串';
ZhHans.MIXLY_PYTHON_TURTLE_EXITONCLICK = '设置点击屏幕结束海龟画图';
ZhHans.MIXLY_MICROPYTHON_SOCKET_CONNECT_TO_ADDRESS = '连接到域名/IP';
ZhHans.MIXLY_ESP32_NETWORK_SOCKET_CONNECT_TOOLTIP = "将套接字连接到网络地址";
ZhHans.MIXLY_NETWORK_WIFI_IS_ACTIVE = "获取激活状态";
ZhHans.MIXLY_NETWORK_WIFI_IS_ACTIVE_TOOLTIP = "获取指定网络的激活状态";
ZhHans.MIXLY_ESP32_IOT_ONENET_PRINT_DATA = "打印数据";
ZhHans.MIXLY_PYTHON_LOGIC_COMPARE_CONTINOUS_TOOLTIP = "如果中间项同时满足左右两个不等式则返回真，否则返回假";
ZhHans.MIXLY_PYTHON_LOGIC_IS = "是";
ZhHans.MIXLY_PYTHON_LOGIC_IS_TOOLTIP = "判断两者是否为同一对象，是同一对象则返回真，否则返回假";
ZhHans.MIXLY_PYTHON_INOUT_PRINT_END_TOOLTIP = "打印指定的文字、数字或其他值，以指定的内容为结尾。";
ZhHans.MIXLY_PYTHON_MATH_CONSTANT = "常数";
ZhHans.MIXLY_PYTHON_MATH_CONSTANT_PI_TOOLTIP = "圆周率常数的近似值（保留小数点后15位）";
ZhHans.MIXLY_PYTHON_MATH_CONSTANT_E_TOOLTIP = "自然常数的近似值（保留小数点后15位）";
ZhHans.MIXLY_PYTHON_MATH_CONSTANT_PI_MP_TOOLTIP = "圆周率常数的近似值（保留小数点后6位）";
ZhHans.MIXLY_PYTHON_MATH_CONSTANT_E_MP_TOOLTIP = "自然常数的近似值（保留小数点后6位）";
ZhHans.MIXLY_ESP32_DISPLAY_ANIMATE = "内置动画";
ZhHans.MIXLY_PYTHON_LISTS_ZIP_ITEM = "迭代器";
ZhHans.MIXLY_PYTHON_LISTS_ZIP_ITEM_TOOLTIP = '将迭代器拖入或拖出右侧的组块以改变打印的参数个数';
ZhHans.MIXLY_PYTHON_LISTS_ZIP = "打包迭代器";
ZhHans.MIXLY_PYTHON_LISTS_ZIP_TOOLTIP = "将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的列表。如果各个迭代器的元素个数不一致，则返回列表的长度与最短的对象相同";
ZhHans.blynk_IOT_AUTH = 'Blynk授权码';
ZhHans.blynk_WIFI_SSID = 'Wi-Fi名称';
ZhHans.blynk_WIFI_PASS = 'Wi-Fi密码';
ZhHans.blynk_IOT_GET_DATA = '从App获取数据 虚拟管脚';
ZhHans.blynk_IOT_PUSH_DATA = '发送数据到App';
ZhHans.BLYNK_VIRTUALPIN = '虚拟管脚';
ZhHans.blynk_SERVER_INFO = '服务器信息';
ZhHans.blynk_SERVER_ADD = '服务器地址';
ZhHans.blynk_IOT_DATA_TYPE = '数据类型';
ZhHans.blynk_IOT_INT = '整型';
ZhHans.blynk_IOT_DOUBLE = '浮点型';
ZhHans.blynk_IOT_VAR_NAME = '变量名';
ZhHans.blynk_TIMER = 'Blynk定时器';
ZhHans.blynk_IOT_WidgetLED = 'LED组件 虚拟管脚';
ZhHans.blynk_IOT_IR_SEND = '红外控制空调 品牌';
ZhHans.blynk_IOT_GREE = '格力';
ZhHans.blynk_IOT_MIDEA = '美的';
ZhHans.blynk_IOT_FAN = '送风';
ZhHans.blynk_IOT_HEAT = '制热';
ZhHans.blynk_IOT_COOL = '制冷';
ZhHans.blynk_IOT_DRY = '抽湿';
ZhHans.blynk_IOT_AUTO = '自动';
ZhHans.blynk_IOT_FAN_3 = '高速';
ZhHans.blynk_IOT_FAN_2 = '中速';
ZhHans.blynk_IOT_FAN_1 = '低速';
ZhHans.blynk_IOT_IR_FAN = '风速';
ZhHans.blynk_IOT_IR_TEMP = ZhHans.MIXLY_TEMPERATURE;
ZhHans.blynk_IOT_IR_POWER = '电源';
ZhHans.blynk_IOT_IR_RECEIVE_RAW = '红外信号解码 管脚';
ZhHans.blynk_IOT_IR_SEND = '红外发送 管脚';
ZhHans.blynk_IOT_IR_SEND_CODE = '编码内容';
ZhHans.blynk_IOT_IR_SEND_TOOLTIP = '红外发送地址与内容范围均为0~255之间的整数';
ZhHans.DISPLAY = '显示屏';
ZhHans.OLED = 'OLED';
ZhHans.OLEDGET = '获取OLED';
ZhHans.OLED_CLEAR = '清屏';
ZhHans.MIXLY_HEIGHT = '高度';
ZhHans.MIXLY_WIDTH = '宽度';
ZhHans.OLED_DRAWPIXEL = '画点';
ZhHans.OLED_POSX = 'x坐标';
ZhHans.OLED_POSY = 'y坐标';
ZhHans.OLED_PAGE = '刷新页面';
ZhHans.OLED_DRAWLINE = '画线';
ZhHans.OLED_START_X = '起点x';
ZhHans.OLED_START_Y = '起点y';
ZhHans.OLED_END_X = '终点x';
ZhHans.OLED_END_Y = '终点y';
ZhHans.OLED_HOR = '水平';
ZhHans.OLED_VER = '垂直';
ZhHans.OLED_LENGTH = '长度';
ZhHans.OLED_DRAW_TRIANGLE = '画三角形';
ZhHans.OLED_D0_X = 'A点x';
ZhHans.OLED_D0_Y = 'A点y';
ZhHans.OLED_D1_X = 'B点x';
ZhHans.OLED_D1_Y = 'B点y';
ZhHans.OLED_D2_X = 'C点x';
ZhHans.OLED_D2_Y = 'C点y';
ZhHans.OLED_D3_X = 'D点x';
ZhHans.OLED_D3_Y = 'D点y';
ZhHans.OLED_DRAW_RECTANGLE = '画矩形';
ZhHans.OLED_L_U_X = '左上角x';
ZhHans.OLED_L_U_Y = '左上角y';
ZhHans.OLED_DRAWSTRLINE = '画直线';
ZhHans.OLED_DRAW_RAD_RECTANGLE = '画圆角矩形';
ZhHans.OLED_RADIUS = '圆角半径';
ZhHans.OLED_CIRCLE_RADIUS = '半径';
ZhHans.OLED_DRAW_CIRCLE = '画圆';
ZhHans.OLED_CENTER_CIRCLE_X = '圆心x';
ZhHans.OLED_CENTER_CIRCLE_Y = '圆心y';
ZhHans.OLED_ELLIPSE_RADIUS_X = 'x方向半径';
ZhHans.OLED_ELLIPSE_RADIUS_Y = 'y方向半径';
ZhHans.OLED_DRAW_ELLIPSE = '画椭圆';
ZhHans.OLED_DRAWSTR = '显示字符串';
ZhHans.OLED_PRINT_VAR = '显示文本';
ZhHans.OLED_STRING = '内容';
ZhHans.OLED_SET_FONT = '设置字体';
ZhHans.oled_draw4Str = '显示多行文本';
ZhHans.oled_page_tooltip = '新建OLED页面';
ZhHans.oled_setFont_tooltip = '设置字体,小字体11px,中字体20px,大字体25px';
ZhHans.oled_print_tooltip = '打印字符串变量值。';
ZhHans.OLED_DRAW_ELLIPSE_TOOLTIP = '绘制椭圆，x范围(0~127),y范围(0~63)';
ZhHans.OLED_INIT2 = 'OLED初始化';
ZhHans.OLED_INIT2_TOOLTIP = '接IIC接口,A4 (SDA), A5 (SCL)';
ZhHans.OLED_SOLID = '实心';
ZhHans.OLED_HOLLOW = '空心';
ZhHans.OLED_WHOLE_CICILE = '整圆';
ZhHans.OLED_UP_R = '右上';
ZhHans.OLED_UP_L = '左上';
ZhHans.OLED_LOW_R = '右下';
ZhHans.OLED_LOW_L = '左下';
ZhHans.OLED_BITMAP = '显示图像';
ZhHans.OLED_BITMAP_NAME = '图像名称';
ZhHans.OLED_BITMAP_DATA = '图像数据';
ZhHans.SAVETO = '保存到';
ZhHans.MIRROR = '镜像';
ZhHans.OLED_GET_HEIGHT_TOOLTIP = '获取OLED的宽度或高度';
ZhHans.OLED_DEF_BMP_DATA_TOOLTIP = '设置一个图像名称，将图像/汉字取模结果粘贴到图像数据中。';
ZhHans.OLED_SHOW_BMP_TOOLTIP = '设置需要显示图像/汉字的坐标和它的宽高，再设置图像名称。';
ZhHans.OLED_DRAW_PIXE_TOOLTIP = '设置坐标，在OLED上绘制点。';
ZhHans.OLED_DRAW_LINE_TOOLTIP = '设置直线的起点和终点坐标，画出一条直线。';
ZhHans.OLED_FONT_chinese1 = '宋体小字体集1(411字)';
ZhHans.OLED_FONT_chinese2 = '宋体小字体集2(574字)';
ZhHans.OLED_FONT_chinese3 = '宋体小字体集3(993字)';
ZhHans.OLED_FONT_gb2312a = '宋体大字体集A(4041字)';
ZhHans.OLED_FONT_gb2312b = '宋体大字体集B(4531字)';
ZhHans.OLED_FONT_gb2312 = '宋体全集(7539字)';
ZhHans.blynk_EMAIL = '发送邮件';
ZhHans.blynk_EMAIL_ADD = '邮件地址';
ZhHans.blynk_EMAIL_SUBJECT = '邮件主题';
ZhHans.blynk_EMAIL_CONTENT = '邮件内容';
ZhHans.blynk_BRIDGE_AUTH = '桥接授权码';
ZhHans.blynk_bridge_digitalWrite = '桥接数字输出';
ZhHans.blynk_bridge_AnaloglWrite = '桥接模拟输出';
ZhHans.BLYNK_BRIDGE_VIRTUALPIN = '桥接虚拟管脚';
ZhHans.blynk_WidgetRTC_init = 'RTC组件初始化';
ZhHans.blynk_WidgetRTC_setSyncInterval = '同步间隔';
ZhHans.blynk_WidgetRTC_mintues = '分钟';
ZhHans.blynk_WidgetRTC_get_time = 'RTC组件获取';
ZhHans.blynk_iot_playmusic = '播放音乐组件';
ZhHans.GD5800_MP3 = 'MP3模块';
ZhHans.MIXLY_MP3_PLAY = '播放';
ZhHans.MIXLY_MP3_PAUSE = '暂停';
ZhHans.MIXLY_MP3_NEXT = '下一曲';
ZhHans.MIXLY_MP3_PREV = '上一曲';
ZhHans.MIXLY_MP3_VOL_UP = '音量加';
ZhHans.MIXLY_MP3_VOL_DOWN = '音量减';
ZhHans.MIXLY_MP3_LOOP_MODE = '循环模式';
ZhHans.MIXLY_MP3_LOOP_ALL = '全部循环';
ZhHans.MIXLY_MP3_LOOP_FOLDER = '文件夹内循环';
ZhHans.MIXLY_MP3_LOOP_ONE = '单曲循环';
ZhHans.MIXLY_MP3_LOOP_RAM = '随机播放';
ZhHans.MIXLY_MP3_EQ_MODE = '音效';
ZhHans.MIXLY_MP3_EQ_NORMAL = '普通';
ZhHans.MIXLY_MP3_EQ_POP = '流行';
ZhHans.MIXLY_MP3_EQ_ROCK = '摇滚';
ZhHans.MIXLY_MP3_EQ_JAZZ = '爵士';
ZhHans.MIXLY_MP3_EQ_CLASSIC = '古典';
ZhHans.MIXLY_MP3_EQ_BASS = '低音';
ZhHans.MIXLY_MP3_VOL = '音量';
ZhHans.MIXLY_MP3_PLAY_NUM = '播放第';
ZhHans.blynk_NOTIFY = '发送通知';
ZhHans.blynk_USB_SERVER_INFO = 'USB连接模式';
ZhHans.IICSCAN = 'IIC设备地址查找';
ZhHans.blynk_smartconfig = '一键配网';
ZhHans.blynk_terminal = '终端组件显示';
ZhHans.blynk_IOT_terminal_get = '从终端获取字符串';
ZhHans.blynk_VIDEOURL = '视频流';
ZhHans.blynk_LIGHT = '光线传感器组件';
ZhHans.blynk_GRAVITY = '重力传感器组件';
ZhHans.blynk_ACC = '加速度传感器组件';
ZhHans.blynk_ACC_tooltip = '返回值范围-9~9。';
ZhHans.blynk_time_input_1 = '时间输入组件(简单)';
ZhHans.BLYNK_CONNECTED = '硬件已连接';
ZhHans.BLYNK_APP_CONNECTED = 'App已连接';
ZhHans.BLYNK_APP_DISCONNECTED = 'App离线';
ZhHans.BLYNK_syncAll = '同步所有管脚状态';
ZhHans.blynk_IOT_syncVirtual = '同步虚拟管脚状态';
ZhHans.MIXLY_MOTOR_SPEED = '速度(-255~255)';
ZhHans.MIXLY_MOTOR = '电机';
ZhHans.MIXLY_MOTOR_SPEED_PIN = '速度管脚';
ZhHans.MIXLY_MOTOR_DIR_PIN = '方向管脚';
ZhHans.MIXLY_HARDWARE = '硬件交互';
ZhHans.MIXLY_HARDWARE_SERIAL = '串口号';
ZhHans.MIXLY_HARDWARE_START = '启动交互';
ZhHans.MixGo_MPU9250 = '加速度传感器';
ZhHans.MIXLY_HANBIT_SHOW_CIRCLE = " 圆心(x %1 ,y %2 ) 半径 %3 %4 填充 %5";
ZhHans.MIXLY_HANBIT_SHOW_triangle = " 顶点(x0 %1 ,y0 %2 ) (x1 %3 ,y1 %4 ) (x2 %5 ,y2 %6 ) %7 填充 %8";
ZhHans.MIXLY_HANBIT_DRAW_TRIANGLE = "三角形";
ZhHans.MICROBIT_SENSOR_LIGHT_TOOLTIP = '返回光强传感器的值（0~255）';
ZhHans.MPYTHON_BLYNK_TERMINAL_WIDGET_VPIN_HELPURL = '';
ZhHans.MPYTHON_BLYNK_TERMINAL_WIDGET_VPIN_MESSAGE0 = '自定义终端部件 Terminal 虚拟管脚 V %1';
ZhHans.MPYTHON_BLYNK_TERMINAL_WIDGET_VPIN_TOOLTIP = '';
ZhHans.MPYTHON_BLYNK_SYNC_VIRTUAL_HELPURL = '';
ZhHans.MPYTHON_BLYNK_SYNC_VIRTUAL_MESSAGE0 = '同步虚拟管脚的状态 V %1';
ZhHans.MPYTHON_BLYNK_SYNC_VIRTUAL_TOOLTIP = '同步虚拟管脚的状态';
ZhHans.MPYTHON_BLYNK_ON_DISCONNECTED_HELPURL = '';
ZhHans.MPYTHON_BLYNK_ON_DISCONNECTED_MESSAGE0 = '当 Blynk 断开连接时';
ZhHans.MPYTHON_BLYNK_ON_DISCONNECTED_TOOLTIP = '当 Blynk 断开连接时，执行一些语句';
ZhHans.MPYTHON_BLYNK_ON_CONNECTED_HELPURL = '';
ZhHans.MPYTHON_BLYNK_ON_CONNECTED_MESSAGE0 = '当 Blynk 连接时';
ZhHans.MPYTHON_BLYNK_ON_CONNECTED_TOOLTIP = '当 Blynk 连接时，执行一些语句 ';
ZhHans.MPYTHON_BLYNKTIMER_RUN_HELPURL = '';
ZhHans.MPYTHON_BLYNKTIMER_RUN_MESSAGE0 = '运行 Blynk 定时器进程';
ZhHans.MPYTHON_BLYNKTIMER_RUN_TOOLTIP = '建议放在 \'一直重复\' 中循环执行';
ZhHans.MPYTHON_BLYNK_GET_TIMERS_HELPURL = '';
ZhHans.MPYTHON_BLYNK_GET_TIMERS_MESSAGE0 = '可用的 Blynk 定时器';
ZhHans.MPYTHON_BLYNK_GET_TIMERS_TOOLTIP = "";
ZhHans.MPYTHON_BLYNK_STOP_TIMERS_HELPURL = '';
ZhHans.MPYTHON_BLYNK_STOP_TIMERS_MESSAGE0 = '停止 Blynk 定时器 %1';
ZhHans.MPYTHON_BLYNK_SET_PROPERTY_HELPURL = '';
ZhHans.MPYTHON_BLYNK_SET_PROPERTY_MESSAGE0 = '给虚拟管脚添加   属性 %1 值 %2';
ZhHans.MPYTHON_BLYNK_SET_PROPERTY_TOOLTIP = "放于 read 或 write 事件中，虚拟管脚由事件决定，与该管脚绑定的组件会拥有添加的属性";
ZhHans.MPYTHON_BLYNK_SET_PROPERTY_TOOLTIP = "给虚拟管脚添加颜色值";
ZhHans.MPYTHON_BLYNK_EMAIL_HELPURL = '';
ZhHans.MPYTHON_BLYNK_EMAIL_MESSAGE0 = '向 %1 发邮件 主题 %2 正文 %3';
ZhHans.MPYTHON_BLYNK_EMAIL_TOOLTIP = '向对象发送邮件，标明主题，标明正文';
ZhHans.MPYTHON_BLYNK_RUN_HELPURL = '';
ZhHans.MPYTHON_BLYNK_RUN_MESSAGE0 = '运行 Blynk 进程';
ZhHans.MPYTHON_BLYNK_RUN_TOOLTIP = '建议放在 \'一直重复\' 中循环执行';
ZhHans.MPYTHON_BLYNK_APP_NOTIFY_HELPURL = '';
ZhHans.MPYTHON_BLYNK_APP_NOTIFY_MESSAGE0 = 'Blynk App 显示通知 %1';
ZhHans.MPYTHON_BLYNK_APP_NOTIFY_TOOLTIP = 'Blynk App 显示通知';
ZhHans.MPYTHON_BLYNKTIMER_HELPURL = '';
ZhHans.MPYTHON_BLYNKTIMER_MESSAGE0 = 'Blynk 定时器 %1 %2 周期 %3 秒';
ZhHans.MPYTHON_BLYNKTIMER_TOOLTIP = '注意:\n定时器序号为自动获取，自上而下，从0开始且连续，不可"定时器0，定时器2"，此处暴露序号参数为方便查看！\n参数:\nno_timers_err=False-如果所有计时器都停止，禁用异常触发';
ZhHans.MPYTHON_BLYNK_SENSOR_DATA_TO_APP_HELPURL = '';
ZhHans.MPYTHON_BLYNK_SENSOR_DATA_TO_APP_MESSAGE0 = '发送数据 %1 到 Blynk App 的 虚拟管脚 V %2';
ZhHans.MPYTHON_BLYNK_SENSOR_DATA_TO_APP_TOOLTIP = '虚拟管脚：V0 ~ V255';
ZhHans.MPYTHON_BLYNK_APP_DATA_TOOLTIP = '收到虚拟管脚的值后执行一些语句';
ZhHans.MPYTHON_BLYNK_SETUP_HELPURL = '';
ZhHans.MPYTHON_BLYNK_SETUP_MESSAGE0 = 'Blynk 设置 %1 服务器 %2 端口 %3 授权码 %4';
ZhHans.MPYTHON_BLYNK_SETUP_TOOLTIP = '服务器默认为 ，端口默认为 8080，授权码默认为 AUTH TOKEN';
ZhHans.MPYTHON_BLYNK_APP_DATA_HELPURL = '';
ZhHans.MPYTHON_BLYNK_APP_DATA_MESSAGE0 = '当 从 Blynk App 收到 虚拟管脚 V %1 的值 %2';
ZhHans.MIXLY_readTempC = '获取摄氏度';
ZhHans.MIXLY_readTempF = '获取华氏度';
ZhHans.MIXLY_MPU6050 = 'MPU6050陀螺仪';
ZhHans.MIXLY_update_data = '刷新数据';
ZhHans.MIXLY_CHOOSE_AND_GET = '选择并获取';
ZhHans.MIXLY_CHOOSE_AND_GET_ONE_FILE_NAME = '单个文件名';
ZhHans.MIXLY_CHOOSE_AND_GET_MANY_FILE_NAMES = '多个文件名';
ZhHans.MIXLY_CHOOSE_AND_GET_DIR = '文件目录';
ZhHans.MIXLY_AipImageClassify = '图像识别';
ZhHans.MIXLY_AipFace = '人脸识别';
ZhHans.MIXLY_AipSpeech = '语音技术';
ZhHans.MIXLY_AipImageCensor = '图像审核';
ZhHans.MIXLY_AipOcr = '文字识别';
ZhHans.MIXLY_AipNlp = '自然语言处理';
ZhHans.MIXLY_Client = '客户端';
ZhHans.MIXLY_AipSpeech_synthesis = '语音合成';
ZhHans.MIXLY_AIP_ATTR = '属性';
ZhHans.MIXLY_AIP_FUNC = '功能';
ZhHans.MIXLY_AipSpeech_synthesis_TOOLTIP = '将一段文字合成为语音。属性为一个默认为空的字典，包括spd(语速，取值为0~9，默认为5)、pit(音调，取值为0~9，默认为5)、vol(音量，取值为0~15，默认为5)、per(发音人，0为女声，1为男声)';
ZhHans.MIXLY_AipImageClassify_advancedGeneral = '通用物体';
ZhHans.MIXLY_AipImageClassify_dishDetect = '菜品识别';
ZhHans.MIXLY_AipImageClassify_carDetect = '车辆识别';
ZhHans.MIXLY_AipImageClassify_animalDetect = '动物识别';
ZhHans.MIXLY_AipImageClassify_plantDetect = '植物识别';
ZhHans.MIXLY_AipImageClassify_logoSearch = 'logo商标识别';
ZhHans.MIXLY_AipImageClassify_Image = '图片';
ZhHans.MIXLY_AipImageClassify_advancedGeneral_TOOLTIP = '识别图片，返回的数据为字典，其中result为结果内容。';
ZhHans.MIXLY_AipOcr_basicGeneral = '通用文字识别';
ZhHans.MIXLY_AipOcr_webImage = '网络图片文字识别';
ZhHans.MIXLY_AipOcr_idcard = '身份证识别';
ZhHans.MIXLY_AipOcr_bankcard = '银行卡识别';
ZhHans.MIXLY_AipOcr_drivingLicense = '驾驶证识别';
ZhHans.MIXLY_AipOcr_vehicleLicense = '行驶证识别';
ZhHans.MIXLY_AipOcr_licensePlate = '车牌识别';
ZhHans.MIXLY_AipOcr_businessLicense = '营业执照识别';
ZhHans.MIXLY_AipOcr_receipt = '通用票据识别';
ZhHans.MIXLY_AipOcr_trainTicket = '火车票识别';
ZhHans.MIXLY_AipOcr_taxiReceipt = '出租车票识别';
ZhHans.MIXLY_AipOcr_form = '表格文字识别';
ZhHans.MIXLY_AipOcr_vatInvoice = '增值税发票识别';
ZhHans.MIXLY_AipOcr_passport = '护照识别';
ZhHans.MIXLY_AipOcr_handwriting = '手写文字识别';
ZhHans.MIXLY_AipOcr_TOOLTIP = '识别指定类型图片中的文字，返回的数据为字典，其中words_result为结果内容。';
ZhHans.MIXLY_AipSpeech_File = '音频文件';
ZhHans.MIXLY_AipSpeech_asr = '语音识别';
ZhHans.MIXLY_AipSpeech_ASR_TOOLTIP = '识别语音中的文字。属性字典中，键"dev_pid"对应的值为语言编码。1536、1537为普通话，1737为英语，1637为粤语，1837为四川话。返回的数据为字典，其中result为结果内容。';
ZhHans.MIXLY_AipNlp_lexer = '词法分析';
ZhHans.MIXLY_AipNlp_depParser = '依存句法分析';
ZhHans.MIXLY_AipNlp_wordEmbedding = '词向量表示';
ZhHans.MIXLY_AipNlp_dnnlm = 'DNN语言模型';
ZhHans.MIXLY_AipNlp_wordSimEmbedding = '词义相似度';
ZhHans.MIXLY_AipNlp_simnet = '短文本相似度';
ZhHans.MIXLY_AipNlp_commentTag = '评论观点抽取';
ZhHans.MIXLY_AipNlp_sentimentClassify = '情感倾向分析';
ZhHans.MIXLY_AipNlp_keyword = '文章标签';
ZhHans.MIXLY_AipNlp_topic = '文章分类';
ZhHans.MIXLY_AipNlp_ecnet = '文本纠错';
ZhHans.MIXLY_AipNlp_emotion = '对话情绪识别';
ZhHans.MIXLY_AipNlp_summary = '文本摘要';
ZhHans.MIXLY_AipNlp_TOOLTIP = '返回的数据为字典，其中items为结果内容。';
ZhHans.MIXLY_AipNlp_Sim = '相似度检测';
ZhHans.MIXLY_AipNlp_Sim_TOOLTIP = '返回的数据为字典，其中score为相似度结果。';
ZhHans.MIXLY_AipNlp_Topic_TOOLTIP = '返回的数据为字典，其中item为结果。lv1_tag_list、lv2_tag_list分别为一级、二级分类结果。';
ZhHans.MIXLY_AipNlp_Summary_TOOLTIP = '返回的数据为字典，其中summary为结果。';
ZhHans.MIXLY_AipNlp_Topic_Title = '标题';
ZhHans.MIXLY_AipNlp_Topic_Content = '正文';
ZhHans.MIXLY_AipFace_match = '人脸比对';
ZhHans.MIXLY_AipFace_match_TOOLTIP = '返回的数据为字典，其中score为相似度结果。';
ZhHans.MQTT_publish = 'MQTT:发送消息';
ZhHans.MQTT_SERVER = 'MQTT服务器';
ZhHans.MQTT_SERVER_ADD = '地址';
ZhHans.MQTT_Client_ID = '项目 ID';
ZhHans.MQTT_IOT_ID = 'IOT ID';
ZhHans.MQTT_IOT_PWD = 'IOT PWD';
ZhHans.MQTT_subscribe2 = '接收到';
ZhHans.MQTT_Topic = '主题';
ZhHans.MIXLY_MICROBIT_PY_STORAGE_ALL = "读取内容";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_ONE_LINE = "读取一行内容";
ZhHans.MIXLY_MICROBIT_PY_STORAGE_ALL_LINES = "读取所有行内容";
ZhHans.MIXLY_ENCODER = '旋转编码器';
ZhHans.MIXLY_SIMPLE_TIMER = '简单定时器';
ZhHans.MIXLY_PYTHON_STORAGE_OPEN_FILE_WITH_OS = '使用系统默认软件打开文件';
ZhHans.DS_CREATE_LINKEDLIST_CONTAINER_TITLE = "链表节点";
ZhHans.DS_CREATE_LINKEDLIST_CONTAINER_TOOLTIP = "增加、删除或重新排列各部分以此重新配置这个节点的属性。";
ZhHans.DS_CREATE_LINKEDLIST_ITEM_TITLE = "属性"
ZhHans.DS_CREATE_LINKEDLIST_ITEM_TOOLTIP = "将一个属性添加到节点中。";
ZhHans.DS_CREATE_LINKEDLIST_NEW = "创建链表";
ZhHans.DS_CREATE_LINKEDLIST_HEAD = "头节点名称";
ZhHans.DS_CREATE_LINKEDLIST_TYPE = "节点类型  ";
ZhHans.DS_CREATE_LINKEDLIST_ATTRIBUTE = "内置属性及对应值";
ZhHans.DS_CREATE_LINKEDLIST_TOOLTIP = "创建一个链表头节点，节点类型为定义的类，属性为类的属性，头节点为使用该类定义的对象。";
ZhHans.DS_CREATE_NODE_USE = "使用已有节点类型";
ZhHans.DS_CREATE_NODE_NEW = "定义新的节点";
ZhHans.DS_CREATE_NODE_TOOLTIP = "使用已经定义的类创建一个新的对象节点。";
ZhHans.DS_GET_NODE_ATTR_NODE = "获取节点";
ZhHans.DS_SET_NODE_ATTR_NODE = "节点";
ZhHans.DS_SET_NODE_ATTR_SET = "对应值设置为";
ZhHans.DS_GET_NODE_ATTR_TOOLTIP = "获取节点（一个对象）某个属性的对应值。";
ZhHans.DS_SET_NODE_ATTR_TOOLTIP = "修改节点（一个对象）某个属性的对应值。";
ZhHans.DS_ADD_NODE_HEAD_NODE = "头节点为";
ZhHans.DS_ADD_NODE_LINKEDLIST = "的链表";
ZhHans.DS_ADD_NODE_BEFORE = "之前";
ZhHans.DS_ADD_NODE_AFTER = "之后";
ZhHans.DS_ADD_NODE = "插入节点";
ZhHans.DS_ADD_NODE_TOOLTIP = "在链表的指定位置插入新的节点，并将插入节点是否成功的结果打印。";
ZhHans.DS_ADD_NODE_ATTR = "的节点";
ZhHans.DS_DEL_NODE_NAME = "删除节点";
ZhHans.DS_DEL_NODE_ATTR = "删除属性";
ZhHans.DS_DEL_NODE_TOOLTIP = "删除链表指定位置的节点，并将删除节点是否成功的结果打印。";
ZhHans.DS_REVERSE_LINKEDLIST = "的链表转置";
ZhHans.DS_REVERSE_LINKEDLIST_NEW_HEAD = "新的头节点名称";
ZhHans.MIXPY_SERIAL_OPEN = "打开可用串口";
ZhHans.MIXPY_SERIAL_OPEN_TIMEOUT = "读等待时间（秒）";
ZhHans.MIXPY_SERIAL_OPEN_TOOLTIP = "打开可用串口，读等待时间是指从串口读取数据无响应时等待的时间";
ZhHans.MIXPY_SERIAL_WRITE = "串口打印";
ZhHans.MIXPY_SERIAL_WRITE_TOOLTIP = "向可用串口发送数据，数据类型为字符串，以\\r结尾";
ZhHans.MIXPY_SERIAL_READ = "串口读取数据 长度为";
ZhHans.MIXPY_SERIAL_READ_TOOLTIP = "从可用串口读取指定长度的数据";
ZhHans.MIXPY_SERIAL_CLOSE = "关闭串口";
ZhHans.MIXPY_SERIAL_CLOSE_TOOLTIP = "关闭串口，结束与串口的数据交互";
ZhHans.MIXPY_TEXT_ENCODE = "编码";
ZhHans.MIXPY_TEXT_DECODE = "解码";
ZhHans.MIXPY_TEXT_ENCODE_DECODE_TOOLTIP = "以指定方式对字符串进行编码或解码";
ZhHans.MIXPY_AI_AUDIO = "使用麦克风录制音频 文件名";
ZhHans.MIXPY_AI_AUDIO_TIME = "录音时长（秒）";
ZhHans.MIXPY_AI_AUDIO_TOOLTIP = "录制指定时长的音频，文件名需指定录音文件的格式和存储路径";
ZhHans.MIXPY_AI_PHOTO = "使用摄像头拍摄照片 文件名";
ZhHans.MIXPY_AI_PHOTO_BUTTON = "拍摄按键";
ZhHans.MIXPY_AI_PHOTO_TOOLTIP = "使用摄像头拍摄照片，文件名不要包含中文路径";
ZhHans.MIXPY_AI_RESULT = "获取结果";
ZhHans.blynk_AP_config = "一键配网(AP模式)";
ZhHans.blynk_AP_config_tooltip = "没有连接到Wi-Fi时，自动打开热点,手机连接此热点登录进行配置";
ZhHans.blynk_AP_config2 = "一键配网及授权码(AP模式)";
ZhHans.Blynk_connect_state = "Blynk服务器连接状态";
ZhHans.Blynk_connected_Tooltip = "返回Blynk服务器连接状态，正常返回 1 反之返回 0";
ZhHans.blynk_terminal_clear = "Blynk 终端清屏";
ZhHans.blynk_lcd = "LCD组件";
ZhHans.blynk_esp32_ble = "Blynk BLE连接方式";
ZhHans.blynk_esp32_Bluetooth = "Blynk Bluetooth连接方式";
ZhHans.get_array2_value = "获取二维数组";
ZhHans.array2_assignment = "二维数组赋值";
ZhHans.array2_rows = "行数";
ZhHans.array2_cols = "列数";
ZhHans.MIXLY_ARRAY2 = "二维数组";
ZhHans.HTML_DOCUMENT = "HTML 文档";
ZhHans.HTML_LEVEL = "标题 级别";
ZhHans.HTML_HEAD = "头";
ZhHans.HTML_BODY = "内容";
ZhHans.HTML_TABLE = "表格";
ZhHans.HTML_LINE = "行";
ZhHans.HTML_CELL = "单元格";
ZhHans.HTML_OL = "有序列表";
ZhHans.HTML_UL = "无序列表";
ZhHans.HTML_LI = "列表项";
ZhHans.HTML_SPAN = "行内元素";
ZhHans.HTML_P = "段落";
ZhHans.HTML_FORM = "表单";
ZhHans.HTML_STYLE = "样式";
ZhHans.HTML_TEXT = "文本";
ZhHans.HTML_EMAIL = "电子邮件";
ZhHans.HTML_NUMBER = "数字";
ZhHans.HTML_PASSWORD = "密码";
ZhHans.HTML_CHECKBOX = "多选";
ZhHans.HTML_RADIOBUTTON = "单选";
ZhHans.HTML_BUTTON = "按钮";
ZhHans.HTML_COLOUR = "颜色";
ZhHans.HTML_DATE = "日期";
ZhHans.HTML_LOCALTIME = "本地时间";
ZhHans.HTML_FILE = "文件";
ZhHans.HTML_HIDDEN = "隐藏";
ZhHans.HTML_IMAGE = "图片";
ZhHans.HTML_MONTH = "月";
ZhHans.HTML_RANGE = "区间";
ZhHans.HTML_SEARCH = "搜索";
ZhHans.HTML_SUBMIT = "提交";
ZhHans.HTML_TELEPHONENUMBER = "电话";
ZhHans.HTML_TIME = "时间";
ZhHans.HTML_URL = "网址";
ZhHans.HTML_WEEK = "星期";
ZhHans.HTML_NAME = "名称";
ZhHans.HTML_VALUE = "值";
ZhHans.HTML_FORM_CONTENT = "表单项";
ZhHans.NTP_SERVER = 'NTP时间服务器';
ZhHans.MIXLY_TimeZone = '时区';
ZhHans.NTP_server_get_time = 'NTP获取';
ZhHans.MIXLY_CLICK = '单击';
ZhHans.MIXLY_DOUBLE_CLICK = '双击';
ZhHans.MIXLY_LONG_PRESS_START = '长按开始';
ZhHans.MIXLY_DURING_LONG_PRESS = '长按中';
ZhHans.MIXLY_LONG_PRESS_END = '长按结束';
ZhHans.ONEBUTTON = "多功能按键";
ZhHans.PS2 = 'PS2手柄';
ZhHans.PS2_TRIANGLE = "三角形键";
ZhHans.PS2_CIRCLE = "圆形键";
ZhHans.PS2_CROSS = "×键";
ZhHans.PS2_SQUARE = "方形键";
ZhHans.PS2_L1 = '左侧1';
ZhHans.PS2_L2 = '左侧2';
ZhHans.PS2_L3 = '左侧3';
ZhHans.PS2_R1 = '右侧1';
ZhHans.PS2_R2 = '右侧2';
ZhHans.PS2_R3 = '右侧3';
ZhHans.PS2_UP = '方向键上';
ZhHans.PS2_DOWN = '方向键下';
ZhHans.PS2_LEFT = '方向键左';
ZhHans.PS2_RIGHT = '方向键右';
ZhHans.PS2_SELECT = '选择键';
ZhHans.PS2_START = '开始键';
ZhHans.PS2_RX = '右侧X值';
ZhHans.PS2_RY = '右侧Y值';
ZhHans.PS2_LX = '左侧X值';
ZhHans.PS2_LY = '左侧Y值';
ZhHans.PS2_stick = 'PS2摇杆';
ZhHans.PS2_BUTTON = 'PS2按键';
ZhHans.PS2_setRumble = '振动反馈';
ZhHans.arduino_blynk_bluetooth = "Bluetooth串口连接方式";
ZhHans.blynk_table = 'Table小部件添加数据';
ZhHans.blynk_table_update = 'Table小部件更新数据';
ZhHans.blynk_table_select = 'Table小部件选择';
ZhHans.blynk_table_highlight = 'Table小部件高亮显示';
ZhHans.blynk_table_unselect = 'Table小部件取消选择';
ZhHans.blynk_table_cleardata = 'Table小部件清除数据';
ZhHans.blynk_connected = "服务器连接状态";
ZhHans.HX711_offset = "补偿值";
ZhHans.HX711_scale = "比例系数";
ZhHans.Handbit = '掌控板';
ZhHans.HANDBIT_FORWARD = '向前倾';
ZhHans.HANDBIT_BACKWARD = '向后倾';
ZhHans.HANDBIT_LEFT = '向左倾';
ZhHans.HANDBIT_RIGHT = '向右倾';
ZhHans.HANDBIT_UP = '正面向上';
ZhHans.HANDBIT_DOWN = '正面向下';
ZhHans.BME280 = "读取BME280";
ZhHans.ESP32_HALL = 'ESP32片内霍尔值';
ZhHans.ESP32_TEMP = 'ESP32片内温度';
ZhHans.MIXLY_BACKGROUND_COLOR = '背景色';
ZhHans.MIXEPI = '米派';
ZhHans.DATA_TYPE_CONVERSION = '数据类型转换';
ZhHans.TEXT_TO = '至';
ZhHans.STRING_VARIABLE = '字符串变量';
ZhHans.TEXT_KEEP = '保留';
ZhHans.TEXT_DECIMAL = '位';
ZhHans.SUBSTRING_HELP = '截取字符串例如substring截取0—3则返回sub';
ZhHans.DECIMAL_PLACES_HELP = '小数四舍五入获取有效位，例如6.66666保留2位为6.67';
ZhHans.LETTER_CONVERSION_HELP = '字符串变量转化为大小写，将字符串变量赋值为字符串大小写转换后的值';
ZhHans.DATA_REPLACEMENT_HELP = '字符串变量部分数据替换，将字符串变量赋值为字符串替换后的值';
ZhHans.ELIMINATE_HELP = '当你知道在String的开头或结尾有无关的空白字符并且你想要消除它们时，它很有用。空格是指占据空间但未被看到的角色。它包括单个空格';
ZhHans.FIRST_AND_LAST_HELP = '返回是否以特定字符串开头或结尾';
ZhHans.TYPE_CONVERSION_HELP = '将一个变量转换为对应类型数值。';
ZhHans.STARTSWITH = '开头';
ZhHans.ENDSWITH = '结尾';
ZhHans.ELIMINATE_NON_VISUAL_CHARACTERS = '消除非可视字符';
ZhHans.LETTERS_ARE_CONVERTED_TO = '字母转化为';
ZhHans.REPLACE_WITH = '替换为';
ZhHans.AS_A_STRING = '以字符串';
ZhHans.CAPITAL = '大写';
ZhHans.LOWER_CASE = '小写';
ZhHans.DUALL_CORE_MULTITASKING = 'ESP32双核多任务';
ZhHans.CORE_PRIORITY1 = '核心1  优先级';
ZhHans.CORE_PRIORITY2 = '核心2  优先级';
ZhHans.DUALL_CORE_MULTITASKING_HELP = 'ESP32双核多任务，同时处理两个任务互不干扰，优先级最高为3（若有看门狗被触发则需要添加仅用于双核多任务的延时函数，延时时间不宜影响其他函数执行）';
ZhHans.FOLDING_BLOCK = '折叠块请在此描述功能';
ZhHans.FOLDING_BLOCK_HELP = '当使用到的块太多时阅读非常头疼，放入它的代码块不会改变，仅仅作为外壳使用，不要为什么？你懂的^.^非常方便';
ZhHans.OLED_ICON = '内置图标';
ZhHans.TCS34725_Get_RGB = 'TCS34725颜色传感器 获取颜色';
ZhHans.set_EN_Font = "设置英文字体";
ZhHans.set_CN_Font = "设置中文字体";
ZhHans.FontSize = "字号";
ZhHans.Font_Style = "字形";
ZhHans.esp_camera = "ESP32 CAM相机，上传程序后通过串口监视器输出相机地址浏览器打开即可(默认波特率115200)";
ZhHans.MIXLY_RESOLUTION = '精度';
ZhHans.inout_esp32_dac = 'DAC输出管脚';
ZhHans.take_a_photo1 = 'ESP32 CAM拍照';
ZhHans.super_delay_function = '注册延时函数';
ZhHans.execute_super_delay_function = '执行延时函数';
ZhHans.time_interval = '时间间隔（ms）';
ZhHans.number_of_executions = '执行次数';
ZhHans.super_delay_function_help = '注册需要延时执行的函数';
ZhHans.execute_super_delay_function_help = '执行延时函数，设置延时时间及执行的次数';
ZhHans.MIXLY_SERVO_WRITEMICROSECONDS = '脉冲时长';
ZhHans.MIXLY_Z_AXIS = 'z轴';
ZhHans.MIXLY_SELFADD = "自加";
ZhHans.MIXLY_SELFSUB = "自减";
ZhHans.MIXLY_SELFMULT = "自乘";
ZhHans.MIXLY_SELFDIVI = "自除";
ZhHans.MIXLY_SD_FILE_Exist = '文件存在?';
ZhHans.MIXPY_DATA_ARRAY_CREATE_FROM = '首项';
ZhHans.MIXPY_DATA_ARRAY_CREATE_TO = '末项';
ZhHans.MIXLY_ATTATCH = '绑定';
ZhHans.MIXLY_DETACH = '解绑';
ZhHans.OLED_TYPE_SSD1306 = '0.96寸SSD1306';
ZhHans.OLED_TYPE_SH1106 = '1.3寸SH1106';
ZhHans.MOTOR_HR8833 = 'HR8833电机驱动';
ZhHans.MOTOR_HR8833_TEAM_NO = '组号';
ZhHans.MIXLY_I2C_REGADD = "寄存器地址";
ZhHans.MIXLY_Keypad = '4*4矩阵键盘';
ZhHans.MIXLY_Keypad_define = '定义键盘';
ZhHans.MIXLY_Keypad_GETKEY = '获取按键值';
ZhHans.MIXLY_Keypad_EVENT = '矩阵键盘事件';
ZhHans.MIXLY_DEVICE = '设备';
ZhHans.MIXLY_MASTER = "主机";
ZhHans.MIXLY_SALVE = "从机";
ZhHans.MIXLY_SEND_DATA = "发送数据";
ZhHans.MIXLY_RETURN_DATA = "返回值";
ZhHans.TFT_Brightness = "背光";
ZhHans.BLYNK_DISCONNECTED = '硬件已离线';
ZhHans.MIXLY_U8G2_SETCONTRAST_HELP = "OLED背光亮度范围（0-255）";
ZhHans.MIXLY_DHT11_T = ZhHans.MIXLY_TEMPERATURE;
ZhHans.MIXLY_DHT11_H = ZhHans.MIXLY_Humidity;
ZhHans.MIXLY_LCD_STAT_ON = ZhHans.MIXLY_ON;
ZhHans.MIXLY_LCD_STAT_OFF = ZhHans.MIXLY_OFF;
ZhHans.MIXGO_ONBOARDDISPLAY_HELP = "MixGo Max硬件使用板载显示模块时需要将显示屏连接至21、22号管脚";
ZhHans.MIXLY_ELECLEVEL = "电平触发";
ZhHans.MIXLY_GET_PRESSES_TIME = "时长(秒)";
ZhHans.MIXLY_PYTHON_LOGIC_IS_NOT = "不是";
ZhHans.MIXLY_PYTHON_LOGIC_IS_NOT_IN = "不在";
ZhHans.MATH_DEC_TOOLTIP_BIN = "将十进制整数转换成二进制，以字符串形式表示";
ZhHans.MATH_DEC_TOOLTIP_OCT = "将十进制整数转换成八进制，以字符串形式表示";
ZhHans.MATH_DEC_TOOLTIP_HEX = "将十进制整数转换成十六进制，以字符串形式表示";
ZhHans.RIGHT_CYCLE = "右循环";
ZhHans.LEFT_CYCLE = "左循环";
ZhHans.MIXLY_FAILED = "失败";
ZhHans.MIXLY_SUCCESS = "成功";
ZhHans.MIXLY_WRITE = "写入";
ZhHans.MIXLY_READONLY = "只读";
ZhHans.MIXLY_FILE_PATH = "文件路径";
ZhHans.GET_THE_DIFFERENCE_BETWEEN_TWO_DATES = '获取两个日期差值';
ZhHans.START = '起始';
ZhHans.END = '结束';
ZhHans.MLX90614_TYPE = '红外测温传感器';
ZhHans.MLX90614_TARGET_OBJECT_TEMP = '目标物体温度';
ZhHans.MLX90614_AMBIENT_TEMP = '周围环境温度';
ZhHans.IR_AND_TONE_WARNING = '警告：\n' + '蜂鸣器模块和红外接收模块不可同时使用，\n' + '请考虑使用蜂鸣器模块(无定时器)或删除红外接收模块。';
ZhHans.USE_SERIAL_PORT = '使用串口';
ZhHans.DFPLAYER_MINI_SET_TIMEOUT = " 串口通信超时时间设为";
ZhHans.DFPLAYER_MINI_SET_TIMEOUT_TOOLTIP = "DFPlayer Mini 设置串口通信的超时时间";
ZhHans.DFPLAYER_MINI_SET_VOLUME = " 音量设为";
ZhHans.DFPLAYER_MINI_SET_VOLUME_TOOLTIP = "DFPlayer Mini 设置音量，范围为0~30";
ZhHans.DFPLAYER_MINI_VOLUME_UP_DOWN_TOOLTIP = "DFPlayer Mini 音量+或-";
ZhHans.DFPLAYER_MINI_SET_EQ = " 音效设为";
ZhHans.DFPLAYER_MINI_SET_EQ_TOOLTIP = "DFPlayer Mini 设置音效";
ZhHans.DFPLAYER_MINI_SET_OUTPUTDEVICE = " 设置播放设备为";
ZhHans.DFPLAYER_MINI_SET_OUTPUTDEVICE_TOOLTIP = "DFPlayer Mini 指定播放设备";
ZhHans.DFPLAYER_MINI_STOP_ADVERTISE = "停止插播曲目";
ZhHans.DFPLAYER_MINI_ENABLE_LOOP = "循环播放开始";
ZhHans.DFPLAYER_MINI_DISABLE_LOOP = "循环播放停止";
ZhHans.DFPLAYER_MINI_ENABLE_LOOP_ALL = "循环播放所有曲目";
ZhHans.DFPLAYER_MINI_DISABLE_LOOP_ALL = "停止循环播放曲目";
ZhHans.DFPLAYER_MINI_RANDOM_ALL = "随机播放所有曲目";
ZhHans.DFPLAYER_MINI_ENABLE_DAC = "开启音频输出";
ZhHans.DFPLAYER_MINI_DISABLE_DAC = "关闭音频输出";
ZhHans.DFPLAYER_MINI_SLEEP = "进入睡眠状态";
ZhHans.DFPLAYER_MINI_ADVERTISE = "插播";
ZhHans.DFPLAYER_MINI_PLAYMP3FOLDER = "播放MP3文件夹下";
ZhHans.DFPLAYER_MINI_SONG = "曲目";
ZhHans.DFPLAYER_MINI_PLAY_LOOP_TOOLTIP = "DFPlayer Mini 播放、循环、插播指定曲目";
ZhHans.DFPLAYER_MINI_PLAY_ADVERTISE_TOOLTIP = "DFPlayer Mini 插播指定曲目，文件名(0~65535)";
ZhHans.DFPLAYER_MINI_PLAY_PLAYMP3FOLDER_TOOLTIP = "DFPlayer Mini 播放MP3文件夹下指定曲目，文件名(0~65535)";
ZhHans.DFPLAYER_MINI_FOLDER = "文件夹";
ZhHans.DFPLAYER_MINI_LARGEFOLDER = "大文件夹";
ZhHans.DFPLAYER_MINI_PLAY_PLAYFOLDER_TOOLTIP = "DFPlayer Mini 播放指定文件夹下的曲目，文件夹名(1~99)，文件名(1~255)";
ZhHans.DFPLAYER_MINI_PLAY_PLAYLARGEFOLDER_TOOLTIP = "DFPlayer Mini 播放指定大文件夹下的曲目，文件夹名(1~10)，文件名(1~1000)";
ZhHans.DFPLAYER_MINI_LOOP_FOLDER = " 循环播放文件夹";
ZhHans.DFPLAYER_MINI_LOOP_FOLDER_TOOLTIP = "DFPlayer Mini 循环播放指定文件夹下的曲目";
ZhHans.DFPLAYER_MINI_READ_NOW_DATA_TOOLTIP = "DFPlayer Mini 获取当前状态、当前音量、当前音效，返回数据的类型为int";
ZhHans.DFPLAYER_MINI_READ_FILE_COUNTS = "总文件数";
ZhHans.DFPLAYER_MINI_READ_CURRENT_FILE_NUMBER = "当前曲目号";
ZhHans.DFPLAYER_MINI_READ_FILE_COUNTS_TOOLTIP = "DFPlayer Mini 获取U盘、SD卡、FLASH的总文件数或当前曲目，返回数据的类型为int";
ZhHans.DFPLAYER_MINI_READ_FILE_COUNTS_INFOLDER_TOOLTIP = "DFPlayer Mini 获取指定文件夹下的文件数，返回数据的类型为int";
ZhHans.DFPLAYER_MINI_AVAILABLE_TOOLTIP = "myDFPlayer.available()，返回数据的类型为boolean";
ZhHans.DFPLAYER_MINI_READ_TYPE_TOOLTIP = "myDFPlayer.readType()，返回数据的类型为uint8_t";
ZhHans.DFPLAYER_MINI_READ_TOOLTIP = "myDFPlayer.read()，返回数据的类型为uint16_t";
ZhHans.YX5200_MP3 = 'Mini MP3模块';
ZhHans.RETURN_DATA_ANALYSIS = "返回数据解析";
ZhHans.LCD_NUMBERING = '编号';
ZhHans.COLUMN_DISPLAY_IMAGE = '列显示图像';
ZhHans.SCOOPTASK_WARNING = "警告：\nSCoopTask模块的编号不可重复，\n请考虑修改此模块的编号或删除此模块。";
ZhHans.BLYNK_TABLE_ORDER = 'Table 移动事件';
ZhHans.BLYNK_TABLE_CLICK = "Table 点击事件";
ZhHans.SKLEARN_CLASSIFICATION_GENERATION = "sklearn 分类样本生成";
ZhHans.NUMBER_OF_SAMPLES = "样本数目";
ZhHans.NUMBER_OF_FEATURES = "特征数目";
ZhHans.NUMBER_OF_EFFECTIVE_FEATURES = "有效特征数目";
ZhHans.NUMBER_OF_REDUNDANT_FEATURES = "冗余特征数目";
ZhHans.NUMBER_OF_REPEATED_FEATURES = "重复特征数目";
ZhHans.NUMBER_OF_CLASSES = "类数目";
ZhHans.NUMBER_OF_CLUSTERS_PER_CLASSES = "每个类的簇数目";
ZhHans.NUMBER_OF_LABELS = "标签数目";
ZhHans.NUMBER_OF_CLUSTERS = "簇数目/簇中心坐标";
ZhHans.RANDOM_SEED = "伪随机种子";
ZhHans.SKLEARN_REGRESSION_GENERATION = "sklearn 回归样本生成";
ZhHans.DEVIATION = "偏差";
ZhHans.NOISE = "噪音";
ZhHans.SKLEARN_CLUSTERING_GENERATION = "sklearn 聚类样本生成";
ZhHans.STANDARD_DEVIATION_OF_CLUSTER = "簇的标准差";
ZhHans.CLUSTER_BOUNDING_BOX = "簇的边界框";
ZhHans.SHUFFLE_SAMPLES = "洗牌样本";
ZhHans.LOAD = "加载";
ZhHans.SKLEARN_LOAD_IRIS = "鸢尾花数据集";
ZhHans.SKLEARN_LOAD_BOSTON = "波士顿房价数据集";
ZhHans.SKLEARN_LOAD_DIABETES = "糖尿病数据集";
ZhHans.SKLEARN_LOAD_BREAST_CANCER = "乳腺癌数据集";
ZhHans.SKLEARN_LOAD_LINNERUD = "体能训练数据集";
ZhHans.SKLEARN_LOAD_DIGITS = "手写数字数据集";
ZhHans.DATA_SET = "数据集";
ZhHans.EIGENVALUES = "特征值";
ZhHans.LABEL_VALUE = "标签值";
ZhHans.FEATURE = "特征";
ZhHans.DATA_SEGMENTATION = "数据分割";
ZhHans.TEST_SET_PROPORTION = "测试集占比";
ZhHans.SKLEARN_LINEARREGRESSION_INIT = "初始化线性回归算法";
ZhHans.SKLEARN_RIDGE_INIT = "初始化岭回归算法";
ZhHans.SKLEARN_DECISIONTREE_INIT = "初始化决策树";
ZhHans.SKLEARN_RANDOMFOREST_INIT = "初始化随机森林";
ZhHans.SKLEARN_KNN_INIT = "初始化K近邻";
ZhHans.SKLEARN_GAUSSINNB_INIT = "初始化高斯贝叶斯分类算法";
ZhHans.SKLEARN_KMEANS_INIT = "初始化K-均值聚类算法";
ZhHans.MODEL_NAME = "模型名";
ZhHans.SKLEARN_CALCULATE_MODEL_INTERRUPT = "计算模型截距";
ZhHans.SKLEARN_REGRESSION_NORMIALIZATION = "回归量归一化";
ZhHans.SKLEARN_THREADS = "线程数";
ZhHans.SKLEARN_REGULA_INTENSITY = "正则强度";
ZhHans.SKLEARN_MAX_ITER = "最多迭代次数";
ZhHans.SKLEARN_CLASSIFICATION_ALGORITHM = "分类算法";
ZhHans.SKLEARN_REGRESSION_ALGORITHM = "回归算法";
ZhHans.SKLEARN_MAXIMUM_TREE_DEPTH = "最大树深";
ZhHans.NUMBER_OF_TREES = "树的数目";
ZhHans.NUMBER_OF_CLUSTERS_JUST = "簇数目";
ZhHans.TRAINING_MODEL = "训练模型";
ZhHans.MODEL_PRODICTION = "模型预测";
ZhHans.CALCULATE_THE_SCORE = "计算得分";
ZhHans.SKLEARN_GENERALIZED_LINEAR_REGRESSION = "广义线性回归";
ZhHans.SKLEARN_COEF = "权重";
ZhHans.SKLEARN_INTERCEPT = "偏置";
ZhHans.SKLEARN_CLUSTERING = "聚类";
ZhHans.SKLEARN_CLUSTER_CENTER = "簇中心坐标";
ZhHans.SKLEARN_LABELS_AFTER_CLUSTERING = "聚类后标签";
ZhHans.SKLEARN_CLUSTERING_SUM_OF_SQUARED_DISTANCES = "所有点到对应簇中心的距离平方和";
ZhHans.SKLEARN_SAVE_MODEL = "保存模型";
ZhHans.SKLEARN_LOAD_MODEL = "加载模型";
ZhHans.SKLEARN_PCA_N_COMPONENTS = "主成分个数";
ZhHans.MATH_ROUND = '四舍五入';
ZhHans.MATH_ROUND_NEW_TOOLTIP = '将数值四舍五入保留小数点后指定的位数';
ZhHans.PY_STORAGE_FILE_OBJECT = "，并返回文件对象";
//红绿蓝都有了
ZhHans.COLOUR_RGB_ORANGE = "橙色";
ZhHans.COLOUR_RGB_YELLOW = "黄色";
ZhHans.COLOUR_RGB_CYAN = "青色";
ZhHans.COLOUR_RGB_PURPLE = "紫色";
ZhHans.COLOUR_RGB_WHITE = "白色";
ZhHans.CLOCKWISE = "顺时针";
ZhHans.ANTI_CLOCKWISE = "逆时针";
ZhHans.CREATE_CLASS = "创建类";
ZhHans.FATHER_CLASS = "父类";
ZhHans.MIXPY_CLASS = "类";
ZhHans.MIXPY_ATTRIBUTE_OF = "的属性";
ZhHans.MIXPY_CREATE_METHOD = "创建方法";
ZhHans.MIXPY_EXECUTION_METHOD = "执行方法";
ZhHans.MIXPY_OBJECT = "对象";
ZhHans.MIXPY_ADD_PARAMETERS = "添加参数";
ZhHans.PYTHON_RANGE = "生成序列";
ZhHans.PYTHON_RANGE_STEP = "间隔为";
ZhHans.MIXLY_PYTHON_TOOLTIP_TOTEXT = '将一个值转换为一个字符串。';
ZhHans.MIXLY_PYTHON_TOOLTIP_TOINT = '将一个值转换为一个整数。';
ZhHans.MIXLY_PYTHON_TOOLTIP_TOFLOAT = '将一个值转换为一个浮点数。';
ZhHans.MIXLY_PYTHON_TOOLTIP_TOBOOL = '将一个值转换为一个布尔值。';
ZhHans.MIXLY_TOBOOL = '转布尔值';
ZhHans.MIXLY_PYTHON_TOOLTIP_TOLIST = '将一个值转换为一个列表。';
ZhHans.MIXLY_TOLIST = '转列表';
ZhHans.MIXLY_PYTHON_TOOLTIP_TOTUPLE = '将一个值转换为一个元组。';
ZhHans.MIXLY_TOTUPLE = '转元组';
ZhHans.MIXLY_PYTHON_TOOLTIP_TOSET = '将一个值转换为一个集合。';
ZhHans.MIXLY_TOSET = '转集合';
ZhHans.MIXLY_PYTHON_TOOLTIP_TODICT = '将一个值转换为一个字典。';
ZhHans.MIXLY_TODICT = '转字典';
ZhHans.MIXLY_PYTHON_TOOLTIP_TOARRAY = '将一个值转换为一个数组。';
ZhHans.MIXLY_TOARRAY = '转数组';
ZhHans.MIXLY_PYTHON_PASS = '占位语句';
ZhHans.MIXLY_PYTHON_TRY = '尝试执行';
ZhHans.MIXLY_PYTHON_EXCEPT = '出现异常';
ZhHans.MIXLY_PYTHON_FINALLY = '最终执行';
ZhHans.MIXLY_SOFT_ANALOGWRITE_PIN = '软件模拟输出 管脚 #';
ZhHans.MIXLY_CANCEL_SOFT_ANALOGWRITE_PIN = '取消软件模拟输出 管脚 #';
ZhHans.MIXLY_TOOLTIP_CANCEL_SOFT_ANALOGWRITE_PIN = '取消指定管脚的软件模拟PWM';
ZhHans.MIXLY_MITHON_NEAR = "被接近";
ZhHans.MIXLY_STM32_OLED_SET_CURSOR_POSITION = "光标位置设为";
ZhHans.MIXLY_STM32_OLED_TINY = "极小";
ZhHans.MIXLY_STM32_OLED_SMALL = "小";
ZhHans.MIXLY_STM32_OLED_BIG = "大";
ZhHans.MIXLY_STM32_OLED_HUGE = "极大";
ZhHans.MIXLY_STM32_OLED_SET_FONT_COLOR = "设置字体颜色";
ZhHans.MIXLY_STM32_OLED_BLACK_ON_WHITE = "白底黑字";
ZhHans.MIXLY_STM32_I2C_SLAVE_SEND_ARRAY = "从机发送数组";
ZhHans.MIXLY_STM32_I2C_SLAVE_SEND_EVENT = "从机发送事件";
ZhHans.MIXLY_STM32_I2C_SLAVE_RECEIVE_EVENT = "从机接收事件";
ZhHans.MIXLY_STM32_I2C_SLAVE_SEND_BYTE = "从机发送字节";
ZhHans.MIXLY_STM32_SPI_GET_REGISTER_DATA = "获取寄存器数据";
ZhHans.MIXLY_STM32_SPI_DATA_RECEIVED = "接收到数据";
ZhHans.MIXLY_GLOBAL_VARIABLE = "全局变量";
ZhHans.MIXLY_LOCAL_VARIABLE = "局部变量";
ZhHans.MIXLY_TYPE = "类型";
ZhHans.MIXLY_volume = "容量";
ZhHans.MIXLY_SD_LIST_FILES = "列出SD根目录文件";
ZhHans.MIXLY_SD_clusterCount = "簇数";
ZhHans.MIXLY_SD_blocksPerCluster = "每簇扇区数";
ZhHans.MIXLY_SD_TOTAL_blocks = "总扇区数";
ZhHans.MIXLY_PRINT_INLINE = "不换行";
ZhHans.MIXLY_STM32_TFT_GREENTAB = "绿色标签";
ZhHans.MIXLY_STM32_TFT_REDTAB = "红色标签";
ZhHans.MIXLY_STM32_TFT_BLACKTAB = "黑色标签";
ZhHans.MIXLY_STM32_TFT_FONT_COLOR = "字体颜色";
ZhHans.MIXLY_STM32_TFT_BACKGROUND_COLOR = "背景颜色";
ZhHans.MIXLY_STM32_TFT_BACKGROUND = "背景";
ZhHans.MIXLY_STM32_TFT_SIZE = "尺寸";
ZhHans.MIXLY_TOOLTIP_STORE_EEPROM_PUT = '向EEPROM特定地址写入任何类型数据';
ZhHans.MIXLY_TOOLTIP_STORE_EEPROM_GET = '从EEPROM的特定地址读取任何类型数据';
ZhHans.MIXLY_WIFI_LINK_DEVICE = '链接设备';
ZhHans.MIXLY_STM32_SPI_REMAP = '重映射';
ZhHans.MIXLY_RFID_READ_CARD_UID = '读取卡号';
ZhHans.MIXLY_RFID_WRITE_CARD = '写卡';
ZhHans.MIXLY_RFID_READ_CARD = '读卡';
ZhHans.MIXLY_RFID_BYTE_ARRAY = '字节数组';
ZhHans.MIXLY_STM32_OLED_DRAW_ARC = "画圆弧";
ZhHans.MIXLY_STM32_OLED_ARC = "弧段";
ZhHans.MIXLY_NominalResistance = '常温电阻值';
ZhHans.MIXLY_betaCoefficient = 'B值';
ZhHans.MIXLY_seriesResistor = '串联电阻值';
ZhHans.define_Lists = '创建局部数组为 ';
ZhHans.define_Lists2 = '创建全局数组为 ';
ZhHans.Hardware_Serial = '硬串口';
ZhHans.SOFT_RESET = '重启';
ZhHans.MIXLY_DIGITAL_PIN = "数字管脚";
ZhHans.MIXLY_PUSH_PULL_OUTPUT = "数字输出";
ZhHans.MIXLY_OPEN_DRAIN_OUTPUT = "开漏输出";
ZhHans.MIXLY_ONEWIRE_WRITE_BIT = "写入比特";
ZhHans.MIXLY_ONEWIRE_READ_BIT = "读取比特";
ZhHans.MIXLY_I2C_TRY_TO_OCCUPY_THE_BUS = "占用总线";
ZhHans.MIXLY_I2C_RELEASE_BUS = "释放总线";
ZhHans.MIXLY_SPIC_WRITE_NUM = "写入数字";
ZhHans.MIXLY_SPIC_READ_NUM = "读取数字";
ZhHans.MIXLY_ESP32S2_LED_SETBRIGHT = "设置内嵌LED的当前亮度（0~65535）";
ZhHans.MIXLY_PYTHON_NAME_MAIN = "作为主程序运行";
ZhHans.MIXLY_GET_TEMPRATURE = "获取温度传感器的值";
ZhHans.MIXLY_GET_IRREMOTE_VALUE = "获取红外接收值"
ZhHans.MIXLY_YEARDAY = '天数';
ZhHans.MIXLY_ISDIST = '令时';
ZhHans.MIXLY_HCSR04_INIT = "初始化超声波";
ZhHans.HSV_H = '色调';
ZhHans.HSV_S = '饱和度';
ZhHans.HSV_V = ZhHans.MIXLY_BRIGHTNESS;
ZhHans.MIXLY_EMQX_INIT_CLIENT = '初始化客户端';
ZhHans.MIXLY_EMQX_SERVER = '服务器地址';
ZhHans.MIXLY_EMQX_PORT = '端口号';
ZhHans.MIXLY_EMQX_USERNAME = '用户名';
ZhHans.MIXLY_EMQX_PASSWORD = '密码';
ZhHans.MIXLY_EMQX_CLIENT_ID = '客户端ID';
ZhHans.MIXLY_EMQX_IS_SSL = '是否SSL';
ZhHans.MIXLY_EMQX_SOCKET_POOL = '连接池';
ZhHans.MIXLY_EMQX_SSL_CONTEXT = 'SSL上下文';
ZhHans.MIXLY_EMQX_PUBLISH = '发送数据';
ZhHans.MIXLY_EMQX_PUBLISH_NEW = '发布消息';
ZhHans.MIXLY_EMQX_PUBLISH_TOPIC = '主题';
ZhHans.MIXLY_EMQX_PUBLISH_MSG = '消息';
ZhHans.MIXLY_EMQX_DEINIT = '释放客户端';
ZhHans.MIXLY_EMQX_SPECIAL = '特殊';
ZhHans.MIXLY_EMQX_SET_METHOD = '设置回调函数';
ZhHans.MIXLY_EMQX_REMOVE_METHOD = '清除回调函数';
ZhHans.MIXLY_EMQX_FOR = '为';
ZhHans.MIXLY_EMQX_SET_USERNAME = '设置用户名';
ZhHans.MIXLY_EMQX_SET_PASSWORD = '密码';
ZhHans.MIXLY_EMQX_HOST = 'IP地址';
ZhHans.MIXLY_EMQX_CONNECT = '连接';
ZhHans.MIXLY_EMQX_RECONNECT = '重新连接';
ZhHans.MIXLY_EMQX_CONNECT_ON = '启动代理连接';
ZhHans.MIXLY_EMQX_CLEAN_SESSION = '持久对话';
ZhHans.MIXLY_EMQX_PORT = '代理网口';
ZhHans.MIXLY_EMQX_KEEP_ALIVE = '最长通信时间';
ZhHans.MIXLY_EMQX_DISCONNECT = '断开连接';
ZhHans.MIXLY_EMQX_RETAIN = '返回值';
ZhHans.MIXLY_RETAIN = '代理保存';
ZhHans.MIXLY_EMQX_QOS = '服务质量';
ZhHans.MIXLY_WIFI_CONNECT = '连接Wi-Fi';
ZhHans.MIXLY_WIFI_USERNAME = '用户名';
ZhHans.MIXLY_WIFI_PASSWORD = '密码';
ZhHans.MIXLY_IOT_PASSWORD = '密钥';
ZhHans.MIXLY_SSL_DEFAULT = 'SSL默认上下文';
ZhHans.MIXLY_CREATE_SOCKETPOOL = '为Wi-Fi创建连接池';
ZhHans.MIXLY_EMQX_SUBSCRIBE = '订阅';
ZhHans.MIXLY_EMQX_UNSUBSCRIBE = '取消订阅';
ZhHans.MIXLY_EMQX_LOOP = '循环接收订阅 超时';
ZhHans.MIXLY_EMQX_LOOPONE = '秒';
ZhHans.MIXLY_EMQX_IS_CONNECT = '连接成功';
ZhHans.MIXLY_EMQX_NABLE_LOGGER = '启用日志';
ZhHans.MIXLY_EMQX_NABLE_LOGGERONE = '级别';
ZhHans.MIXLY_EMQX_DISABLE_LOGGER = '禁用日志';
ZhHans.MIXLY_EMQX_PING = '服务端响应情况';
ZhHans.set_ZH_TW_Font = '设置繁体中文';
ZhHans.ADS1015_Get_Value = '模数转换模块';
ZhHans.ADS1015_setGain = "ADS1015采样范围和精度";
ZhHans.MIXLY_MP3_UDISK = '优盘';
ZhHans.MIXLY_MP3_SOURCE = '播放来源';
ZhHans.QJ00X_MP3 = 'QJ00X MP3模块';
ZhHans.MIXLY_IR_RANGE = '双红外测距';
ZhHans.MIXLY_LASER_RANGE = '激光测距仪';
ZhHans.MIXLY_TEM_HUM = '温湿度传感';
ZhHans.MIXLY_GET_ALTITUDE = '获取海拔';
ZhHans.MIXLY_GET_LIGHT_INTENSITY = '获取光线强度';
ZhHans.MIXLY_GET_DISTANCE = '获取距离';
ZhHans.MIXLY_EMQX_PROJECT = '项目';
ZhHans.MIXLY_ESP32_INITIAL_DIGITAL_TUBEFOOT = '初始化输入的某个管脚为数字管脚并编号';
ZhHans.MIXLY_ESP32_DIGITALINOUT_MODE = '为某个数字管脚设置输入或输出类型';
ZhHans.MIXLY_ESP32_S2_SET_RAW_TIME = '获取并返回所选时间的格式化时间';
ZhHans.MIXLY_ESP32_SET_ONBOARD_MUSIC_STOP = '结束在播放的声音';
ZhHans.MIXLY_ESP32_ROLL_SHOW_STRING = '在屏幕上滚动显示字符串';
ZhHans.MPYTHON_BLYNKTIMER_TOOL = '确定可用定时器';
ZhHans.MPYTHON_BLYNK_STOP_TIMERS = '停止相应定时器';
ZhHans.MPYTHON_BLYNK_SENSOR_DATA_TO_APP_TOOLTIP = '发送数据到虚拟管脚';
ZhHans.MIXLY_ESP32_IOT_WIFI_RADIO_CONNECT_TOOLTIP = '连接用户名为某某，密码为某某的WiFi';
ZhHans.MIXLY_ESP32_IOT_WIFI_RESET_TOOLTIP = 'WiFi复位';
ZhHans.MIXLY_ESP32_IOT_EMQX_INIT_TOOLTIP = '服务器地址默认为 39.101.161.127，代理网口默认为 1883，输入用户名，输入密码，输入项目，为WiFi创建连接池，SSL默认上下文';
ZhHans.MIXLY_ESP32_IOT_EMQX_PUBLISH_TOOLTIP = '发送某一主题的消息';
ZhHans.MIXLY_ESP32_IOT_EMQX_PUBLISH_MORE_TOOLTIP = '发送某一主题的消息，设置发送位置，设置代理保存情况，设置服务质量';
ZhHans.MIXLY_ESP32_IOT_EMQX_SUBSCRIBE_TOOLTIP = '订阅主题';
ZhHans.MIXLY_ESP32_IOT_EMQX_SUBSCRIBE_MORE_TOOLTIP = '订阅主题，设置服务质量';
ZhHans.MIXLY_ESP32_IOT_EMQX_UNSUBSCRIBE_TOOLTIP = '取消订阅主题';
ZhHans.MIXLY_ESP32_IOT_EMQX_LOOP_TOOLTIP = '循环接收订阅';
ZhHans.MIXLY_ESP32_IOT_EMQX_CONNECT_TOOLTIP = 'MQTT 连接';
ZhHans.MIXLY_ESP32_IOT_EMQX_DISCONNECT_TOOLTIP = 'MQTT 断开连接';
ZhHans.MIXLY_ESP32_IOT_EMQX_IS_CONNECT_TOOLTIP = '判断 MQTT 是否连接成功';
ZhHans.MIXLY_ESP32_IOT_EMQX_RECONNECT_TOOLTIP = 'MQTT 重新连接';
ZhHans.MIXLY_ESP32_IOT_EMQX_PING_TOOLTIP = 'MQTT 服务端响应情况';
ZhHans.MIXLY_ESP32_IOT_EMQX_ENABLE_LOGGER_TOOLTIP = '启用日志，设置级别';
ZhHans.MIXLY_ESP32_IOT_EMQX_ADD_TOPIC_CALLBACK_TOOLTIP = '为某主题设置回调函数';
ZhHans.MIXLY_ESP32_IOT_EMQX_REMOVE_TOPIC_CALLBACK_TOOLTIP = '为某主题清除回调函数';
ZhHans.MIXLY_ESP32_IOT_EMQX_USERNAME_PW_SET_TOOLTIP = '设置用户名和密码';
ZhHans.MIXLY_ESP32_IOT_MAP_FORMATING = '格式化位置信息';
ZhHans.MIXLYCAR_WHEEL_LEFT_UP = '左前轮';
ZhHans.MIXLYCAR_WHEEL_LEFT_DOWN = '左后轮';
ZhHans.MIXLYCAR_WHEEL_RIGHT_UP = '右前轮';
ZhHans.MIXLYCAR_WHEEL_RIGHT_DOWN = '右后轮';
ZhHans.MIXGO_WAVE = '播放波形声音';
ZhHans.MIXGO_WAVE_IS_PLAYING = '波形声音在播放吗？';
ZhHans.MIXGO_LEFT_MID = '左中';
ZhHans.MIXGO_RIGHT_MID = '右中';
ZhHans.MIXGO_LEFT_FRONT = '左前';
ZhHans.MIXGO_RIGHT_FRONT = '右前';
ZhHans.MIXGO_LEFT_BACK = '左后';
ZhHans.MIXGO_RIGHT_BACK = '右后';
ZhHans.MIXGO_LINE_SENSOR = '巡线传感器状态';
ZhHans.MIXGO_PROXIMITY_SENSOR = '接近传感器数值';
ZhHans.MIXGO_ACC_8658_SENSOR = '获取六轴加速度传感器';
ZhHans.MIXGO_CAR_READBUSY = '是否运动？';
ZhHans.MIXGO_CE_SPEAKER = '扬声器';
ZhHans.MIXGO_CAR_KEEP_FORWARD = '持续前进';
ZhHans.MIXGO_CAR_KEEP_BACK = '持续后退';
ZhHans.MIXGO_CAR_KEEP_LEFT = '持续左转';
ZhHans.MIXGO_CAR_KEEP_RIGHT = '持续右转';
ZhHans.MIXLY_DewPoint = '结露点';
ZhHans.WeatherGet = '刷新天气 城市 ';
ZhHans.WeatherGetToday = '获取今日数据';
ZhHans.TodayQuality = '空气质量';
ZhHans.WeatherGetForecast = '获取15日报数据';
ZhHans.ForecastHigh = '最高温度';
ZhHans.ForecastLow = '最低温度';
ZhHans.ForecastYmd = '年月日';
ZhHans.ForecastAqi = '空气指数';
ZhHans.ForecastFx = '风向';
ZhHans.ForecastFl = '风力';
ZhHans.ForecastType = '天气';
ZhHans.SPACE_ALLOCATION = '空间分配';
ZhHans.MIXLY_LIVE_WEATHER = '天气实况';
ZhHans.MIXLY_3_DAY_WEATHER_FORECAST = '3天天气预报';
ZhHans.MIXLY_6_LIFE_INDEXES = '6项生活指数';
ZhHans.MIXLY_INFORMATION_CONFIGURATION = '信息配置';
ZhHans.MIXLY_GEOGRAPHIC_LOCATION = '地理位置';
ZhHans.MIXLY_API_PRIVATE_KEY = 'API私钥';
ZhHans.MIXLY_LANGUAGE = '语言';
ZhHans.MIXLY_CELSIUS = '摄氏度';
ZhHans.MIXLY_FAHRENHEIT = '华氏度';
ZhHans.MIXLY_TEMPERATURE_UNIT = '温度单位';
ZhHans.MIXLY_GET_DATA_UPDATE_TIME = '获取数据更新时间';
ZhHans.MIXLY_GET_SERVER_RESPONSE_STATUS_CODE = '获取服务器响应状态码';
ZhHans.MIXLY_WEATHER_PHENOMENON = '天气现象';
ZhHans.MIXLY_WEATHER_PHENOMENON_CODE = '天气现象代码';
ZhHans.MIXLY_TODAY = '今天';
ZhHans.MIXLY_TOMORROW = '明天';
ZhHans.MIXLY_DAY_AFTER_TOMORROW = '后天';
ZhHans.MIXLY_DAYTIME_WEATHER_PHENOMENON = '白天天气现象';
ZhHans.MIXLY_DAYTIME_WEATHER_PHENOMENON_CODE = '白天天气现象代码';
ZhHans.MIXLY_EVENING_WEATHER_PHENOMENON = '晚间天气现象';
ZhHans.MIXLY_EVENING_WEATHER_PHENOMENON_CODE = '晚间天气现象代码';
ZhHans.MIXLY_PROBABILITY_OF_PRECIPITATION = '降水概率(%)';
ZhHans.MIXLY_WIND_SPEED = '风速';
ZhHans.MIXLY_WIND_RATING = '风力等级';
ZhHans.MIXLY_CAR_WASH_INDEX = '洗车指数';
ZhHans.MIXLY_DRESSING_INDEX = '穿衣指数';
ZhHans.MIXLY_COLD_INDEX = '感冒指数';
ZhHans.MIXLY_MOVEMENT_INDEX = '运动指数';
ZhHans.MIXLY_TOURISM_INDEX = '旅游指数';
ZhHans.MIXLY_UV_INDEX = '紫外线指数';
ZhHans.MIXLY_RFID_SCAN_OK = '读到卡';
ZhHans.MIXLY_RFID_SCAN_NOTAGERR = '卡无反应';
ZhHans.MIXLY_RFID_SCAN_ERROR = '卡错误';
ZhHans.MIXLY_WIRELESS_SOCKET = '无线插座';
ZhHans.MIXLY_CREATE_MQTT_CLIENT_AND_CONNECT = '创建MixIO客户端并连接';
ZhHans.MIXLY_HOT_WHEEL = '风火轮';
ZhHans.MIXLY_SD_CARD_FILE_SYSTEM_MOUNT = '安装文件系统对象于路径';
ZhHans.MIXLY_SD_CARD = 'SD卡';
ZhHans.MIXLY_RAIN = '降雨量';
ZhHans.MIXLY_RAIN_TIME = '秒内的';
ZhHans.USE_MIXLY_KEY = '使用 Mixly Key';
ZhHans.CONNECT_TO_MIXIO = '连接到 MixIO';
ZhHans.MQTT_SEND_MESSAGE = 'MQTT发送消息';
ZhHans.TO_TOPIC = '到主题';
ZhHans.WHEN_THE_SUBJECT_IS_RECEIVED = '当收到主题';
ZhHans.MIXLY_ESP32_SERVO_360_TOOLTIP = '设置360°舵机的旋转速度(-10~10)，负数为逆时针，正数为顺时针，绝对值越大速度越快';
ZhHans.CONTROLS_OPERATOR_UNTIL = "直到";
ZhHans.CONTROLS_WHILE_SHI = '时';
ZhHans.MOTOR_DC = '直流电机';
ZhHans.MOTOR_N = '空档';
ZhHans.MOTOR_P = '刹车';
ZhHans.MIXLYCAR_WHEEL_LEFT = '左轮';
ZhHans.MIXLYCAR_WHEEL_RIGHT = '右轮';
ZhHans.MIXLY_MIXGOCE_NRF = '无线近场通信';
ZhHans.MIXLY_MIXGOCE_NRF_INIT = '初始化无线近场通信';
ZhHans.MIXLY_MIXGOCE_SET_NRF = '配置无线近场通信 信道 %1 %2 广播功率 %3 %4 地址 %5 %6 数据速率 %7 %8';
ZhHans.MIXLY_MIXGOCE_NRF_SEND = '无线近场通信 发送';
ZhHans.MIXLY_MIXGOCE_NRF_RECEIVE = '无线近场通信 接收';
ZhHans.MIXLY_MIXGOCE_SET_NRF1 = '配置无线的信道(0~125),广播功率,地址(5字节),数据速率';
ZhHans.MIXLY_MIXIO_SHARE_KEY = '项目授权码';
ZhHans.MIXLY_MIXGOPE_FIELD = '磁场';
ZhHans.MIXLY_MIXGOPE_AMPLITUDE = '振幅';
ZhHans.MIXGO_LINE_SENSOR_VAL = '巡线传感器数值';
ZhHans.MIXLY_MIXGO_CAR_SENSOR_ONBOARD_CHANGE = '板载传感器设置为';
ZhHans.MIXLY_MIXGO_CAR_USE_LINE_ONLY = '只使用巡线';
ZhHans.MIXLY_MIXGO_CAR_USE_PROXIMITY_ONLY = '只使用避障';
ZhHans.MIXLY_MIXGO_CAR_SENSOR_ONBOARD_AUTO_CHANGE = '巡线/避障自动切换';
ZhHans.MIXLY_MIXGO_CAR_BATTERY_LEFT = '电池剩余电量(V)'
ZhHans.MIXLY_MACHINE_WDT='看门狗'
ZhHans.MIXLY_MACHINE_WDT_TIMEOUT='喂食间隔'
ZhHans.MIXLY_MACHINE_WDT_INIT_TOOLTIP='初始化看门狗并设置喂养时间'
ZhHans.MIXLY_MACHINE_FEED='进行喂食'
ZhHans.MIXLY_MACHINE_WDT_FEED_TOOLTIP='需要定时喂食（调用），一旦超过间隔时间，将重启'
ZhHans.MIXLY_MACHINE_RESET='复位重置设备'
ZhHans.MIXLY_MACHINE_RESET_TOOLTIP='以类似于按下外部重置按钮的方式重置设备'
ZhHans.MIXLY_MP_ESPNOW_INIT_TOOLTIP= '初始化ESPNow并设置频道，频道范围0-13，功率范围2-21db';
ZhHans.MIXLY_MP_ESPNOW_RADIO_INIT_TOOLTIP= '广播频道范围0-13，功率范围2-21db';
ZhHans.MIXLY_MP_ESPNOW_RADIO_INIT= '设置无线广播频道为';
ZhHans.MIXLY_MP_ESPNOW_RADIO= '无线广播';
ZhHans.MIXLY_MP_ESPNOW_RADIO_MSG_RECEIVED= '当无线广播接收到消息时';
ZhHans.MIXLY_MP_ESPNOW_RADIO_MSG_RECEIVED_CERTAIN= '当无线广播接收到特定消息';
ZhHans.MIXLY_MP_ESPNOW_RADIO_RECEIVED_MSG= '无线广播接收到的消息';
ZhHans.MIXLY_MP_ESPNOW_CHANNEL= '频道';
ZhHans.MIXLY_MIXGO_ESPNOW_MAC= '获取本机MAC地址';
ZhHans.MIXLY_MIXGO_ESPNOW_INFO= '获取信号源MAC地址及信号强度信息';
ZhHans.MIXLY_MIXGO_ESPNOW_SEND= '发送消息';
ZhHans.MIXLY_MIXGO_ESPNOW_SEND_MAC= '向MAC地址';
ZhHans.MIXLY_MIXGO_ESPNOW_SEND_TOOLTIP= 'MAC地址为12位，如MAC为"FFFFFFFFFFFF"，则广播发送；最多发送250字节内容';
ZhHans.MIXLY_MIXGO_ESPNOW_RECV= '接收消息';
ZhHans.MIXLY_GAME_INIT_AS="初始化地图为";
ZhHans.MIXLY_GAME_INIT="初始化地图";
ZhHans.MIXLY_RE_SPIRITE="以角色为参考"
ZhHans.MIXLY_GAME_TOWARD="向";
ZhHans.MIXLY_GAME_MOVE="移动";
ZhHans.MIXLY_GAME_STEP="步";
ZhHans.MIXLY_GAME_TURN_LEFT="左";
ZhHans.MIXLY_GAME_TURN_RIGHT="右";
ZhHans.MIXLY_GAME_TURN="转";
ZhHans.MIXLY_GAME_ISDONE="是否到达终点"
ZhHans.MIXLY_GAME_ONE="地图一";
ZhHans.MIXLY_GAME_TWO="地图二";
ZhHans.MIXLY_GAME_THREE="地图三";
ZhHans.MIXLY_GAME_FOUR="地图四";
ZhHans.MIXLY_GAME_FIVE="地图五";
ZhHans.MIXLY_GAME_SIX="地图六";
ZhHans.MIXLY_GAME_SEVEN="地图七";
ZhHans.MIXLY_GAME_EIGHT="地图八";
ZhHans.MIXLY_GAME_NINE="地图九";
ZhHans.MIXLY_GAME_TEN="地图十";
ZhHans.MIXLY_GAME_ELE="地图十一";
ZhHans.MIXLY_GAME_TWEL="地图十二";
ZhHans.MIXLY_GAME_THIR="地图十三";
ZhHans.MIXLY_GAME_FORT="地图十四";
ZhHans.MIXLY_GAME_FIFT="地图十五";
ZhHans.MIXLY_GAME_SIXT="地图十六";
ZhHans.MIXLY_GAME_SEVENT="地图十七";
ZhHans.MIXLY_GAME_EIGHTT="地图十八";

ZhHans.MIXLY_GAME_ISPATH="侧是否存在道路？"
ZhHans.MIXLY_GAME_NORTH="北";
ZhHans.MIXLY_GAME_SOUTH="南";
ZhHans.MIXLY_GAME_EAST="东";
ZhHans.MIXLY_GAME_WEST="西";

ZhHans.MIXLY_GAME_SETMAP="设置地图";
ZhHans.MIXLY_GAME_LENGTH_IS="长为";
ZhHans.MIXLY_GAME_WIDTH_IS="宽为";
ZhHans.MIXLY_GAME_STARTPOS_IS="起点坐标为";
ZhHans.MIXLY_GAME_ENDPOS_IS="终点坐标为";
ZhHans.MIXLY_GAME_BACKGROUND="背景图片为";

ZhHans.MIXLY_GAME_SETPATHTYPE="设置路径样式为";
ZhHans.MIXLY_GAME_LAY="放置";
ZhHans.MIXLY_GAME_BARRIER="障碍";
ZhHans.MIXLY_GAME_COIN="金币";
ZhHans.MIXLY_GAME_INIT_CHARA="初始化角色为";
ZhHans.MIXLY_GAME_FACE="面朝";
ZhHans.MIXLY_GAME_GETPOINT="获取角色所获分数";
ZhHans.MIXLY_GAME_ISBARRIER="侧是否有障碍？";
ZhHans.MIXLY_GAME_RANDOMCAROIL="随机生成小车油量";
ZhHans.MIXLY_GAME_NEEDOIL="需要加油？";
ZhHans.MIXLY_GAME_ISGREEN="信号灯为绿灯";
ZhHans.MIXLY_GAME_ADDOIL="进加油站加油";
ZhHans.MIXLY_GAME_CHECKCIRCURIGHT="检查程序循环数目是否正确";
ZhHans.MIXLY_GAME_WALL="墙";
ZhHans.MIXLY_GAME_REDMARKER="红标";
ZhHans.MIXLY_GAME_BLUEMARKER="蓝标";
ZhHans.MIXLY_GAME_YELLOWMARKER="黄标";
ZhHans.MIXLY_GAME_GREENMARKER="绿标";
ZhHans.MIXLY_GAME_CHECK_WHETHER_PASS="是否经过";
ZhHans.MIXLY_GAME_GET_MARKER_NUM="获取经过"
ZhHans.MIXLY_GAME_NUMBER_OF_MARKER="的数目";

ZhHans.MIXLY_GAME_UP="上";
ZhHans.MIXLY_GAME_DOWN="下";
ZhHans.MIXLY_GAME_LEFT="左";
ZhHans.MIXLY_GAME_RIGHT="右";

ZhHans.MIXLY_GAME_FORWARD="前";
ZhHans.MIXLY_GAME_BACKWARD="后";

ZhHans.MIXLY_CV_IMREAD="读入图像";
ZhHans.MIXLY_CV_IMWRITE="保存图像";
ZhHans.MIXLY_CV_OR_PRESS="或按任意键跳过";
ZhHans.MIXLY_CV_WAITKEY_TOOLTIP="等待指定的时间（单位：毫秒）或用户按任意键，参数为0时必须用户按任意键触发程序继续运行";
ZhHans.MIXLY_CV_DRAWLINE_RECT_TOOLTIP="在图片指定位置绘制指定图案，线条粗细为负值时可绘制实心矩形";
ZhHans.MIXLY_CV_DESTROY_ALL="关闭所有图像窗口";
ZhHans.MIXLY_CV_LINE="线条";
ZhHans.MIXLY_CV_RECT="矩形";
ZhHans.MIXLY_CV_DRAWLINE_BEGIN="起点";
ZhHans.MIXLY_CV_DRAWLINE_END="终点";
ZhHans.MIXLY_CV_DRAWLINE_COLOR="线条颜色";
ZhHans.MIXLY_CV_DRAWLINE_THICKNESS="线条粗细";
ZhHans.MIXLY_CV_DRAWTEXT="添加文字";
ZhHans.MIXLY_CV_FACE_CLASSIFIER="创建人脸检测分类器 模型文件";
ZhHans.MIXLY_CV_FACE_DETECT="进行人脸识别 使用分类器";
ZhHans.MIXLY_CV_FACE_DETECT_SCALE="放缩比例";
ZhHans.MIXLY_CV_FACE_DETECT_NEIGHBOR="检验特征数";
ZhHans.MIXLY_CV_FACE_DETECT_RANGE="目标区域大小范围";
ZhHans.MIXLY_WEB_PLACE="地点";
ZhHans.MIXLY_WEB_KEY="密钥";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_WEATHER_NOW="获取天气实况";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_WEATHER_DAILY="获取天气逐日预报";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_WEATHER_HOURS="获取天气逐时预报";
ZhHans.MIXLY_WEB_DAILY="天数";
ZhHans.MIXLY_WEB_HOURS="小时";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_WEATHER_ALARM="获取气象灾害预警";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_LIFE_SUGGESTION="获取生活指数";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_AIR_NOW="获取空气质量实况";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_AIR_DAILY="获取空气质量逐日预报";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_TIDE_DAILY="获取24小时潮汐预报";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_GEO_SUN="获取日出日落信息";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_GEO_MOON="获取月出月落和月相信息";
ZhHans.MIXLY_DEPRECATED = "已弃用";
ZhHans.MIXLY_DEPRECATED_WARNING_TEXT = "警告：此块已弃用，将在未来删除";
ZhHans.LANG_LISTS_GET_VALUE_BY_INDEX_TOOLTIP = '返回数组中指定位置的值，索引从0开始。';
ZhHans.LANG_LISTS_SET_VALUE_BY_INDEX_TOOLTIP = '设置数组中指定位置的值，索引从0开始。';
ZhHans.MICROPYTHON_DISPLAY_FONT_SPACE = "字间距";
ZhHans.MICROPYTHON_DISPLAY_YES = "是";
ZhHans.MICROPYTHON_DISPLAY_NO = "否";
ZhHans.MIXLY_ESP32_MONITOR_SHOW_FRAME = '逐字显示字符串';
ZhHans.ME_GO_LIGHT_HEADLIGHT = '大灯';
ZhHans.ME_GO_MOTOR_EXTERN = '外接';
ZhHans.ME_GO_HALL_SENSOR = '霍尔传感器';
ZhHans.ME_GO_HALL_SENSOR_TURN = '转数';
ZhHans.ME_GO_HALL_SENSOR_DISTANCE = '距离';
ZhHans.ME_GO_SENSOR_MODE_OFF = '全部关闭';
ZhHans.MIXGO_ME_DISPLAY_VERTICAL = '纵向';
ZhHans.MIXGO_ME_DISPLAY_HORIZONTAL = '横向';
ZhHans.MIXLY_INCREMENT = '增量';
ZhHans.MIXLY_UPPERBOUND = '上限';
ZhHans.MIXLY_LOWERBOUND = '下限';
ZhHans.MIXLY_ENCODER_CHANGED = '状态改变';
ZhHans.MIXLY_ENCODER_LEFT_ROTATION = '向左旋转';
ZhHans.MIXLY_ENCODER_RIGHT_ROTATION = '向右旋转';
ZhHans.MIXLY_ENCODER_UPPER_OVERFLOW = '高于上限';
ZhHans.MIXLY_ENCODER_LOWER_OVERFLOW = '低于下限';
ZhHans.MIXLY_AI_UNIT = '智能对话';
ZhHans.MIXLY_AI_LANGUAGE_CHINESE = '中文-普通话';
ZhHans.MIXLY_AI_LANGUAGE_ENGLISH = '英语';
ZhHans.MIXLY_AI_LANGUAGE_CANTONESE = '粤语';
ZhHans.MICROPYTHON_HUSKYLENS_CHANGE_ALGORTHIM = '切换至算法';
ZhHans.MICROPYTHON_HUSKYLENS_UNTIL_SUCCESS = '直至成功';
ZhHans.MICROPYTHON_HUSKYLENS_ALGORITHM_OBJECT_TRACKING = '物体追踪';
ZhHans.MICROPYTHON_HUSKYLENS_ALGORITHM_OBJECT_RECOGNITION = '物体识别';
ZhHans.MICROPYTHON_HUSKYLENS_ALGORITHM_LINE_TRACKING = '巡线';
ZhHans.MICROPYTHON_HUSKYLENS_ALGORITHM_TAG_RECOGNITION = '标签识别';
ZhHans.MICROPYTHON_HUSKYLENS_ALGORITHM_OBJECT_CLASSIFICATION = '物体分类';
ZhHans.MICROPYTHON_HUSKYLENS_ALGORITHM_QR_CODE_RECOGNTITION = '二维码识别';
ZhHans.MICROPYTHON_HUSKYLENS_ALGORITHM_BARCODE_RECOGNTITION = '条形码识别';
ZhHans.MICROPYTHON_HUSKYLENS_COMMAND_REQUEST = '请求一次数据 存入结果';
ZhHans.MICROPYTHON_HUSKYLENS_READ_LEART_ID_COUNT = '已学习ID总数';
ZhHans.MICROPYTHON_HUSKYLENS_GET_FROM_RESULT = '从结果中获取';
ZhHans.MICROPYTHON_HUSKYLENS_IS_APPEAR = '是否在画面中';
ZhHans.MICROPYTHON_HUSKYLENS_IS_LEARNED = '是否已学习';
ZhHans.MICROPYTHON_HUSKYLENS_NEAR_CENTERED = '靠近中心';
ZhHans.MICROPYTHON_HUSKYLENS_X_CENTERED = 'X中心';
ZhHans.MICROPYTHON_HUSKYLENS_Y_CENTERED = 'Y中心';
ZhHans.MICROPYTHON_HUSKYLENS_X_ORIGIN = 'X起点';
ZhHans.MICROPYTHON_HUSKYLENS_Y_ORIGIN= 'Y起点';
ZhHans.MICROPYTHON_HUSKYLENS_X_TARGET = 'X终点';
ZhHans.MICROPYTHON_HUSKYLENS_Y_TARGET = 'Y终点';
ZhHans.MICROPYTHON_HUSKYLENS_ORDER = '第';
ZhHans.MICROPYTHON_HUSKYLENS_ORDER_END = '个';
ZhHans.MICROPYTHON_HUSKYLENS_SUM = '总数';
ZhHans.MICROPYTHON_HUSKYLENS_LEARN_ONCE = '自动学习一次';
ZhHans.MICROPYTHON_HUSKYLENS_FORGET = '遗忘当前算法的所有学习数据';
ZhHans.MICROPYTHON_HUSKYLENS_SET_CURRENT = '设置当前算法';
ZhHans.MICROPYTHON_HUSKYLENS_NAME = '名字为';
ZhHans.MICROPYTHON_HUSKYLENS_SCREEN_TEXT = '屏幕叠加显示文字';
ZhHans.MICROPYTHON_HUSKYLENS_SCREEN_CLEAR = '清除屏幕显示的文字';
ZhHans.MICROPYTHON_HUSKYLENS_TRIGGER = '触发';
ZhHans.MICROPYTHON_HUSKYLENS_SAVE_SDCARD = '保存到SD卡';
ZhHans.MICROPYTHON_HUSKYLENS_PHOTO = '拍照';
ZhHans.MICROPYTHON_HUSKYLENS_SCREENSHOT = '截屏';
ZhHans.MICROPYTHON_HUSKYLENS_SAVE_AS = '保存';
ZhHans.MICROPYTHON_HUSKYLENS_LOAD = '加载';
ZhHans.MICROPYTHON_HUSKYLENS_SDCARD_MODEL = '当前算法数据为SD卡';
ZhHans.MICROPYTHON_HUSKYLENS_MODEL_NUM = '号模型';
ZhHans.MIXLY_ESP32_MAX30102 = "心率血氧传感器";
ZhHans.MIXLY_ESP32_MAX30102_IR = "心率";
ZhHans.MIXLY_ESP32_MAX30102_RED = "血氧";
ZhHans.MIXLY_ESP32_APDS9960 = "手势传感器";
ZhHans.MIXLY_ESP32_APDS9960_COLOR = "颜色识别";
ZhHans.MIXLY_ESP32_APDS9960_GESTURE = "手势识别";
ZhHans.MIXLY_ESP32_APDS9960_APPROACH = "接近识别";
ZhHans.MIXLY_BLE_HANDLE = "蓝牙手柄";
ZhHans.MIXLY_ACC_SHAKE = "晃动值";

ZhHans.MPYTHON_DISPLAY_MODE_0 = '擦除';
ZhHans.MPYTHON_DISPLAY_MODE_1 = '绘制';
ZhHans.MPYTHON_DISPLAY_HOLLOW = '空心';
ZhHans.MPYTHON_DISPLAY_SOLID = '实心';
ZhHans.MPYTHON_DISPLAY_SHAPE_RECT_MESSAGE0 = '%1 %2 矩形 %3 x %4 y %5 宽 %6 高 %7';
ZhHans.MPYTHON_DISPLAY_SHAPE_RECT_TOOLTIP = '';
ZhHans.mpython_horizontal = '水平';
ZhHans.mpython_vertical = '垂直';
ZhHans.MPYTHON_DISPLAY_HVLINE_MESSAGE0 = '%1 %2 线 %3 x %4 y %5 长度 %6';
ZhHans.MPYTHON_DISPLAY_HVLINE_TOOLTIP = '';
ZhHans.mpython_display_hline_0 ='擦除';
ZhHans.mpython_display_hline_1 = '绘制';
ZhHans.mpython_display_line_MESSAGE0 ='%1 线%2 x1 %3  y1 %4 到  x2 %5 y2 %6';
ZhHans.mpython_display_line_TOOLTIP = '';
ZhHans.MIXLY_MIDI = '蜂鸣器';
ZhHans.MIXLY_CODE_RATE = '编码率';
ZhHans.MIXLY_SPREADING_FACTOR = '扩频因子';
ZhHans.MIXLY_TX_POWER = '发射功率';
ZhHans.MIXLY_SIGNAL_BANDWIDTH = '带宽';
ZhHans.MIXLY_PACKAGE = '包';
ZhHans.MIXLY_SIGNAL_STRENGTH = '信号强度';
ZhHans.MIXLY_SIGNAL_NOISE_RATE = '信噪比';
ZhHans.MIXLY_LORA_INIT_TOOLTIP = '频率433±20, 编码率5~8, 扩频因子6~12, 发射功率5~23';
ZhHans.ROTATION_FORWARD = "正转";
ZhHans.ROTATION_BACKWARD = "反转";
ZhHans.ME_GO_PITCH = '俯仰角';
ZhHans.ME_GO_ROLL = '横滚角';
ZhHans.BOARD_DIRECTION = '主板状态';
ZhHans.MIXLY_GET_GESTURE = '获取小车姿态';
ZhHans.MIXLY_GET_GESTURE_ALL = '获取姿态';
ZhHans.MIXLY_SET_VOLUME = '设置音量';
ZhHans.MIXLY_SET_VOLUME_TOOLTIP = '音量范围0-16';
ZhHans.MIXLY_GET_VOLUME = '获取音量';
ZhHans.MIXLY_PLAY_HINTS = '播放内置提示音';
ZhHans.MIXLY_PLAY_HINTS_TOOLTIP = '内置提示音范围0-47';
ZhHans.MIXLY_BACKGROUND_MUSIC = '背景音乐';
ZhHans.MIXLY_PROGRAM_BLOCK = '等待播放结束';
ZhHans.MIXLY_PLAY_TTS_TOOLTIP = '背景音乐范围0-15, 0为无背景音乐';
ZhHans.MIXLY_GET_NTP = '获取网络时间';
ZhHans.MIXLY_ME_GO_CAR_SENSOR_ONBOARD_AUTO_CHANGE = '自动切换';
ZhHans.MIXLY_ME_GO_CAR_LIGHT_SEEKING_ONLY = '只使用追光';
ZhHans.MIXLY_ME_GO_CAR_LIGHT_SEEKING_SENSOR = '追光传感器';
ZhHans.MIXLY_OTHER = '其他';
ZhHans.MIXLY_CONCENTRATION = '浓度';
ZhHans.MIXLY_PM_CONCENTRATION_TOOLTIP = '浓度单位ug/m³';
ZhHans.MIXLY_QR_CODE_RECOGNTITION = '二维码识别';
ZhHans.MIXLY_ALL_CODE_ANALYSIS = '遍历解析';
ZhHans.MIXLY_QR_CODE = '二维码';
ZhHans.MIXLY_POSITION_XY = '坐标';
ZhHans.MIXLY_AI_SENSOR_QR_CODE_TOOLTIP = '获取二维码对象的相应信息';
ZhHans.MIXLY_AI_SENSOR_QR_CODE_RECOGNTITION_TOOLTIP = '使用MixGo AI摄像头识别二维码，返回包含所有识别结果对象的列表';
ZhHans.MIXLY_AI_SENSOR_CONFIG_TOOLTIP = '设置MixGo AI与主板交互的端口';
ZhHans.MIXLY_BAR_CODE = '条形码';
ZhHans.MIXLY_BAR_CODE_RECOGNTITION = '条形码识别';
ZhHans.MIXLY_AI_SENSOR_BAR_CODE_TOOLTIP = '获取条形码对象的相应信息';
ZhHans.MIXLY_AI_SENSOR_BAR_CODE_RECOGNTITION_TOOLTIP = '使用MixGo AI摄像头识别条形码，返回包含所有识别结果对象的列表';
ZhHans.MIXLY_TAG = '标签码';
ZhHans.MIXLY_TAG_RECOGNTITION = '标签码识别';
ZhHans.MIXLY_AI_SENSOR_TAG_TOOLTIP = '获取标签码对象的相应信息';
ZhHans.MIXLY_AI_SENSOR_TAG_RECOGNTITION_TOOLTIP = '使用MixGo AI摄像头识别标签码，返回包含所有识别结果对象的列表';
ZhHans.MIXLY_LINE = '直线';
ZhHans.MIXLY_LINE_RECOGNTITION = '直线识别';
ZhHans.MIXLY_AI_SENSOR_LINE_TOOLTIP = '获取直线对象的相应信息';
ZhHans.MIXLY_AI_SENSOR_LINE_RECOGNTITION_TOOLTIP = '使用MixGo AI摄像头识别直线，返回包含所有识别结果对象的列表';
ZhHans.MIXLY_LINE_RECOGNTITION_ANGLE = '合并角度';
ZhHans.MIXLY_LINE_RECOGNTITION_SLOPE = '合并斜率';
ZhHans.MIXLY_LINE_ANGLE = '线角度';
ZhHans.MIXLY_CIRCLE = '圆形';
ZhHans.MIXLY_CIRCLE_RECOGNTITION = '圆形识别';
ZhHans.MIXLY_AI_SENSOR_CIRCLE_TOOLTIP = '获取圆形对象的相应信息';
ZhHans.MIXLY_AI_SENSOR_CIRCLE_RECOGNTITION_TOOLTIP = '使用MixGo AI摄像头识别圆形，返回包含所有识别结果对象的列表';
ZhHans.MIXLY_CIRCLE_RECOGNTITION_MAX = '合并最小半径';
ZhHans.MIXLY_CIRCLE_RECOGNTITION_MIN = '合并最大半径';
ZhHans.MIXLY_CIRCLE_AREA = '面积';
ZhHans.MIXLY_RECT = '矩形';
ZhHans.MIXLY_RECT_RECOGNTITION = '矩形识别';
ZhHans.MIXLY_AI_SENSOR_RECT_TOOLTIP = '获取矩形对象的相应信息';
ZhHans.MIXLY_AI_SENSOR_RECT_RECOGNTITION_TOOLTIP = '使用MixGo AI摄像头识别矩形，返回包含所有识别结果对象的列表';
ZhHans.MIXLY_COLOR_RECOGNTITION = '颜色识别';
ZhHans.MIXLY_COLOR_ANALYSIS = '颜色解析';
ZhHans.MIXLY_AI_SENSOR_COLOR_TOOLTIP = '获取颜色对象的相应信息';
ZhHans.MIXLY_AI_SENSOR_COLOR_RECOGNTITION_TOOLTIP = '使用MixGo AI摄像头识别颜色，返回包含所有识别结果对象的列表';
ZhHans.MIXLY_COLOR_LAB = '色域';
ZhHans.MIXLY_AI_SENSOR_COLOR_THRESHOLD = 'LAB阈值缩放范围';
ZhHans.MIXLY_COLOR_CHASE = '颜色追踪';
ZhHans.MIXLY_COLOR_CHASE_MERGE = '合并';
ZhHans.MIXLY_COLOR_CHASE_ANALYSIS = '解析';
ZhHans.MIXLY_ANALYSIS_RESULT = '解析结果';
ZhHans.MIXLY_AI_SENSOR_RGB_TOOLTIP = '分别设置MixGo AI摄像头两个RGB灯的色值（0~255），参数为包含三项的序列';
ZhHans.MIXLY_LOCAL_TRAIN = '自模型训练';
ZhHans.MIXLY_OBJECT_LIST = '物品列表';
ZhHans.MIXLY_MODEL_NAME = '模型名称';
ZhHans.MIXLY_TRAIN_TIME = '训练次数';
ZhHans.MIXLY_AI_SENSOR_LOCAL_TRAIN_TOOLTIP = '利用摄像头获取图像进行模型训练，模型训练过程中停止通信';
ZhHans.MIXLY_LOCAL_CLASS = '自模型识别';
ZhHans.MIXLY_CONFIDENCE_DEGREE = '置信度';
ZhHans.MIXLY_AI_SENSOR_LOCAL_CLASS_TOOLTIP = '获取自模型识别结果对象的相应信息';
ZhHans.MIXLY_MUSIC_RECORD = '音频录制';
ZhHans.MIXLY_MUSIC_PLAY = '音频播放';
ZhHans.MIXLY_AI_SENSOR_MUSIC_RECORD_TOOLTIP = '利用MixGo AI摄像头录制音频，录制过程程序不阻塞';
ZhHans.MIXLY_YOLO_RECOGNIZE = '外部模型加载';
ZhHans.MIXLY_ANCHOR = '锚点参数';
ZhHans.MIXLY_MODEL_PATH = '模型路径';
ZhHans.MIXLY_AI_SENSOR_YOLO_RECOGNIZE_TOOLTIP = '利用摄像头读取SD卡中的模型文件进行物品识别，返回包含所有识别结果对象的列表';
ZhHans.MIXLY_AI_SENSOR_YOLO_RECOGNIZE_RESULT_TOOLTIP = '获取外部模型加载结果对象的相应信息';
ZhHans.MIXLY_MIXPY_ALGORITHM_PREPARE = '加载地图';
ZhHans.MIXLY_MIXPY_ALGORITHM_PREPARE2 = '加载施工后的地图';
ZhHans.MIXLY_MIXPY_ALGORITHM_PREPARE_2_1 = '加载路线图';
ZhHans.MIXLY_MIXPY_ALGORITHM_PREPARE_2_2 = '加载路线图2';
ZhHans.MIXLY_MIXPY_ALGORITHM_ADD_SCHOOL = '将当前位置设为学校并加入路线';
ZhHans.MIXLY_MIXPY_ALGORITHM_GET_CURRENT_LOCATION = '获取当前位置';
ZhHans.MIXLY_MIXPY_ALGORITHM_CURRENT_SCHOOL = '当前位置是学校';
ZhHans.MIXLY_MIXPY_ALGORITHM_NOT_HOME = '没到小科家';
ZhHans.MIXLY_MIXPY_ALGORITHM_NOT_SCHOOL = '没到学校';
ZhHans.MIXLY_MIXPY_ALGORITHM_MOVE_RECENT = '移动到距离当前位置最近的岔路口';
ZhHans.MIXLY_MIXPY_ALGORITHM_FIND_PATH = '查找从当前位置是否有路直接通向未送走的同学家，并且这条路之前没有尝试过';
ZhHans.MIXLY_MIXPY_ALGORITHM_NEW_PATH = '有这样的位置和路';
ZhHans.MIXLY_MIXPY_ALGORITHM_VOID_PATH = '当前位置为空';
ZhHans.MIXLY_MIXPY_ALGORITHM_NO_PATH = '输出没有符合条件的路线';
ZhHans.MIXLY_MIXPY_ALGORITHM_SET_PATH = '将当前位置设为这条路通向的同学家';
ZhHans.MIXLY_MIXPY_ALGORITHM_ADD_PATH = '将当前位置加入路线';
ZhHans.MIXLY_MIXPY_ALGORITHM_DEL_PATH = '将当前位置从路线中删除';
ZhHans.MIXLY_MIXPY_ALGORITHM_RETURN_PATH = '回退到上一个位置';
ZhHans.MIXLY_MIXPY_ALGORITHM_NO_LEFT = '所有同学都被送回家了';
ZhHans.MIXLY_MIXPY_ALGORITHM_PRINT_PATH = '显示路线';
ZhHans.MIXLY_MIXPY_ALGORITHM_PRINT_PATH2 = '显示路线';
ZhHans.MIXLY_MIXPY_ALGORITHM_FIRST_BOOK = '取第一本书';
ZhHans.MIXLY_MIXPY_ALGORITHM_NO_RING = '门禁没响';
ZhHans.MIXLY_MIXPY_ALGORITHM_YES_RING = '门禁响了';
ZhHans.MIXLY_MIXPY_ALGORITHM_NEXT_BOOK = '取下一本书';
ZhHans.MIXLY_MIXPY_ALGORITHM_PRINT_BOOK = '输出书号';
ZhHans.MIXLY_MIXPY_ALGORITHM_NUMBER_ZERO = '计数器赋值为0';
ZhHans.MIXLY_MIXPY_ALGORITHM_NUMBER_ADD = '计数器+1';
ZhHans.MIXLY_MIXPY_ALGORITHM_PRINT_NUMBER = '输出计数器大小';
ZhHans.MIXLY_MIXPY_ALGORITHM_ALL_BOOKS = '二分法开始';
ZhHans.MIXLY_MIXPY_ALGORITHM_ALL_BOOKS2 = '顺序法开始';
ZhHans.MIXLY_MIXPY_ALGORITHM_TWO_LEFT= '书架剩余书籍≥2本';
ZhHans.MIXLY_MIXPY_ALGORITHM_DIVIDE_BOOKS = '将书架上的书均匀分成两堆';
ZhHans.MIXLY_MIXPY_ALGORITHM_GET_HALF_BOOKS = '取出前一堆书';
// ZhHans.MIXLY_MIXPY_ALGORITHM_CHECK_HALF_BOOKS = '检查前一堆书是否会使得门禁响起';
ZhHans.MIXLY_MIXPY_ALGORITHM_DELETE_BOOK = '去除书架上的书，将取出的书重新放回书架';
ZhHans.MIXLY_MIXPY_ALGORITHM_DELETE_BOOKS = '去除前一堆书';
ZhHans.MIXLY_MIXPY_ALGORITHM_DELETE_BOOKS2 = '去除后一堆书';
ZhHans.MIXLY_MIXPY_ALGORITHM_USE_SEQUENCE = '顺序法开始';
// ZhHans.MIXLY_MIXPY_ALGORITHM_PRINT_SEQUENCE = '输出顺序法查找次数';
ZhHans.MIXLY_MIXPY_ALGORITHM_USE_DIVIDE = '二分法开始';
// ZhHans.MIXLY_MIXPY_ALGORITHM_PRINT_DIVIDE = '输出二分查找次数';
ZhHans.MPYTHON_DISPLAY_HVLINE_MESSAGE1 = 'OLED显示屏 %1 %2 %3 线 %4 x %5 y %6 长度 %7';
ZhHans.MPYTHON_DISPLAY_SHAPE_RECT_MESSAGE1 = 'OLED显示屏 %1 %2 %3 矩形 %4 x %5 y %6 宽 %7 高 %8';
ZhHans.mpython_display_line_MESSAGE1 ='OLED显示屏 %1 %2 线%3 x1 %4  y1 %5 到  x2 %6 y2 %7';
ZhHans.MIXLY_REQUESTS_GET = '发起请求';
ZhHans.MIXLY_GET_CURRENT_TIME = '获取当前时间';
ZhHans.MIXLY_REQUESTS_ALL = '全部内容';
ZhHans.MIXLY_REQUESTS_MESSAGE = '消息内容';
ZhHans.MIXLY_REQUESTS_LEN = '发送包长度';
ZhHans.MIXLY_REQUESTS_GET_LEN = '接收包长度';
ZhHans.MIXLY_CONNECTTO = '连接到';
ZhHans.MIXLY_INIT_SUBSCRIBE = '初始化并订阅';
ZhHans.MIXLY_OPEN_DEBUG = '打开调试';
ZhHans.MIXLY_USE_STRING_TUPLE = '使用字符串/元组';
ZhHans.MIXLY_PM25_SENSOR = 'PM2.5粉尘传感器';
ZhHans.MIXLY_GNSS_SENSOR = 'GNSS定位器';
ZhHans.MIXLY_GNSS_SENSOR_GET_TIME_TOOLTIP = '返回卫星数据时间信息列表，#0年,1月,2日,3星期,4时,5分,6秒,7微秒';
ZhHans.MIXLY_GNSS_SENSOR_GET_LOCATE_TOOLTIP = '返回定位信息列表，#0经度方向,1经度值,2纬度方向,3纬度值,4海拔m,5速度m/s,6航向°';
ZhHans.MIXLY_GNSS_SENSOR_GET_STATUS_TOOLTIP = '返回状态信息列表，#0是否定位成功,1定位模式,2定位用卫星数量';
ZhHans.MIXLY_ESP32_WIFI_CONNECTION_EVENT1 = 'WIFI已连接';
ZhHans.MIXLY_ESP32_WIFI_CONNECTION_EVENT2 = '路由器成功分配IP';
ZhHans.MIXLY_ESP32_WIFI_CONNECTION_EVENT3 = 'WIFI断开';
ZhHans.MIXLY_MIXBOT_SHOW_SCROLL_STRING_TOOLTIP = '单字符静态显示，多字符滚动显示，滚动显示无阻塞';
ZhHans.MIXLY_MIXBOT_AMBIENTBRIGHT = '获取环境亮度';
ZhHans.MIXLY_MIXBOT_SCREEN_ROTATE = '设置屏幕旋转';
ZhHans.MIXLY_MIXBOT_MOTOR_STATUS = '获取电机状态';
ZhHans.MIXLY_MIXBOT_MOTOR_STATUS_TOOLTIP = '返回两个元组，分别对应左右两个电机状态，依次为模式，速度，功率，圈数'
ZhHans.MIXLY_MIXBOT_MOTOR_TURNS = '圈数';
ZhHans.MIXLY_MIXBOT_MOVE_TOOLTIP = '功率/速度参数范围-100~100, 圈数参数范围-32768~32767)，负号代表反转';
ZhHans.MIXLY_MIXBOT_SOUND_LOUDNESS = '获取麦克风音量';
ZhHans.MIXLY_MIXBOT_LINE_SENSOR_CALIBRATE_WHITE = '校正白色';
ZhHans.MIXLY_MIXBOT_LINE_SENSOR_CALIBRATE_BLACK = '校正黑色';
ZhHans.MIXLY_MIXBOT_LINE_SENSOR_CALIBRATE_RESET = '恢复出厂';
ZhHans.MIXLY_MIXBOT_BUZZER = '喇叭';
ZhHans.MIXLY_AI_SENSOR_ASR_RECOGNISE_CORPUS = '拼音语料库';
ZhHans.MIXLY_AI_SENSOR_ASR_RECOGNISE_TOOLTIP = '返回一个元组，分别为语音识别出的语料内容和置信度';
ZhHans.MIXLY_IR_STRENGTH = '红外光强';
ZhHans.MIXLY_LIGHT_STRENGTH = '自然光强';
ZhHans.MIXLY_MIXBOT_MOTOR_EXTERN_TOOLTIP = '速度百分比范围-100~100%，负号代表反转';
ZhHans.MIXLY_TRAFFIC_LIGHT= '交通灯';
ZhHans.MIXLY_TRAFFIC_LIGHT_RED_ON= '红灯亮';
ZhHans.MIXLY_TRAFFIC_LIGHT_RED_BLINK= '红灯闪';
ZhHans.MIXLY_TRAFFIC_LIGHT_YELLOW_ON= '黄灯亮';
ZhHans.MIXLY_TRAFFIC_LIGHT_YELLOW_BLINK= '黄灯闪';
ZhHans.MIXLY_TRAFFIC_LIGHT_GREEN_ON= '绿灯亮';
ZhHans.MIXLY_TRAFFIC_LIGHT_GREEN_BLINK= '绿灯闪';
ZhHans.MIXLY_KNOB_POTENTIOMETER= '旋钮电位器';
ZhHans.MIXLY_REFLECTION_BRIGHTNESS= '反射亮度';
ZhHans.MIXLY_ENVIRONMENT_BRIGHTNESS= '环境亮度';
ZhHans.MIXLY_SERVO_MOTOR= '伺服电机';
ZhHans.MIXLY_RELATIVE = "相对";
ZhHans.MIXLY_MIXBOT_SERVO_BLOCK_OR_NOT = "是否堵住";
ZhHans.MIXLY_MIXBOT_SERVO_FINISH_OR_NOT = "是否转完";
ZhHans.MIXLY_MIXBOT_SERVO_SET_STOP_MODE = "设置停止模式";
ZhHans.MIXLY_MIXBOT_SERVO_STOP_MODE_KEEP = "保持位置";
ZhHans.MIXLY_MIXBOT_SERVO_STOP_MODE_COAST = "惯性滑行";
ZhHans.MIXLY_MIXBOT_SERVO_STOP_MODE_BRAKE = "阻力制动";
ZhHans.MIXLY_MIXBOT_SERVO_TURN_DIRECTION = "转向设置";
ZhHans.MIXLY_MIXBOT_SERVO_NEAREST_PATH = "最短路径";
ZhHans.MIXLY_MIXBOT_SERVO_RELATIVE_ORIGIN_PATH = "设置当前位置为原点";
ZhHans.MIXLY_MIXBOT_SERVO_LIKE_ENCODING_MOTOR = "类编码电机";
ZhHans.MIXLY_MIXBOT_SERVO_LIKE_ORDINARY_MOTOR = "类普通电机";
ZhHans.MIXLY_MIXBOT_EXTERN_TOUCHED = "被触碰";
ZhHans.MIXLY_MIXBOT_SERVO_ABSOLUTE_ANGLE_TOOLTIP = "绝对角度运行模式角度范围0~359";
ZhHans.MIXLY_MIXBOT_SERVO_RELATIVE_ANGLE_TOOLTIP = "相对角度运行模式角度范围-8388607~8388607";
ZhHans.MIXLY_MIXBOT_EXTERN_GET_ADDR = "扫描序号";
ZhHans.MIXLY_MIXBOT_EXTERN_SET_ADDR = "修改序号";
ZhHans.MIXPY_REQUESTS_GET_RESULT = '并获取相应结果';
ZhHans.MIXLY_TOOLTIP_MOTOR_SETUP = '双路PWM电机驱动(HR8833)初始化';
ZhHans.SHUTDOWN = '关机';
ZhHans.DIGITAL = '数字';
ZhHans.ANALOG = '模拟';
ZhHans.BITBOT = '飞乙';
ZhHans.MIXBOT = '超霸大师';
ZhHans.MICROPYTHON_BITBOT_SHUTDOWN_TOOLTIP = '仅电池供电下，将关机断电。USB供电下，只是关闭电机输出。';
ZhHans.ONBOARD_TFT_DISPLAY_SHAPE_RECT_MESSAGE0 = '绘制 %1 矩形 %2 x %3 y %4 宽 %5 高 %6 颜色 %7';
ZhHans.ONBOARD_TFT_DISPLAY_HVLINE_MESSAGE0 = '绘制 %1 线 %2 x %3 y %4 长度%5 颜色 %6';
ZhHans.mpython_display_line_MESSAGE0 ='绘制 线条%1 x1%2 y1 %3 到 x2 %4 y2 %5 颜色 %6';
ZhHans.MIXLY_TOUCH_SLIDE = "滑动触摸";
ZhHans.MIXLY_TOUCH_SLIDE_TOOLTIP = "触摸值，默认接近0，往IO3方向触摸滑动值变大，往IO4方向触摸滑动值变小。";
ZhHans.MIXLY_EXTERN_SONAR = "超声波传感器";
ZhHans.MIXLY_EXTERN_INDICATOR_LIGHT = "指示灯";
ZhHans.MIXLY_SCREEN_FILL = "屏幕填充";
ZhHans.MIXLY_SDCARD_MOUNT = "挂载到目录";
ZhHans.MIXLY_STRENGTH = "强度";
ZhHans.MIXLY_INIT_CLOCK = "初始化时钟";
ZhHans.MIXLY_CENTER_POS = "中心坐标";
ZhHans.GET_RTCTIME = "读取RTC时间";
ZhHans.SET_TIME = "设置时间";
ZhHans.DRAW_CLOCK = "绘制时钟";
ZhHans.CLEAR_CLOCK = "清除指针";
ZhHans.ONBOARD_TFT_DISPLAY_SHAPE_CIRCLE_MESSAGE0 = '绘制 %1 圆形 %2 x %3 y %4 半径 %5 颜色 %6';
ZhHans.RETURN_SUCCESS_OR_NOT = "返回是否成功";
ZhHans.MIXLY_MIXBOT_SOUND_SET_LOUDNESS = '设置麦克风音量';
ZhHans.MIXLY_RECORD_AUDIO = '录制音频';
ZhHans.MIXLY_PLAY_AUDIO = '播放音频';
ZhHans.MIXLY_PLAY_ONLINE_AUDIO = '播放网络音频';
ZhHans.MIXLY_DISPLAY_MATRIX_WRITE_NOW = '立即生效';
ZhHans.MIXLY_DISPLAY_MATRIX_DONT_WRITE = '暂不生效';
ZhHans.MIXLY_DISPLAY_MATRIX_WRITE = '设置生效';
ZhHans.weather_solo = '分体式气象站';
ZhHans.MIXLY_ABBR = '缩写';
ZhHans.MIXLY_ACCUMULATED = '累积';
ZhHans.MIXLY_AVERAGE = '平均';
ZhHans.MIXLY_AI_SENSOR_LICENSEPLATE_RECOGNTITION_TOOLTIP = '使用MixGo AI摄像头识别车牌，返回包含所有识别结果对象的列表';
ZhHans.MIXLY_AI_SENSOR_LICENSEPLATE_TOOLTIP = '获取车牌对象的相应信息';
ZhHans.MIXLY_LICENSEPLATE = '车牌';
ZhHans.MIXLY_FACE = '人脸';
ZhHans.MIXLY_FACE_CLASSIFIER = '人脸检测';
ZhHans.MIXLY_AI_SENSOR_FACE_TOOLTIP = '获取人脸对象的相应信息';
ZhHans.MIXLY_AI_SENSOR_BAR_FACE_CLASSIFIER_TOOLTIP = '使用MixGo AI摄像头检测人脸，返回包含所有识别结果对象的列表';
ZhHans.MIXLY_20OBJECTS = '20物体';
ZhHans.MIXLY_FIND_20OBJECTS = '20物体识别';
ZhHans.MIXLY_AI_SENSOR_20OBJECTS_TOOLTIP = '获取20物体对象的相应信息';
ZhHans.MIXLY_AI_SENSOR_BAR_FIND_20OBJECTS_TOOLTIP = '使用MixGo AI摄像头检测20物体，返回包含所有识别结果对象的列表';
ZhHans.MIXLY_BUTTON = '按钮';
ZhHans.WHETHER_IS_PRESSED = '是否被按着';
ZhHans.MIXLY_GET_BATTERY = '获取电池电量（v）';
ZhHans.MIXLY_GET_JOYSTICK = '获取摇杆';
ZhHans.MIXLY_HANDLE_SHUTDOWN ='设置手柄关机';
ZhHans.MIXLY_ESP32_EXTERN_GRAY_NEAR = "红外灰度传感器";
ZhHans.PIN_NUMBERING = '端口';
ZhHans.MIXLY_LIGHT_OFF = '不亮';
ZhHans.MIXLY_LIGHT_RED = '红';
ZhHans.MIXLY_LIGHT_GREEN = '绿';
ZhHans.MIXLY_LIGHT_BLUE = '蓝';
ZhHans.MIXLY_LIGHT_YELLOW = '黄';
ZhHans.MIXLY_LIGHT_CYAN = '青';
ZhHans.MIXLY_LIGHT_PURPLE = '紫';
ZhHans.MIXLY_LIGHT_WHITE = '白';
ZhHans.MIXLY_EXTERN_LIGHTUV = '环境光传感器';
ZhHans.MIXLY_GET_ENV_LIGHT = '获取环境光';
ZhHans.MIXLY_GET_ULTRAVIOLET = '获取紫外线强度';
ZhHans.LOGIC_OPERATION_NOR = '同或';
ZhHans.LOGIC_OPERATION_XOR = '异或';
ZhHans.LOGIC_OPERATION_TOOLTIP_NOR = "如果两个输入结果相同，则返回真；如果两个输入结果不同，则返回假";
ZhHans.LOGIC_OPERATION_TOOLTIP_XOR = "如果两个输入结果不同，则返回真；如果两个输入结果相同，则返回假";
ZhHans.MIXLY_MIXGO_NOVA_POTENTIAL_NUM = "获取电位器数值";
ZhHans.MIXLY_POWER_SUPPLY  = "供电量";
ZhHans.SET_USB = "设置USB2.0接口";
ZhHans.MIXLY_SPK_STATE = "设置喇叭使能";
ZhHans.MIXLY_IR_INPUT1 = "NEC_8";
ZhHans.MIXLY_IR_INPUT2 = "NEC_16";
ZhHans.MIXLY_IR_INPUT3 = "NEC_other";
ZhHans.MIXlY_RECV_FUN = "红外接收";
ZhHans.MILY_PAUSE = "暂停";
ZhHans.MIXLY_RECOVER = "恢复";
ZhHans.MIXLY_IR_SEND_samsung1 = "NEC";
ZhHans.MIXLY_IR_SEND_samsung2 = "Samsung";
ZhHans.MIXLY_TR_SEND_RC = "RC5";
ZhHans.MIXLY_INTERNAL_VARIABLE = "变量";
ZhHans.MIXLY_IR_SEND = "红外发射";
ZhHans.MIXLY_CONTROL = "控制位";
ZhHans.MIXLY_TRANSMIT_CONVEN_DATA = "当类型为NEC/Samsung时，命令码范围为0~255、地址码范围为0~65535、控制位包含-1，0，1；当类型为RC5时，命令码范围为0~63、地址码范围为0~31、控制位包含0，1";
ZhHans.MIXLY_IR_TRANSMIT_DONE = "红外发射 是否发送完毕";
ZhHans.MIXLY_IR_CMD_CODE = "命令码";
ZhHans.MIXLY_IR_ADDR_CODE = "地址码";
ZhHans.MIXLY_IR_RAW_CODE = "原始码";
ZhHans.MIXLY_IR_PULSE = "脉冲数组";
ZhHans.MIXLY_IR_WHETHER_RECV = "是否有新数据";
ZhHans.MIXLY_IR_TIMEOUT = "超时";
ZhHans.MIXLY_RTCGETTIMESTAMP = "获取时间戳";
ZhHans.MIXLY_ESP32_RTC_GET_TIMESTAMP_TOOLTIP = "返回实时时钟的时间戳";
ZhHans.MIXLY_RTC_TIMESTAMP = "时间戳";
ZhHans.MIXLY_TO_JSON = "json 序列化";
ZhHans.MIXLY_TO_JSON_TOOLTIP = "将字典转化为json字符串";
ZhHans.MIXLY_CONVERT_TO_JSON = "json 反序列化";
ZhHans.MIXLY_CONVERT_TO_JSON_TOOLTIP = "将json字符串转化为字典";
ZhHans.MIXLY_DUTY_RATIO = "(值，频率)";
ZhHans.MIXLY_OP_GARBAGE_COLLECT = "运行垃圾回收";
ZhHans.MIXLY_GET_MEM_ALLOC = "获取已使用内存容量（Byte）";
ZhHans.MIXLY_GET_MEM_FREE = "获取未使用内存容量（Byte）";
ZhHans.MIXLY_GET_UNIQUE_IDEN = "获取主控板的唯一标识";
ZhHans.MIXLY_KEYBOARD_INPUT = "键盘输入";
ZhHans.MIXLY_SPECIAL_KEY = "特殊按键";
ZhHans.MIXLY_GENERAL_KEY = "普通按键";
ZhHans.MIXLY_RELEASE = "自动释放";
ZhHans.MIXLY_SPECIAL_KEY0 = "无操作";
ZhHans.MIXLY_SPECIAL_KEY1 = "左Control键";
ZhHans.MIXLY_SPECIAL_KEY2 = "左Shift键";
ZhHans.MIXLY_SPECIAL_KEY4 = "左Alt键";
ZhHans.MIXLY_SPECIAL_KEY8 = "左Windows键";
ZhHans.MIXLY_SPECIAL_KEY16 = "右Control键";
ZhHans.MIXLY_SPECIAL_KEY32 = "右Shift键";
ZhHans.MIXLY_SPECIAL_KEY64 = "右Alt键";
ZhHans.MIXLY_SPECIAL_KEY128 = "右Windows键";
ZhHans.MIXLY_MOUSE_INPUT = "鼠标输入";
ZhHans.MIXLY_MOUSE_KEYS = "鼠标按键";
ZhHans.MIXLY_X_CHANGES = "x轴移动 ";
ZhHans.MIXLY_Y_CHANGES = "y轴移动 ";
ZhHans.MIXLY_MOUSE_LEFT_KEY = "左键";
ZhHans.MIXLY_MOUSE_RIGHT_KEY = "右键";
ZhHans.MIXLY_MOUSE_MID_KEY = "中键";
ZhHans.MIXLY_WHEEL_CHANGES = "滚轮滚动";
ZhHans.MIXLY_STR_PRINT = "字符输入";
ZhHans.MIXLY_STR_PRINT_TIME_DELAY = "每个字符间隔";
ZhHans.GENERALKEY_CONTAINER_TOOLTIP = "增加、删除或重新排列各部分以此重新配置这个按键组合。";
ZhHans.GENERALKEY_CREATE_EMPTY_TITLE = "空按键组合";
ZhHans.GENERALKEY_CREATE_WITH_INPUT_WITH = "组合普通按键为";
ZhHans.GENERALKEY_TUPLE_CREATE_TOOLTIP = "组合按键为元组，最多可组合3个按键";
ZhHans.DRAW_POINTER = "绘制指针";
ZhHans.DRAW_POINTER_ANGLE = "角度(0~359°)";
ZhHans.DRAW_POINTER_TOOLTIP = "绘制指针角度的范围为 0~359°";
ZhHans.blockpy_REQUESTS_GET_ATTR_JSON = '响应内容json反序列化';
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_WEATHER_NOW_TEXT = "天气现象文字";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_WEATHER_NOW_CODE = "天气现象代码";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_WEATHER_NOW_FEEL = "体感温度(℃)";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_WEATHER_NOW_HUMIDITY = "相对湿度(%)";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_WEATHER_NOW_VISIBILITY = "能见度(km)";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_WEATHER_NOW_WIND_DIRECT_DEGREE = "风向角度(°)";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_WEATHER_NOW_WIND_SPEED = "风速(km/h)";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_WEATHER_NOW_WIND_SCALE = "风力等级";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_WEATHER_NOW_CLOUDS = "云量(%)";
ZhHans.MIXLY_WEB_DATA_SENIVERSE_GET_WEATHER_DAILY_DAY = "天";
ZhHans.MIXLY_RAINFALL = "降水量(mm)";
ZhHans.MIXLY_AIR_NOW_AIRQUAILTY = "空气质量指数";
ZhHans.MIXLY_AIR_NOW_PM25 = "PM2.5颗粒物1小时平均值。（μg/m³）";
ZhHans.MIXLY_AIR_NOW_PM10 = "PM10颗粒物1小时平均值。（μg/m³）"
ZhHans.MIXLY_AIR_NOW_so2 = "二氧化硫1小时平均值。（μg/m³）";
ZhHans.MIXLY_AIR_NOW_no2 = "二氧化氮1小时平均值。（μg/m³）";
ZhHans.MIXLY_AIR_NOW_co = "一氧化碳1小时平均值。（mg/m³）";
ZhHans.MIXLY_AIR_NOW_o3 = "臭氧1小时平均值。(μg/m³)";
ZhHans.MIXLY_AIR_NOW_pp = "首要污染物";
ZhHans.MIXLY_AIR_NOW_quailty = "空气质量类别";
ZhHans.MIXLY_AIR_NOW_last_update = "数据发布时间";
ZhHans.MIXLY_WEATHER_ALARM_TITLE = "灾害预警标题";
ZhHans.MIXLY_WEATHER_ALARM_TYPE = "灾害预警类型"; 
ZhHans.MIXLY_WEATHER_ALARM_LEVEL = "灾害预警等级";
ZhHans.MIXLY_WEATHER_ALARM_DESCRIPTION = "灾害预警描述";
ZhHans.MIXLY_WEATHER_ALARM_PUB_DATE = "灾害预警发布时间";
ZhHans.MIXLY_LIFE_SUGGESTION_AC = "空调开启建议";
ZhHans.MIXLY_LIFE_SUGGESTION_AP = "空气污染扩散条件";
ZhHans.MIXLY_LIFE_SUGGESTION_AIRING = "晾晒";
ZhHans.MIXLY_LIFE_SUGGESTION_ALLERGY = "过敏";
ZhHans.MIXLY_LIFE_SUGGESTION_BEER = "啤酒";
ZhHans.MIXLY_LIFE_SUGGESTION_BOATING = "划船";
ZhHans.MIXLY_LIFE_SUGGESTION_CAR_WS = "洗车";
ZhHans.MIXLY_LIFE_SUGGESTION_CHILL = "风寒";
ZhHans.MIXLY_LIFE_SUGGESTION_COMFORT = "舒适度";
ZhHans.MIXLY_LIFE_SUGGESTION_DATING = "约会";
ZhHans.MIXLY_LIFE_SUGGESTION_DRESSING = "穿衣";
ZhHans.MIXLY_LIFE_SUGGESTION_FISHING = "钓鱼";
ZhHans.MIXLY_LIFE_SUGGESTION_FLU = "感冒";
ZhHans.MIXLY_LIFE_SUGGESTION_HAIR_DRESS = "美发";
ZhHans.MIXLY_LIFE_SUGGESTION_KITEFLYING = "放风筝";
ZhHans.MIXLY_LIFE_SUGGESTION_MAKEUP = "化妆";
ZhHans.MIXLY_LIFE_SUGGESTION_MOOD = "心情";
ZhHans.MIXLY_LIFE_SUGGESTION_MORNINIG_SPORT = "晨练";
ZhHans.MIXLY_LIFE_SUGGESTION_NIGHT_LIFE = "夜生活";
ZhHans.MIXLY_LIFE_SUGGESTION_ROAD_CONDI = "路况";
ZhHans.MIXLY_LIFE_SUGGESTION_SHOPPING = "购物";
ZhHans.MIXLY_LIFE_SUGGESTION_SPORT = "运动";
ZhHans.MIXLY_LIFE_SUGGESTION_SUNSCREEN = "防晒";
ZhHans.MIXLY_LIFE_SUGGESTION_TRAFFIC = "交通";
ZhHans.MIXLY_LIFE_SUGGESTION_TRAVEL = "旅游";
ZhHans.MIXLY_LIFE_SUGGESTION_UMBRELLA = "雨伞";
ZhHans.MIXLY_LIFE_SUGGESTION_UV = "紫外线";
ZhHans.MIXLY_TIDE_DAILY_HEIGHT= "潮汐高度cm";
ZhHans.MIXLY_TIDE_DAILY_0_TIME= "第一次落潮时间";
ZhHans.MIXLY_TIDE_DAILY_0_HEIGHT= "第一次落潮高度(cm)";
ZhHans.MIXLY_TIDE_DAILY_1_TIME= "第一次涨潮时间";
ZhHans.MIXLY_TIDE_DAILY_1_HEIGHT= "第一次涨潮高度(cm)";
ZhHans.MIXLY_TIDE_DAILY_2_TIME= "第二次落潮时间";
ZhHans.MIXLY_TIDE_DAILY_2_HEIGHT= "第二次落潮高度(cm)";
ZhHans.MIXLY_TIDE_DAILY_3_TIME= "第二次涨潮时间";
ZhHans.MIXLY_TIDE_DAILY_3_HEIGHT= "第二次涨潮高度(cm)";
ZhHans.MIXLY_LOCATION_SEARCH_ID = "城市ID";
ZhHans.MIXLY_LOCATION_SEARCH_NAME = "城市名称";
ZhHans.MIXLY_LOCATION_SEARCH_COUNTRY = "国家代码";
ZhHans.MIXLY_LOCATION_SEARCH_PATH = "隶属层级，从小到大";
ZhHans.MIXLY_LOCATION_SEARCH_TIMEZONE = "IANA标准时区名称";
ZhHans.MIXLY_LOCATION_SEARCH_TIMEZONE_O = "相对于UTC时区的偏移量";
ZhHans.MIXLY_SUNRISE_T = "日出时间";
ZhHans.MIXLY_SUNSET_T = "日落时间";
ZhHans.MIXLT_MOONRISE_T = "月出时间";
ZhHans.MIXLY_MOONSET_T ="月落时间";
ZhHans.MIXLY_MOON_FRACTION = "月球被照明部分比例，范围0~1";
ZhHans.MIXLY_MOON_PHASE = "月相，范围0~1";
ZhHans.MIXLY_MOON_PHASE_NAME = "月相名称";
ZhHans.MIXLY_DRAW_POINTER_DU = "(°)";
ZhHans.MIXLY_TEMPERATURE_UNIT_ = "(℃)";
ZhHans.MIXLY_PRESSURE_UNIT = "(hpa)";
ZhHans.MIXLY_PARAMETER_FREE = "全部信息(字典类型)";
ZhHans.MIXLY_KEYBOARD = "键盘";
ZhHans.MIXLY_IS_CONNECT = "是否被设备连接";
ZhHans.MIXLY_SEND_KEYBOARD = "发送键盘";
ZhHans.MIXLY_BATTERY ="电池电量";
ZhHans.MIXLY_RANGE_OF_BATTERY = "电池的电量范围为 0~100%";
ZhHans.MIXLY_MOUSE = "鼠标";
ZhHans.MIXLY_SEND = "发送";
ZhHans.MIXLY_VARIABLE_UNPACK = "解包";
ZhHans.MIXLY_TO_HEX = "转16进制字符";
ZhHans.MIXLY_PYTHON_TOOLTIP_TOHEX = "将一个值转换为一个16进制字符";
ZhHans.MIXLY_RTC_GET_TIME_STR = "RTC 获取时间字符串";
ZhHans.MIXLY_TIMESTAMP_TO_DATA ="转化为日期";
ZhHans.MIXLY_TO_INDEX_SEQUENCE = "的序号和内容组合为索引序列";
ZhHans.MIXLY_INDEX = "序号";
ZhHans.MIXLY_TOTO_INDEX_SEQUENC_TOOLTIP = "将列表的所有项和序号组合为索引序列,例如(0,'A')为一个索引序列";
ZhHans.MIXLY_generate_cartesian_product_TOOLTIP = "生成所给参数的笛卡尔积，每个元素重复次数根据参数决定";
ZhHans.MIXLY_PRODUCT = "生成";
ZhHans.MIXLY_GENERATE_CARTESIAN_PRODUCT = "笛卡尔积";
ZhHans.MIXLY_EVERY_PER_ELEPER_ELEMENT = "每个元素重复";
ZhHans.MIXLY_EMPTY_REMINDER = "至少需要一个可迭代对象";
ZhHans.MIXLY_RGB_RAW = 'RGB颜色原始值';
ZhHans.GET_IR_STRENGTH = '获取红外光';
ZhHans.MIXLY_RADAR = '微波雷达';
ZhHans.MIXlY_INTERACTION = '感应';
ZhHans.MIXLY_DETECTION_THRESHOLD ='检测门限';
ZhHans.MIXLY_DELAY_TIME = '延时时间';
ZhHans.MIXLY_THRESHOLD_TOOLTIP = '门限设置越大，感应距离越近';
ZhHans.MIXLY_DELAY_TIME_RANGE = '延时时间范围为200ms～500ms';
ZhHans.MIXLY_GET_TO_INTERACTION ='获取是否触发感应';
ZhHans.MIXLY_MUSIC_PLAYER = '音乐播放器';
ZhHans.MIXLY_WHETHER ='是否';
ZhHans.MIXLY_STOPPED ='已停止';
ZhHans.MIXLY_PLAYING ='在播放';
ZhHans.MIXLY_PAUSED = '已暂停';
ZhHans.MIXLY_PLAYER_SET_VOLUME_TOOLTIP = '音量范围为0～30';
ZhHans.MIXLY_PLAYER_DIRECTORY_LOOP = '目录循环';
ZhHans.MIXLY_PLAYER_SINGLE_STOP = '单曲停止';
ZhHans.MIXLY_PLAYER_SEQUENTIAL_PLAY ='顺序播放';
ZhHans.MIXLY_PLAYER_INSERT_MUSIC ='插播歌曲';
ZhHans.MIXLY_COLOR_SENSOR = '颜色传感器';
ZhHans.MIXLY_ALTITUDE_SENSOR = '气压传感器';
ZhHans.MIXLY_TEMP_AND_HUMIDITY_SENSOR = '温湿度传感器';
ZhHans.MIXLY_LASER_RANGE_SENSOR = '激光测距传感器';
ZhHans.MIXLY_GEOMAGNETIC_SENSOR = '地磁传感器';
ZhHans.MIXLY_ENVIRONMENT_LIGHT = '环境光';
ZhHans.MIXLY_NEXT = '接近';
ZhHans.MIXLY_RADIO_FREQUENCY_READER = "无线射频读写器";
ZhHans.MIXLY_NINE_AXIS_SENSOR ='九轴传感器';
ZhHans.MIXLY_RADAR_SENSOR = '微波雷达传感器';
ZhHans.MIXLY_PLAYER_PLAY_MUSIC_TOOTIP = '曲目输入参数:int类型用来表示歌曲曲目(曲目顺序为放进去U盘的先后), str类型用来表示歌曲短文件名(默认mixly*.mp3,不支持中文,可用*省略)';
ZhHans.MIXLY_DRIVER = '驱动';
ZhHans.MIXLY_IDENTIFY_ONCE_AND_SAVE = '识别一次并保存结果';
ZhHans.MIXLY_BE_IDENTIFIED = '被识别到？';
ZhHans.MIXLY_HELLO_XIAOZHI = '你好小智(唤醒词)';
ZhHans.MIXLY_XIAOZHIXIAOZHI = '小智小智(唤醒词)';
ZhHans.MIXLY_THE_FIRST = '第一个/自定义';
ZhHans.MIXLY_THE_SECOND = '第二个/自定义';
ZhHans.MIXLY_THE_THIRD = '第三个/自定义';
ZhHans.MIXLY_THE_FOURTH = '第四个/自定义';
ZhHans.MIXLY_THE_FIFTH = '第五个/自定义';
ZhHans.MIXLY_THE_SIXTH = '第六个/自定义';
ZhHans.MIXLY_THE_SEVENTH = '第七个/自定义';
ZhHans.MIXLY_THE_EIGHTH = '第八个/自定义';
ZhHans.MIXLY_THE_NINTH = '第九个/自定义';
ZhHans.MIXLY_THE_TENTH = '第十个/自定义';
ZhHans.MIXLY_THE_ELEVENTH = '第十一个/自定义';
ZhHans.MIXLY_THE_TWELFTH = '第十二个/自定义';
ZhHans.MIXLY_THE_13TH = '第十三个/自定义';
ZhHans.MIXLY_THE_14TH = '第十四个/自定义';
ZhHans.MIXLY_THE_15TH = '第十五个/自定义';
ZhHans.MIXLY_THE_16TH = '第十六个/自定义';
ZhHans.MIXLY_THE_17TH = '第十七个/自定义';
ZhHans.MIXLY_THE_18TH = '第十八个/自定义';
ZhHans.MIXLY_THE_19TH = '第十九个/自定义';
ZhHans.MIXLY_THE_20TH = '第二十个/自定义';
ZhHans.MIXLY_Turn_on_the_lights = '打开灯光｜开灯';
ZhHans.MIXLY_Turn_off_the_lights = '关闭灯光｜关灯';
ZhHans.MIXLY_Turn_up_the_brightness = '调高亮度｜亮一点';
ZhHans.MIXLY_Turn_down_the_brightness = '调低亮度｜暗一点';
ZhHans.MIXLY_Set_it_to_red = '设为红色｜红色';
ZhHans.MIXLY_Set_it_to_orange = '设为橙色｜橙色';
ZhHans.MIXLY_Set_it_to_yellow = '设为黄色｜黄';
ZhHans.MIXLY_Set_it_to_green = '设为绿色｜绿';
ZhHans.MIXLY_Set_it_to_cyan = '设为青色｜青';
ZhHans.MIXLY_Set_it_to_blue = '设为蓝色｜蓝';
ZhHans.MIXLY_Set_it_to_purple = '设为紫色｜紫';
ZhHans.MIXLY_Set_it_to_white = '设为白色｜白';
ZhHans.MIXLY_Turn_on_the_fan = '打开风扇｜开启风扇';
ZhHans.MIXLY_Turn_off_the_fan = '关闭风扇｜关掉风扇';
ZhHans.MIXLY_First_gear = '风速一档';
ZhHans.MIXLY_Wind_speed_second = '风速二档';
ZhHans.MIXLY_Third_gear = '风速三档';
ZhHans.MIXLY_Previous = '上一页';
ZhHans.MIXLY_Next_page = '下一页';
ZhHans.MIXLY_Show_smiley_face = '显示笑脸';
ZhHans.MIXLY_Show_crying_face = '显示哭脸';
ZhHans.MIXLY_Show_love = '显示爱心';
ZhHans.MIXLY_Close_display = '关闭显示';
ZhHans.MIXLY_Start_execution = '开始执行';
ZhHans.MIXLY_Accelerate = '加速';
ZhHans.MIXLY_retard = '减速';
ZhHans.MIXLY_Query_temperature = '查询温度';
ZhHans.MIXLY_Query_humidity = '查询湿度';
ZhHans.MIXLY_Query_brightness = '查询亮度';
ZhHans.MIXLY_Query_sound = '查询声音';
ZhHans.MIXLY_Query_time = '查询时间';
ZhHans.MIXLY_Query_distance = '查询距离';
ZhHans.MIXLY_Query_pressure = '查询气压';
ZhHans.MIXLY_Query_key = '查询按键';
ZhHans.MIXLY_Query_touch = '查询触摸';
ZhHans.MIXLY_Query_color = '查询颜色';
ZhHans.MIXLY_THE_RECOGNIZED_CMD = '识别到的命令词ID';
ZhHans.MIXLY_RECOGNIZED_STATE = '识别状态是否被唤醒';
ZhHans.MIXLY_WHETHER_BROADCAST = '识别状态是否在播报';
ZhHans.MIXLY_CI130X_GET_THE_RECOGNIZED_STATE_TOOLTIP = '返回（是否被唤醒，是否在播报）元祖，用[0],[1]索取对应的';
ZhHans.MIXLY_UNIT = '单位';
ZhHans.MIXLY_HYETAL = '雨量';
ZhHans.MIXLY_BUTTON2 = '按键';
ZhHans.MIXLY_PAY = '付款';
ZhHans.MIXLY_CARSH_CHANGE = '找零';
ZhHans.MIXLY_COUNTDOWN = '倒计时';
ZhHans.MIXLY_TIMING = '定时';
ZhHans.MIXLY_AT_THE_MOMENT = '此刻';
ZhHans.MIXLY_SHOW = '显示';
ZhHans.MIXLY_LAMPLIGHT = '灯光';
ZhHans.MIXLY_ACCELERATION = '加速度';
ZhHans.MIXLY_RMB_UNIT = '元';
ZhHans.MIXLY_GEAR = '档';
ZhHans.MIXLY_LAYER = '层';
ZhHans.MIXLY_GRAM = '克';
ZhHans.MIXLY_METER = '米';
ZhHans.MIXLY_CENTIMETER = '厘米';
ZhHans.MIXLY_MILLIMETER = '毫米';
ZhHans.MIXLY_LUMEN = '流明';
ZhHans.MIXLY_DECIBEL = '分贝';
ZhHans.MIXLY_hectopascal = '百帕';
ZhHans.MIXLY_PERCENT = '百分比';
ZhHans.MIXLY_METER_PER_SEC = '米每秒';
ZhHans.MIXLY_WRONG = '错误';
ZhHans.MIXLY_GOOD = '好的';
ZhHans.MIXLY_DECREASE = '减少';
ZhHans.MIXLY_CMD = '命令';
ZhHans.MIXLY_INCREASE_VOLUME ='增大音量';
ZhHans.MIXLY_REDUCE_VOLUME = '减小音量';
ZhHans.MIXLY_MAX_VOLUME = '最大音量';
ZhHans.MIXLY_MINIMUM = '最小音量';
ZhHans.MIXLY_OPEN_RESPONSE = '打开回复';
ZhHans.MIXLY_CLOSE_RESPONSE = '关闭回复';
ZhHans.MILXY_ENTER_WAKE_UP = '进入唤醒';
ZhHans.MIXLY_QUIT_WAKE_UP = '退出唤醒';
ZhHans.MIXLY_CAR = '小车';
ZhHans.MIXLY_LIGHT_SENSOR = '光敏传感器';
ZhHans.MIXLY_BODY_SENSOR = '人体感应传感器';
ZhHans.MIXLY_SOILHUM_SENSOR = '土壤湿度传感器';
ZhHans.MIXLY_GYROSCOPE_SENSOR = '陀螺仪传感器';
ZhHans.MIXLY_Horizontal_inclination = '水平方向倾斜度';
ZhHans.MIXLY_Infrared_pyroelectric_sensor = '红外热释电传感器';
ZhHans.MIXLY_SERIAL_NUMBER = '电子标签编号';
ZhHans.MIXLY_BE_SHAKED = '被摇晃';
ZhHans.MIXLY_BE_CONNETCED = '被连接';
ZhHans.MIXLY_AT = '于';
ZhHans.MIXLY_SMARTCAMERA = '摄像头';
ZhHans.MIXLY_PROCCED = '进行';
ZhHans.MIXLY_RECOGNIZED_RESULT = '识别結果';
ZhHans.MIXLY_RFID_SCAN_OK = '读到卡';
ZhHans.MIXLY_RFID_SCAN_NOTAGERR = '卡无反应';
ZhHans.MIXLY_RFID_SCAN_ERROR = '卡错误';
ZhHans.MIXLY_WEIGH_SENSOR = '称重传感器';
ZhHans.MIXLY_Calibration_ratio = '校准比例';
ZhHans.MIXLY_KEYBOARD_AND_MOUSE = '键鼠';
})();